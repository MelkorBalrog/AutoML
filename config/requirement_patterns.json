[
  {
    "Pattern ID": "AVD-implement-Driving_Function-Software_Component",
    "Trigger": "AV Dev: Driving Function --[Implement]--> Software Component",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) for the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "For autonomous vehicle functionality development."
  },
  {
    "Pattern ID": "AVD-implement-Driving_Function-Software_Component-COND",
    "Trigger": "AV Dev: Driving Function --[Implement]--> Software Component",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) for the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "For autonomous vehicle functionality development."
  },
  {
    "Pattern ID": "AVD-implement-Driving_Function-Software_Component-COND-CONST",
    "Trigger": "AV Dev: Driving Function --[Implement]--> Software Component",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) for the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "For autonomous vehicle functionality development."
  },
  {
    "Pattern ID": "AVD-implement-Driving_Function-Software_Component-CONST",
    "Trigger": "AV Dev: Driving Function --[Implement]--> Software Component",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) for the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "For autonomous vehicle functionality development."
  },
  {
    "Pattern ID": "EARS-EVENT",
    "Trigger": "Event-driven behavior",
    "Template": "the shall within, verified by.",
    "Variables": [
      "<condition>"
    ],
    "Notes": "Suitable for automotive timing/latency requirements."
  },
  {
    "Pattern ID": "EARS-EVENT-COND",
    "Trigger": "Event-driven behavior",
    "Template": "When <condition>, The shall within, verified by.",
    "Variables": [
      "<condition>"
    ],
    "Notes": "Suitable for automotive timing/latency requirements."
  },
  {
    "Pattern ID": "EARS-EVENT-COND-CONST",
    "Trigger": "Event-driven behavior",
    "Template": "When <condition>, The shall within, verified by constrained by <constraint>.",
    "Variables": [
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Suitable for automotive timing/latency requirements."
  },
  {
    "Pattern ID": "EARS-EVENT-CONST",
    "Trigger": "Event-driven behavior",
    "Template": "the shall within, verified by constrained by <constraint>.",
    "Variables": [
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Suitable for automotive timing/latency requirements."
  },
  {
    "Pattern ID": "EARS-STATE",
    "Trigger": "State-dependent behavior",
    "Template": "While, the shall and maintain.",
    "Variables": [],
    "Notes": "Operational modes (e.g., Manual, Automated, Degraded)."
  },
  {
    "Pattern ID": "EARS-STATE-COND",
    "Trigger": "State-dependent behavior",
    "Template": "When <condition>, While, the shall and maintain.",
    "Variables": [
      "<condition>"
    ],
    "Notes": "Operational modes (e.g., Manual, Automated, Degraded)."
  },
  {
    "Pattern ID": "EARS-STATE-COND-CONST",
    "Trigger": "State-dependent behavior",
    "Template": "When <condition>, While, the shall and maintain constrained by <constraint>.",
    "Variables": [
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Operational modes (e.g., Manual, Automated, Degraded)."
  },
  {
    "Pattern ID": "EARS-STATE-CONST",
    "Trigger": "State-dependent behavior",
    "Template": "While, the shall and maintain constrained by <constraint>.",
    "Variables": [
      "<constraint>"
    ],
    "Notes": "Operational modes (e.g., Manual, Automated, Degraded)."
  },
  {
    "Pattern ID": "EARS-UBIQ",
    "Trigger": "Generic (roles identifiable)",
    "Template": "The shall to achieve, verified by and recorded in.",
    "Variables": [],
    "Notes": "Operation/engineering-aligned ubiquitous requirement."
  },
  {
    "Pattern ID": "EARS-UBIQ-COND",
    "Trigger": "Generic (roles identifiable)",
    "Template": "When <condition>, The shall to achieve, verified by and recorded in.",
    "Variables": [
      "<condition>"
    ],
    "Notes": "Operation/engineering-aligned ubiquitous requirement."
  },
  {
    "Pattern ID": "EARS-UBIQ-COND-CONST",
    "Trigger": "Generic (roles identifiable)",
    "Template": "When <condition>, The shall to achieve, verified by and recorded in constrained by <constraint>.",
    "Variables": [
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Operation/engineering-aligned ubiquitous requirement."
  },
  {
    "Pattern ID": "EARS-UBIQ-CONST",
    "Trigger": "Generic (roles identifiable)",
    "Template": "The shall to achieve, verified by and recorded in constrained by <constraint>.",
    "Variables": [
      "<constraint>"
    ],
    "Notes": "Operation/engineering-aligned ubiquitous requirement."
  },
  {
    "Pattern ID": "EARS-UNWANTED",
    "Trigger": "Fault/HAZARD response",
    "Template": "If occurs, the shall within and transition to, logging evidence in.",
    "Variables": [],
    "Notes": "Undesired scenario handling requirement."
  },
  {
    "Pattern ID": "EARS-UNWANTED-COND",
    "Trigger": "Fault/HAZARD response",
    "Template": "When <condition>, If occurs, the shall within and transition to, logging evidence in.",
    "Variables": [
      "<condition>"
    ],
    "Notes": "Undesired scenario handling requirement."
  },
  {
    "Pattern ID": "EARS-UNWANTED-COND-CONST",
    "Trigger": "Fault/HAZARD response",
    "Template": "When <condition>, If occurs, the shall within and transition to, logging evidence in constrained by <constraint>.",
    "Variables": [
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Undesired scenario handling requirement."
  },
  {
    "Pattern ID": "EARS-UNWANTED-CONST",
    "Trigger": "Fault/HAZARD response",
    "Template": "If occurs, the shall within and transition to, logging evidence in constrained by <constraint>.",
    "Variables": [
      "<constraint>"
    ],
    "Notes": "Undesired scenario handling requirement."
  },
  {
    "Pattern ID": "GOV-approves-Role-Activity",
    "Trigger": "Governance: Role --[Approves]--> Activity",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Activity-COND",
    "Trigger": "Governance: Role --[Approves]--> Activity",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Activity",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Approves]--> Activity",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Business_Unit",
    "Trigger": "Governance: Role --[Approves]--> Business Unit",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Approves]--> Business Unit",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Business Unit",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Approves]--> Business Unit",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Component",
    "Trigger": "Governance: Role --[Approves]--> Component",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Component-COND",
    "Trigger": "Governance: Role --[Approves]--> Component",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Component",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Component-CONST",
    "Trigger": "Governance: Role --[Approves]--> Component",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Data",
    "Trigger": "Governance: Role --[Approves]--> Data",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Data-COND",
    "Trigger": "Governance: Role --[Approves]--> Data",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Data",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Data-CONST",
    "Trigger": "Governance: Role --[Approves]--> Data",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Document",
    "Trigger": "Governance: Role --[Approves]--> Document",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Document-COND",
    "Trigger": "Governance: Role --[Approves]--> Document",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Document",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Document-CONST",
    "Trigger": "Governance: Role --[Approves]--> Document",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Driving_Function",
    "Trigger": "Governance: Role --[Approves]--> Driving Function",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Approves]--> Driving Function",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Driving Function",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Approves]--> Driving Function",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Field_Data",
    "Trigger": "Governance: Role --[Approves]--> Field Data",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Approves]--> Field Data",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Field Data",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Approves]--> Field Data",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Fleet",
    "Trigger": "Governance: Role --[Approves]--> Fleet",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Approves]--> Fleet",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Fleet",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Approves]--> Fleet",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Guideline",
    "Trigger": "Governance: Role --[Approves]--> Guideline",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Approves]--> Guideline",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Guideline",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Approves]--> Guideline",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Incident",
    "Trigger": "Governance: Role --[Approves]--> Incident",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Incident-COND",
    "Trigger": "Governance: Role --[Approves]--> Incident",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Incident",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Approves]--> Incident",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Approves]--> Lifecycle Phase",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Approves]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Approves]--> Lifecycle Phase",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Approves]--> Manufacturing Process",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Approves]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Approves]--> Manufacturing Process",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Metric",
    "Trigger": "Governance: Role --[Approves]--> Metric",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Metric-COND",
    "Trigger": "Governance: Role --[Approves]--> Metric",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Metric",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Approves]--> Metric",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Model",
    "Trigger": "Governance: Role --[Approves]--> Model",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Model-COND",
    "Trigger": "Governance: Role --[Approves]--> Model",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Model",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Model-CONST",
    "Trigger": "Governance: Role --[Approves]--> Model",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Operation",
    "Trigger": "Governance: Role --[Approves]--> Operation",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Operation-COND",
    "Trigger": "Governance: Role --[Approves]--> Operation",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Operation",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Approves]--> Operation",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Organization",
    "Trigger": "Governance: Role --[Approves]--> Organization",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Organization-COND",
    "Trigger": "Governance: Role --[Approves]--> Organization",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Organization",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Approves]--> Organization",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Policy",
    "Trigger": "Governance: Role --[Approves]--> Policy",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Policy-COND",
    "Trigger": "Governance: Role --[Approves]--> Policy",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Policy",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Approves]--> Policy",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Principle",
    "Trigger": "Governance: Role --[Approves]--> Principle",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Principle-COND",
    "Trigger": "Governance: Role --[Approves]--> Principle",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Principle",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Approves]--> Principle",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Procedure",
    "Trigger": "Governance: Role --[Approves]--> Procedure",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Approves]--> Procedure",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Procedure",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Approves]--> Procedure",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Process",
    "Trigger": "Governance: Role --[Approves]--> Process",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Process-COND",
    "Trigger": "Governance: Role --[Approves]--> Process",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Process",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Process-CONST",
    "Trigger": "Governance: Role --[Approves]--> Process",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Record",
    "Trigger": "Governance: Role --[Approves]--> Record",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Record-COND",
    "Trigger": "Governance: Role --[Approves]--> Record",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Record",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Record-CONST",
    "Trigger": "Governance: Role --[Approves]--> Record",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Approves]--> Safety Compliance",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Approves]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Approves]--> Safety Compliance",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Approves]--> Safety Issue",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Approves]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Approves]--> Safety Issue",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Software_Component",
    "Trigger": "Governance: Role --[Approves]--> Software Component",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Approves]--> Software Component",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Software Component",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Approves]--> Software Component",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Standard",
    "Trigger": "Governance: Role --[Approves]--> Standard",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Standard-COND",
    "Trigger": "Governance: Role --[Approves]--> Standard",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Standard",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Approves]--> Standard",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-System",
    "Trigger": "Governance: Role --[Approves]--> System",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-System-COND",
    "Trigger": "Governance: Role --[Approves]--> System",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> System",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-System-CONST",
    "Trigger": "Governance: Role --[Approves]--> System",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Task",
    "Trigger": "Governance: Role --[Approves]--> Task",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Task-COND",
    "Trigger": "Governance: Role --[Approves]--> Task",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Task",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Task-CONST",
    "Trigger": "Governance: Role --[Approves]--> Task",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Test_Suite",
    "Trigger": "Governance: Role --[Approves]--> Test Suite",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Approves]--> Test Suite",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Test Suite",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Approves]--> Test Suite",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Vehicle",
    "Trigger": "Governance: Role --[Approves]--> Vehicle",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Approves]--> Vehicle",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Vehicle",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Approves]--> Vehicle",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Approves]--> Verification Plan",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Approves]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Approves]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-approves-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Approves]--> Verification Plan",
    "Template": "Engineering team shall approve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Activity",
    "Trigger": "Governance: Role --[Audits]--> Activity",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Activity-COND",
    "Trigger": "Governance: Role --[Audits]--> Activity",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Activity",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Audits]--> Activity",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Business_Unit",
    "Trigger": "Governance: Role --[Audits]--> Business Unit",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Audits]--> Business Unit",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Business Unit",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Audits]--> Business Unit",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Component",
    "Trigger": "Governance: Role --[Audits]--> Component",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Component-COND",
    "Trigger": "Governance: Role --[Audits]--> Component",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Component",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Component-CONST",
    "Trigger": "Governance: Role --[Audits]--> Component",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Data",
    "Trigger": "Governance: Role --[Audits]--> Data",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Data-COND",
    "Trigger": "Governance: Role --[Audits]--> Data",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Data",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Data-CONST",
    "Trigger": "Governance: Role --[Audits]--> Data",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Document",
    "Trigger": "Governance: Role --[Audits]--> Document",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Document-COND",
    "Trigger": "Governance: Role --[Audits]--> Document",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Document",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Document-CONST",
    "Trigger": "Governance: Role --[Audits]--> Document",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Driving_Function",
    "Trigger": "Governance: Role --[Audits]--> Driving Function",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Audits]--> Driving Function",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Driving Function",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Audits]--> Driving Function",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Field_Data",
    "Trigger": "Governance: Role --[Audits]--> Field Data",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Audits]--> Field Data",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Field Data",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Audits]--> Field Data",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Fleet",
    "Trigger": "Governance: Role --[Audits]--> Fleet",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Audits]--> Fleet",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Fleet",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Audits]--> Fleet",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Guideline",
    "Trigger": "Governance: Role --[Audits]--> Guideline",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Audits]--> Guideline",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Guideline",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Audits]--> Guideline",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Incident",
    "Trigger": "Governance: Role --[Audits]--> Incident",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Incident-COND",
    "Trigger": "Governance: Role --[Audits]--> Incident",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Incident",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Audits]--> Incident",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Audits]--> Lifecycle Phase",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Audits]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Audits]--> Lifecycle Phase",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Audits]--> Manufacturing Process",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Audits]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Audits]--> Manufacturing Process",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Metric",
    "Trigger": "Governance: Role --[Audits]--> Metric",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Metric-COND",
    "Trigger": "Governance: Role --[Audits]--> Metric",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Metric",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Audits]--> Metric",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Model",
    "Trigger": "Governance: Role --[Audits]--> Model",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Model-COND",
    "Trigger": "Governance: Role --[Audits]--> Model",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Model",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Model-CONST",
    "Trigger": "Governance: Role --[Audits]--> Model",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Operation",
    "Trigger": "Governance: Role --[Audits]--> Operation",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Operation-COND",
    "Trigger": "Governance: Role --[Audits]--> Operation",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Operation",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Audits]--> Operation",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Organization",
    "Trigger": "Governance: Role --[Audits]--> Organization",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Organization-COND",
    "Trigger": "Governance: Role --[Audits]--> Organization",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Organization",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Audits]--> Organization",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Policy",
    "Trigger": "Governance: Role --[Audits]--> Policy",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Policy-COND",
    "Trigger": "Governance: Role --[Audits]--> Policy",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Policy",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Audits]--> Policy",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Principle",
    "Trigger": "Governance: Role --[Audits]--> Principle",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Principle-COND",
    "Trigger": "Governance: Role --[Audits]--> Principle",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Principle",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Audits]--> Principle",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Procedure",
    "Trigger": "Governance: Role --[Audits]--> Procedure",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Audits]--> Procedure",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Procedure",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Audits]--> Procedure",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Process",
    "Trigger": "Governance: Role --[Audits]--> Process",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Process-COND",
    "Trigger": "Governance: Role --[Audits]--> Process",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Process",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Process-CONST",
    "Trigger": "Governance: Role --[Audits]--> Process",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Record",
    "Trigger": "Governance: Role --[Audits]--> Record",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Record-COND",
    "Trigger": "Governance: Role --[Audits]--> Record",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Record",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Record-CONST",
    "Trigger": "Governance: Role --[Audits]--> Record",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Audits]--> Safety Compliance",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Audits]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Audits]--> Safety Compliance",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Audits]--> Safety Issue",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Audits]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Audits]--> Safety Issue",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Software_Component",
    "Trigger": "Governance: Role --[Audits]--> Software Component",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Audits]--> Software Component",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Software Component",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Audits]--> Software Component",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Standard",
    "Trigger": "Governance: Role --[Audits]--> Standard",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Standard-COND",
    "Trigger": "Governance: Role --[Audits]--> Standard",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Standard",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Audits]--> Standard",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-System",
    "Trigger": "Governance: Role --[Audits]--> System",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-System-COND",
    "Trigger": "Governance: Role --[Audits]--> System",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> System",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-System-CONST",
    "Trigger": "Governance: Role --[Audits]--> System",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Task",
    "Trigger": "Governance: Role --[Audits]--> Task",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Task-COND",
    "Trigger": "Governance: Role --[Audits]--> Task",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Task",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Task-CONST",
    "Trigger": "Governance: Role --[Audits]--> Task",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Test_Suite",
    "Trigger": "Governance: Role --[Audits]--> Test Suite",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Audits]--> Test Suite",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Test Suite",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Audits]--> Test Suite",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Vehicle",
    "Trigger": "Governance: Role --[Audits]--> Vehicle",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Audits]--> Vehicle",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Vehicle",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Audits]--> Vehicle",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Audits]--> Verification Plan",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Audits]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Audits]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-audits-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Audits]--> Verification Plan",
    "Template": "Engineering team shall audit the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Policy",
    "Trigger": "Governance: Organization --[Authorizes]--> Policy",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Policy-COND",
    "Trigger": "Governance: Organization --[Authorizes]--> Policy",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Policy-COND-CONST",
    "Trigger": "Governance: Organization --[Authorizes]--> Policy",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Policy-CONST",
    "Trigger": "Governance: Organization --[Authorizes]--> Policy",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Procedure",
    "Trigger": "Governance: Organization --[Authorizes]--> Procedure",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Procedure-COND",
    "Trigger": "Governance: Organization --[Authorizes]--> Procedure",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Procedure-COND-CONST",
    "Trigger": "Governance: Organization --[Authorizes]--> Procedure",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Procedure-CONST",
    "Trigger": "Governance: Organization --[Authorizes]--> Procedure",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Process",
    "Trigger": "Governance: Organization --[Authorizes]--> Process",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Process-COND",
    "Trigger": "Governance: Organization --[Authorizes]--> Process",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Process-COND-CONST",
    "Trigger": "Governance: Organization --[Authorizes]--> Process",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Process-CONST",
    "Trigger": "Governance: Organization --[Authorizes]--> Process",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Activity",
    "Trigger": "Governance: Role --[Authorizes]--> Activity",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Activity-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Activity",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Activity",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Activity",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Business_Unit",
    "Trigger": "Governance: Role --[Authorizes]--> Business Unit",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Business Unit",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Business Unit",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Business Unit",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Component",
    "Trigger": "Governance: Role --[Authorizes]--> Component",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Component-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Component",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Component",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Component-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Component",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Data",
    "Trigger": "Governance: Role --[Authorizes]--> Data",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Data-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Data",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Data",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Data-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Data",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Document",
    "Trigger": "Governance: Role --[Authorizes]--> Document",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Document-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Document",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Document",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Document-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Document",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Driving_Function",
    "Trigger": "Governance: Role --[Authorizes]--> Driving Function",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Driving Function",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Driving Function",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Driving Function",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Field_Data",
    "Trigger": "Governance: Role --[Authorizes]--> Field Data",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Field Data",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Field Data",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Field Data",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Fleet",
    "Trigger": "Governance: Role --[Authorizes]--> Fleet",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Fleet",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Fleet",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Fleet",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Guideline",
    "Trigger": "Governance: Role --[Authorizes]--> Guideline",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Guideline",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Guideline",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Guideline",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Incident",
    "Trigger": "Governance: Role --[Authorizes]--> Incident",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Incident-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Incident",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Incident",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Incident",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Authorizes]--> Lifecycle Phase",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Lifecycle Phase",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Authorizes]--> Manufacturing Process",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Manufacturing Process",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Metric",
    "Trigger": "Governance: Role --[Authorizes]--> Metric",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Metric-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Metric",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Metric",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Metric",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Model",
    "Trigger": "Governance: Role --[Authorizes]--> Model",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Model-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Model",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Model",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Model-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Model",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Operation",
    "Trigger": "Governance: Role --[Authorizes]--> Operation",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Operation-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Operation",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Operation",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Operation",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Organization",
    "Trigger": "Governance: Role --[Authorizes]--> Organization",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Organization-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Organization",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Organization",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Organization",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Policy",
    "Trigger": "Governance: Role --[Authorizes]--> Policy",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Policy-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Policy",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Policy",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Policy",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Principle",
    "Trigger": "Governance: Role --[Authorizes]--> Principle",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Principle-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Principle",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Principle",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Principle",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Procedure",
    "Trigger": "Governance: Role --[Authorizes]--> Procedure",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Procedure",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Procedure",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Procedure",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Process",
    "Trigger": "Governance: Role --[Authorizes]--> Process",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Process-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Process",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Process",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Process-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Process",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Record",
    "Trigger": "Governance: Role --[Authorizes]--> Record",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Record-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Record",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Record",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Record-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Record",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Authorizes]--> Safety Compliance",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Safety Compliance",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Authorizes]--> Safety Issue",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Safety Issue",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Software_Component",
    "Trigger": "Governance: Role --[Authorizes]--> Software Component",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Software Component",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Software Component",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Software Component",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Standard",
    "Trigger": "Governance: Role --[Authorizes]--> Standard",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Standard-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Standard",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Standard",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Standard",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-System",
    "Trigger": "Governance: Role --[Authorizes]--> System",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-System-COND",
    "Trigger": "Governance: Role --[Authorizes]--> System",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> System",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-System-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> System",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Task",
    "Trigger": "Governance: Role --[Authorizes]--> Task",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Task-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Task",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Task",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Task-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Task",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Test_Suite",
    "Trigger": "Governance: Role --[Authorizes]--> Test Suite",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Test Suite",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Test Suite",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Test Suite",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Vehicle",
    "Trigger": "Governance: Role --[Authorizes]--> Vehicle",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Vehicle",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Vehicle",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Vehicle",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Authorizes]--> Verification Plan",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Authorizes]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Authorizes]--> Verification Plan",
    "Template": "Engineering team shall authorize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Business_Unit-Business_Unit",
    "Trigger": "Governance: Business Unit --[Communication Path]--> Business Unit",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Business_Unit-Business_Unit-COND",
    "Trigger": "Governance: Business Unit --[Communication Path]--> Business Unit",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Business_Unit-Business_Unit-COND-CONST",
    "Trigger": "Governance: Business Unit --[Communication Path]--> Business Unit",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Business_Unit-Business_Unit-CONST",
    "Trigger": "Governance: Business Unit --[Communication Path]--> Business Unit",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Organization-Business_Unit",
    "Trigger": "Governance: Organization --[Communication Path]--> Business Unit",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Organization-Business_Unit-COND",
    "Trigger": "Governance: Organization --[Communication Path]--> Business Unit",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Organization-Business_Unit-COND-CONST",
    "Trigger": "Governance: Organization --[Communication Path]--> Business Unit",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Organization-Business_Unit-CONST",
    "Trigger": "Governance: Organization --[Communication Path]--> Business Unit",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Organization-Organization",
    "Trigger": "Governance: Organization --[Communication Path]--> Organization",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Organization-Organization-COND",
    "Trigger": "Governance: Organization --[Communication Path]--> Organization",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Organization-Organization-COND-CONST",
    "Trigger": "Governance: Organization --[Communication Path]--> Organization",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Organization-Organization-CONST",
    "Trigger": "Governance: Organization --[Communication Path]--> Organization",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Activity",
    "Trigger": "Governance: Role --[Communication Path]--> Activity",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Activity-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Activity",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Activity",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Activity",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Business_Unit",
    "Trigger": "Governance: Role --[Communication Path]--> Business Unit",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Business Unit",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Business Unit",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Business Unit",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Component",
    "Trigger": "Governance: Role --[Communication Path]--> Component",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Component-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Component",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Component",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Component-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Component",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Data",
    "Trigger": "Governance: Role --[Communication Path]--> Data",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Data-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Data",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Data",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Data-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Data",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Document",
    "Trigger": "Governance: Role --[Communication Path]--> Document",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Document-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Document",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Document",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Document-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Document",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Driving_Function",
    "Trigger": "Governance: Role --[Communication Path]--> Driving Function",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Driving Function",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Driving Function",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Driving Function",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Field_Data",
    "Trigger": "Governance: Role --[Communication Path]--> Field Data",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Field Data",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Field Data",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Field Data",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Fleet",
    "Trigger": "Governance: Role --[Communication Path]--> Fleet",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Fleet",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Fleet",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Fleet",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Guideline",
    "Trigger": "Governance: Role --[Communication Path]--> Guideline",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Guideline",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Guideline",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Guideline",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Incident",
    "Trigger": "Governance: Role --[Communication Path]--> Incident",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Incident-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Incident",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Incident",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Incident",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Communication Path]--> Lifecycle Phase",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Lifecycle Phase",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Communication Path]--> Manufacturing Process",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Manufacturing Process",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Metric",
    "Trigger": "Governance: Role --[Communication Path]--> Metric",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Metric-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Metric",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Metric",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Metric",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Model",
    "Trigger": "Governance: Role --[Communication Path]--> Model",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Model-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Model",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Model",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Model-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Model",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Operation",
    "Trigger": "Governance: Role --[Communication Path]--> Operation",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Operation-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Operation",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Operation",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Operation",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Organization",
    "Trigger": "Governance: Role --[Communication Path]--> Organization",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Organization-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Organization",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Organization",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Organization",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Policy",
    "Trigger": "Governance: Role --[Communication Path]--> Policy",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Policy-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Policy",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Policy",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Policy",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Principle",
    "Trigger": "Governance: Role --[Communication Path]--> Principle",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Principle-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Principle",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Principle",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Principle",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Procedure",
    "Trigger": "Governance: Role --[Communication Path]--> Procedure",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Procedure",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Procedure",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Procedure",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Process",
    "Trigger": "Governance: Role --[Communication Path]--> Process",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Process-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Process",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Process",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Process-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Process",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Record",
    "Trigger": "Governance: Role --[Communication Path]--> Record",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Record-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Record",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Record",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Record-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Record",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Role",
    "Trigger": "Governance: Role --[Communication Path]--> Role",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Role-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Role",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Role-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Role",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Role-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Role",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Communication Path]--> Safety Compliance",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Safety Compliance",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Communication Path]--> Safety Issue",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Safety Issue",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Software_Component",
    "Trigger": "Governance: Role --[Communication Path]--> Software Component",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Software Component",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Software Component",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Software Component",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Standard",
    "Trigger": "Governance: Role --[Communication Path]--> Standard",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Standard-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Standard",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Standard",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Standard",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-System",
    "Trigger": "Governance: Role --[Communication Path]--> System",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-System-COND",
    "Trigger": "Governance: Role --[Communication Path]--> System",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> System",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-System-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> System",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Task",
    "Trigger": "Governance: Role --[Communication Path]--> Task",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Task-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Task",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Task",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Task-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Task",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Test_Suite",
    "Trigger": "Governance: Role --[Communication Path]--> Test Suite",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Test Suite",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Test Suite",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Test Suite",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Vehicle",
    "Trigger": "Governance: Role --[Communication Path]--> Vehicle",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Vehicle",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Vehicle",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Vehicle",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Communication Path]--> Verification Plan",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Communication Path]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Communication Path]--> Verification Plan",
    "Template": "Engineering team shall communicate with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Guideline",
    "Trigger": "Governance: Procedure --[Constrained by]--> Guideline",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Guideline-COND",
    "Trigger": "Governance: Procedure --[Constrained by]--> Guideline",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Guideline-COND-CONST",
    "Trigger": "Governance: Procedure --[Constrained by]--> Guideline",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Guideline-CONST",
    "Trigger": "Governance: Procedure --[Constrained by]--> Guideline",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Policy",
    "Trigger": "Governance: Procedure --[Constrained by]--> Policy",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Policy-COND",
    "Trigger": "Governance: Procedure --[Constrained by]--> Policy",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Policy-COND-CONST",
    "Trigger": "Governance: Procedure --[Constrained by]--> Policy",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Policy-CONST",
    "Trigger": "Governance: Procedure --[Constrained by]--> Policy",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Principle",
    "Trigger": "Governance: Procedure --[Constrained by]--> Principle",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Principle-COND",
    "Trigger": "Governance: Procedure --[Constrained by]--> Principle",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Principle-COND-CONST",
    "Trigger": "Governance: Procedure --[Constrained by]--> Principle",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Principle-CONST",
    "Trigger": "Governance: Procedure --[Constrained by]--> Principle",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Standard",
    "Trigger": "Governance: Procedure --[Constrained by]--> Standard",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Standard-COND",
    "Trigger": "Governance: Procedure --[Constrained by]--> Standard",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Standard-COND-CONST",
    "Trigger": "Governance: Procedure --[Constrained by]--> Standard",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Standard-CONST",
    "Trigger": "Governance: Procedure --[Constrained by]--> Standard",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Activity",
    "Trigger": "Governance: Role --[Constrained by]--> Activity",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Activity-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Activity",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Activity",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Activity",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Business_Unit",
    "Trigger": "Governance: Role --[Constrained by]--> Business Unit",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Business Unit",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Business Unit",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Business Unit",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Component",
    "Trigger": "Governance: Role --[Constrained by]--> Component",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Component-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Component",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Component",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Component-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Component",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Data",
    "Trigger": "Governance: Role --[Constrained by]--> Data",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Data-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Data",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Data",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Data-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Data",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Document",
    "Trigger": "Governance: Role --[Constrained by]--> Document",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Document-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Document",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Document",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Document-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Document",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Driving_Function",
    "Trigger": "Governance: Role --[Constrained by]--> Driving Function",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Driving Function",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Driving Function",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Driving Function",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Field_Data",
    "Trigger": "Governance: Role --[Constrained by]--> Field Data",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Field Data",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Field Data",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Field Data",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Fleet",
    "Trigger": "Governance: Role --[Constrained by]--> Fleet",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Fleet",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Fleet",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Fleet",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Guideline",
    "Trigger": "Governance: Role --[Constrained by]--> Guideline",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Guideline",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Guideline",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Guideline",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Incident",
    "Trigger": "Governance: Role --[Constrained by]--> Incident",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Incident-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Incident",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Incident",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Incident",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Constrained by]--> Lifecycle Phase",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Lifecycle Phase",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Constrained by]--> Manufacturing Process",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Manufacturing Process",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Metric",
    "Trigger": "Governance: Role --[Constrained by]--> Metric",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Metric-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Metric",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Metric",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Metric",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Model",
    "Trigger": "Governance: Role --[Constrained by]--> Model",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Model-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Model",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Model",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Model-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Model",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Operation",
    "Trigger": "Governance: Role --[Constrained by]--> Operation",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Operation-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Operation",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Operation",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Operation",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Organization",
    "Trigger": "Governance: Role --[Constrained by]--> Organization",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Organization-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Organization",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Organization",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Organization",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Policy",
    "Trigger": "Governance: Role --[Constrained by]--> Policy",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Policy-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Policy",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Policy",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Policy",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Principle",
    "Trigger": "Governance: Role --[Constrained by]--> Principle",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Principle-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Principle",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Principle",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Principle",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Procedure",
    "Trigger": "Governance: Role --[Constrained by]--> Procedure",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Procedure",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Procedure",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Procedure",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Process",
    "Trigger": "Governance: Role --[Constrained by]--> Process",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Process-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Process",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Process",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Process-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Process",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Record",
    "Trigger": "Governance: Role --[Constrained by]--> Record",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Record-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Record",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Record",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Record-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Record",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Constrained by]--> Safety Compliance",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Safety Compliance",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Constrained by]--> Safety Issue",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Safety Issue",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Software_Component",
    "Trigger": "Governance: Role --[Constrained by]--> Software Component",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Software Component",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Software Component",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Software Component",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Standard",
    "Trigger": "Governance: Role --[Constrained by]--> Standard",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Standard-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Standard",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Standard",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Standard",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-System",
    "Trigger": "Governance: Role --[Constrained by]--> System",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-System-COND",
    "Trigger": "Governance: Role --[Constrained by]--> System",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> System",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-System-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> System",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Task",
    "Trigger": "Governance: Role --[Constrained by]--> Task",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Task-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Task",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Task",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Task-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Task",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Test_Suite",
    "Trigger": "Governance: Role --[Constrained by]--> Test Suite",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Test Suite",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Test Suite",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Test Suite",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Vehicle",
    "Trigger": "Governance: Role --[Constrained by]--> Vehicle",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Vehicle",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Vehicle",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Vehicle",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Constrained by]--> Verification Plan",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Constrained by]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrained_by-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Constrained by]--> Verification Plan",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Activity",
    "Trigger": "Governance: Role --[Constrains]--> Activity",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Activity-COND",
    "Trigger": "Governance: Role --[Constrains]--> Activity",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Activity",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Activity",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Business_Unit",
    "Trigger": "Governance: Role --[Constrains]--> Business Unit",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Constrains]--> Business Unit",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Business Unit",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Business Unit",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Component",
    "Trigger": "Governance: Role --[Constrains]--> Component",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Component-COND",
    "Trigger": "Governance: Role --[Constrains]--> Component",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Component",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Component-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Component",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Data",
    "Trigger": "Governance: Role --[Constrains]--> Data",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Data-COND",
    "Trigger": "Governance: Role --[Constrains]--> Data",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Data",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Data-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Data",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Document",
    "Trigger": "Governance: Role --[Constrains]--> Document",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Document-COND",
    "Trigger": "Governance: Role --[Constrains]--> Document",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Document",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Document-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Document",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Driving_Function",
    "Trigger": "Governance: Role --[Constrains]--> Driving Function",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Constrains]--> Driving Function",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Driving Function",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Driving Function",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Field_Data",
    "Trigger": "Governance: Role --[Constrains]--> Field Data",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Constrains]--> Field Data",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Field Data",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Field Data",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Fleet",
    "Trigger": "Governance: Role --[Constrains]--> Fleet",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Constrains]--> Fleet",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Fleet",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Fleet",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Guideline",
    "Trigger": "Governance: Role --[Constrains]--> Guideline",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Constrains]--> Guideline",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Guideline",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Guideline",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Incident",
    "Trigger": "Governance: Role --[Constrains]--> Incident",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Incident-COND",
    "Trigger": "Governance: Role --[Constrains]--> Incident",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Incident",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Incident",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Constrains]--> Lifecycle Phase",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Constrains]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Lifecycle Phase",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Constrains]--> Manufacturing Process",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Constrains]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Manufacturing Process",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Metric",
    "Trigger": "Governance: Role --[Constrains]--> Metric",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Metric-COND",
    "Trigger": "Governance: Role --[Constrains]--> Metric",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Metric",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Metric",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Model",
    "Trigger": "Governance: Role --[Constrains]--> Model",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Model-COND",
    "Trigger": "Governance: Role --[Constrains]--> Model",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Model",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Model-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Model",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Operation",
    "Trigger": "Governance: Role --[Constrains]--> Operation",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Operation-COND",
    "Trigger": "Governance: Role --[Constrains]--> Operation",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Operation",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Operation",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Organization",
    "Trigger": "Governance: Role --[Constrains]--> Organization",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Organization-COND",
    "Trigger": "Governance: Role --[Constrains]--> Organization",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Organization",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Organization",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Policy",
    "Trigger": "Governance: Role --[Constrains]--> Policy",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Policy-COND",
    "Trigger": "Governance: Role --[Constrains]--> Policy",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Policy",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Policy",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Principle",
    "Trigger": "Governance: Role --[Constrains]--> Principle",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Principle-COND",
    "Trigger": "Governance: Role --[Constrains]--> Principle",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Principle",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Principle",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Procedure",
    "Trigger": "Governance: Role --[Constrains]--> Procedure",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Constrains]--> Procedure",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Procedure",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Procedure",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Process",
    "Trigger": "Governance: Role --[Constrains]--> Process",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Process-COND",
    "Trigger": "Governance: Role --[Constrains]--> Process",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Process",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Process-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Process",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Record",
    "Trigger": "Governance: Role --[Constrains]--> Record",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Record-COND",
    "Trigger": "Governance: Role --[Constrains]--> Record",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Record",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Record-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Record",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Constrains]--> Safety Compliance",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Constrains]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Safety Compliance",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Constrains]--> Safety Issue",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Constrains]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Safety Issue",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Software_Component",
    "Trigger": "Governance: Role --[Constrains]--> Software Component",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Constrains]--> Software Component",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Software Component",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Software Component",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Standard",
    "Trigger": "Governance: Role --[Constrains]--> Standard",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Standard-COND",
    "Trigger": "Governance: Role --[Constrains]--> Standard",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Standard",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Standard",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-System",
    "Trigger": "Governance: Role --[Constrains]--> System",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-System-COND",
    "Trigger": "Governance: Role --[Constrains]--> System",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> System",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-System-CONST",
    "Trigger": "Governance: Role --[Constrains]--> System",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Task",
    "Trigger": "Governance: Role --[Constrains]--> Task",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Task-COND",
    "Trigger": "Governance: Role --[Constrains]--> Task",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Task",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Task-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Task",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Test_Suite",
    "Trigger": "Governance: Role --[Constrains]--> Test Suite",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Constrains]--> Test Suite",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Test Suite",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Test Suite",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Vehicle",
    "Trigger": "Governance: Role --[Constrains]--> Vehicle",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Constrains]--> Vehicle",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Vehicle",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Vehicle",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Constrains]--> Verification Plan",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Constrains]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-constrains-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Constrains]--> Verification Plan",
    "Template": "Engineering team shall constrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Process-Data",
    "Trigger": "Governance: Process --[Consumes]--> Data",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Process-Data-COND",
    "Trigger": "Governance: Process --[Consumes]--> Data",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Process-Data-COND-CONST",
    "Trigger": "Governance: Process --[Consumes]--> Data",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Process-Data-CONST",
    "Trigger": "Governance: Process --[Consumes]--> Data",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Process-Record",
    "Trigger": "Governance: Process --[Consumes]--> Record",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Process-Record-COND",
    "Trigger": "Governance: Process --[Consumes]--> Record",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Process-Record-COND-CONST",
    "Trigger": "Governance: Process --[Consumes]--> Record",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Process-Record-CONST",
    "Trigger": "Governance: Process --[Consumes]--> Record",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Activity",
    "Trigger": "Governance: Role --[Consumes]--> Activity",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Activity-COND",
    "Trigger": "Governance: Role --[Consumes]--> Activity",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Activity",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Activity",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Business_Unit",
    "Trigger": "Governance: Role --[Consumes]--> Business Unit",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Consumes]--> Business Unit",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Business Unit",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Business Unit",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Component",
    "Trigger": "Governance: Role --[Consumes]--> Component",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Component-COND",
    "Trigger": "Governance: Role --[Consumes]--> Component",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Component",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Component-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Component",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Data",
    "Trigger": "Governance: Role --[Consumes]--> Data",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Data-COND",
    "Trigger": "Governance: Role --[Consumes]--> Data",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Data",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Data-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Data",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Document",
    "Trigger": "Governance: Role --[Consumes]--> Document",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Document-COND",
    "Trigger": "Governance: Role --[Consumes]--> Document",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Document",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Document-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Document",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Driving_Function",
    "Trigger": "Governance: Role --[Consumes]--> Driving Function",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Consumes]--> Driving Function",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Driving Function",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Driving Function",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Field_Data",
    "Trigger": "Governance: Role --[Consumes]--> Field Data",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Consumes]--> Field Data",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Field Data",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Field Data",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Fleet",
    "Trigger": "Governance: Role --[Consumes]--> Fleet",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Consumes]--> Fleet",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Fleet",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Fleet",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Guideline",
    "Trigger": "Governance: Role --[Consumes]--> Guideline",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Consumes]--> Guideline",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Guideline",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Guideline",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Incident",
    "Trigger": "Governance: Role --[Consumes]--> Incident",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Incident-COND",
    "Trigger": "Governance: Role --[Consumes]--> Incident",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Incident",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Incident",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Consumes]--> Lifecycle Phase",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Consumes]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Lifecycle Phase",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Consumes]--> Manufacturing Process",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Consumes]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Manufacturing Process",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Metric",
    "Trigger": "Governance: Role --[Consumes]--> Metric",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Metric-COND",
    "Trigger": "Governance: Role --[Consumes]--> Metric",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Metric",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Metric",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Model",
    "Trigger": "Governance: Role --[Consumes]--> Model",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Model-COND",
    "Trigger": "Governance: Role --[Consumes]--> Model",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Model",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Model-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Model",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Operation",
    "Trigger": "Governance: Role --[Consumes]--> Operation",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Operation-COND",
    "Trigger": "Governance: Role --[Consumes]--> Operation",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Operation",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Operation",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Organization",
    "Trigger": "Governance: Role --[Consumes]--> Organization",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Organization-COND",
    "Trigger": "Governance: Role --[Consumes]--> Organization",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Organization",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Organization",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Policy",
    "Trigger": "Governance: Role --[Consumes]--> Policy",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Policy-COND",
    "Trigger": "Governance: Role --[Consumes]--> Policy",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Policy",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Policy",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Principle",
    "Trigger": "Governance: Role --[Consumes]--> Principle",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Principle-COND",
    "Trigger": "Governance: Role --[Consumes]--> Principle",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Principle",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Principle",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Procedure",
    "Trigger": "Governance: Role --[Consumes]--> Procedure",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Consumes]--> Procedure",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Procedure",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Procedure",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Process",
    "Trigger": "Governance: Role --[Consumes]--> Process",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Process-COND",
    "Trigger": "Governance: Role --[Consumes]--> Process",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Process",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Process-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Process",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Record",
    "Trigger": "Governance: Role --[Consumes]--> Record",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Record-COND",
    "Trigger": "Governance: Role --[Consumes]--> Record",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Record",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Record-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Record",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Consumes]--> Safety Compliance",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Consumes]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Safety Compliance",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Consumes]--> Safety Issue",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Consumes]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Safety Issue",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Software_Component",
    "Trigger": "Governance: Role --[Consumes]--> Software Component",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Consumes]--> Software Component",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Software Component",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Software Component",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Standard",
    "Trigger": "Governance: Role --[Consumes]--> Standard",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Standard-COND",
    "Trigger": "Governance: Role --[Consumes]--> Standard",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Standard",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Standard",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-System",
    "Trigger": "Governance: Role --[Consumes]--> System",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-System-COND",
    "Trigger": "Governance: Role --[Consumes]--> System",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> System",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-System-CONST",
    "Trigger": "Governance: Role --[Consumes]--> System",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Task",
    "Trigger": "Governance: Role --[Consumes]--> Task",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Task-COND",
    "Trigger": "Governance: Role --[Consumes]--> Task",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Task",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Task-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Task",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Test_Suite",
    "Trigger": "Governance: Role --[Consumes]--> Test Suite",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Consumes]--> Test Suite",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Test Suite",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Test Suite",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Vehicle",
    "Trigger": "Governance: Role --[Consumes]--> Vehicle",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Consumes]--> Vehicle",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Vehicle",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Vehicle",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Consumes]--> Verification Plan",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Consumes]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-consumes-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Consumes]--> Verification Plan",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Process-Data",
    "Trigger": "Governance: Process --[Curation]--> Data",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Process-Data-COND",
    "Trigger": "Governance: Process --[Curation]--> Data",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Process-Data-COND-CONST",
    "Trigger": "Governance: Process --[Curation]--> Data",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Process-Data-CONST",
    "Trigger": "Governance: Process --[Curation]--> Data",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Activity",
    "Trigger": "Governance: Role --[Curation]--> Activity",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Activity-COND",
    "Trigger": "Governance: Role --[Curation]--> Activity",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Activity",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Curation]--> Activity",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Business_Unit",
    "Trigger": "Governance: Role --[Curation]--> Business Unit",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Curation]--> Business Unit",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Business Unit",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Curation]--> Business Unit",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Component",
    "Trigger": "Governance: Role --[Curation]--> Component",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Component-COND",
    "Trigger": "Governance: Role --[Curation]--> Component",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Component",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Component-CONST",
    "Trigger": "Governance: Role --[Curation]--> Component",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Data",
    "Trigger": "Governance: Role --[Curation]--> Data",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Data-COND",
    "Trigger": "Governance: Role --[Curation]--> Data",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Data",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Data-CONST",
    "Trigger": "Governance: Role --[Curation]--> Data",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Document",
    "Trigger": "Governance: Role --[Curation]--> Document",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Document-COND",
    "Trigger": "Governance: Role --[Curation]--> Document",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Document",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Document-CONST",
    "Trigger": "Governance: Role --[Curation]--> Document",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Driving_Function",
    "Trigger": "Governance: Role --[Curation]--> Driving Function",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Curation]--> Driving Function",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Driving Function",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Curation]--> Driving Function",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Field_Data",
    "Trigger": "Governance: Role --[Curation]--> Field Data",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Curation]--> Field Data",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Field Data",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Curation]--> Field Data",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Fleet",
    "Trigger": "Governance: Role --[Curation]--> Fleet",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Curation]--> Fleet",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Fleet",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Curation]--> Fleet",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Guideline",
    "Trigger": "Governance: Role --[Curation]--> Guideline",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Curation]--> Guideline",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Guideline",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Curation]--> Guideline",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Incident",
    "Trigger": "Governance: Role --[Curation]--> Incident",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Incident-COND",
    "Trigger": "Governance: Role --[Curation]--> Incident",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Incident",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Curation]--> Incident",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Curation]--> Lifecycle Phase",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Curation]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Curation]--> Lifecycle Phase",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Curation]--> Manufacturing Process",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Curation]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Curation]--> Manufacturing Process",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Metric",
    "Trigger": "Governance: Role --[Curation]--> Metric",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Metric-COND",
    "Trigger": "Governance: Role --[Curation]--> Metric",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Metric",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Curation]--> Metric",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Model",
    "Trigger": "Governance: Role --[Curation]--> Model",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Model-COND",
    "Trigger": "Governance: Role --[Curation]--> Model",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Model",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Model-CONST",
    "Trigger": "Governance: Role --[Curation]--> Model",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Operation",
    "Trigger": "Governance: Role --[Curation]--> Operation",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Operation-COND",
    "Trigger": "Governance: Role --[Curation]--> Operation",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Operation",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Curation]--> Operation",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Organization",
    "Trigger": "Governance: Role --[Curation]--> Organization",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Organization-COND",
    "Trigger": "Governance: Role --[Curation]--> Organization",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Organization",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Curation]--> Organization",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Policy",
    "Trigger": "Governance: Role --[Curation]--> Policy",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Policy-COND",
    "Trigger": "Governance: Role --[Curation]--> Policy",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Policy",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Curation]--> Policy",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Principle",
    "Trigger": "Governance: Role --[Curation]--> Principle",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Principle-COND",
    "Trigger": "Governance: Role --[Curation]--> Principle",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Principle",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Curation]--> Principle",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Procedure",
    "Trigger": "Governance: Role --[Curation]--> Procedure",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Curation]--> Procedure",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Procedure",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Curation]--> Procedure",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Process",
    "Trigger": "Governance: Role --[Curation]--> Process",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Process-COND",
    "Trigger": "Governance: Role --[Curation]--> Process",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Process",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Process-CONST",
    "Trigger": "Governance: Role --[Curation]--> Process",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Record",
    "Trigger": "Governance: Role --[Curation]--> Record",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Record-COND",
    "Trigger": "Governance: Role --[Curation]--> Record",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Record",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Record-CONST",
    "Trigger": "Governance: Role --[Curation]--> Record",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Curation]--> Safety Compliance",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Curation]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Curation]--> Safety Compliance",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Curation]--> Safety Issue",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Curation]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Curation]--> Safety Issue",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Software_Component",
    "Trigger": "Governance: Role --[Curation]--> Software Component",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Curation]--> Software Component",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Software Component",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Curation]--> Software Component",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Standard",
    "Trigger": "Governance: Role --[Curation]--> Standard",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Standard-COND",
    "Trigger": "Governance: Role --[Curation]--> Standard",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Standard",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Curation]--> Standard",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-System",
    "Trigger": "Governance: Role --[Curation]--> System",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-System-COND",
    "Trigger": "Governance: Role --[Curation]--> System",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> System",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-System-CONST",
    "Trigger": "Governance: Role --[Curation]--> System",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Task",
    "Trigger": "Governance: Role --[Curation]--> Task",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Task-COND",
    "Trigger": "Governance: Role --[Curation]--> Task",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Task",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Task-CONST",
    "Trigger": "Governance: Role --[Curation]--> Task",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Test_Suite",
    "Trigger": "Governance: Role --[Curation]--> Test Suite",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Curation]--> Test Suite",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Test Suite",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Curation]--> Test Suite",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Vehicle",
    "Trigger": "Governance: Role --[Curation]--> Vehicle",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Curation]--> Vehicle",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Vehicle",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Curation]--> Vehicle",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Curation]--> Verification Plan",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Curation]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Curation]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-curation-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Curation]--> Verification Plan",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Process-Document",
    "Trigger": "Governance: Process --[Delivers]--> Document",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Process-Document-COND",
    "Trigger": "Governance: Process --[Delivers]--> Document",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Process-Document-COND-CONST",
    "Trigger": "Governance: Process --[Delivers]--> Document",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Process-Document-CONST",
    "Trigger": "Governance: Process --[Delivers]--> Document",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Process-Record",
    "Trigger": "Governance: Process --[Delivers]--> Record",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Process-Record-COND",
    "Trigger": "Governance: Process --[Delivers]--> Record",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Process-Record-COND-CONST",
    "Trigger": "Governance: Process --[Delivers]--> Record",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Process-Record-CONST",
    "Trigger": "Governance: Process --[Delivers]--> Record",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Activity",
    "Trigger": "Governance: Role --[Delivers]--> Activity",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Activity-COND",
    "Trigger": "Governance: Role --[Delivers]--> Activity",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Activity",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Activity",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Business_Unit",
    "Trigger": "Governance: Role --[Delivers]--> Business Unit",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Delivers]--> Business Unit",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Business Unit",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Business Unit",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Component",
    "Trigger": "Governance: Role --[Delivers]--> Component",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Component-COND",
    "Trigger": "Governance: Role --[Delivers]--> Component",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Component",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Component-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Component",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Data",
    "Trigger": "Governance: Role --[Delivers]--> Data",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Data-COND",
    "Trigger": "Governance: Role --[Delivers]--> Data",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Data",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Data-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Data",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Document",
    "Trigger": "Governance: Role --[Delivers]--> Document",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Document-COND",
    "Trigger": "Governance: Role --[Delivers]--> Document",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Document",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Document-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Document",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Driving_Function",
    "Trigger": "Governance: Role --[Delivers]--> Driving Function",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Delivers]--> Driving Function",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Driving Function",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Driving Function",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Field_Data",
    "Trigger": "Governance: Role --[Delivers]--> Field Data",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Delivers]--> Field Data",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Field Data",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Field Data",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Fleet",
    "Trigger": "Governance: Role --[Delivers]--> Fleet",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Delivers]--> Fleet",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Fleet",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Fleet",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Guideline",
    "Trigger": "Governance: Role --[Delivers]--> Guideline",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Delivers]--> Guideline",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Guideline",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Guideline",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Incident",
    "Trigger": "Governance: Role --[Delivers]--> Incident",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Incident-COND",
    "Trigger": "Governance: Role --[Delivers]--> Incident",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Incident",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Incident",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Delivers]--> Lifecycle Phase",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Delivers]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Lifecycle Phase",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Delivers]--> Manufacturing Process",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Delivers]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Manufacturing Process",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Metric",
    "Trigger": "Governance: Role --[Delivers]--> Metric",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Metric-COND",
    "Trigger": "Governance: Role --[Delivers]--> Metric",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Metric",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Metric",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Model",
    "Trigger": "Governance: Role --[Delivers]--> Model",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Model-COND",
    "Trigger": "Governance: Role --[Delivers]--> Model",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Model",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Model-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Model",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Operation",
    "Trigger": "Governance: Role --[Delivers]--> Operation",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Operation-COND",
    "Trigger": "Governance: Role --[Delivers]--> Operation",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Operation",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Operation",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Organization",
    "Trigger": "Governance: Role --[Delivers]--> Organization",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Organization-COND",
    "Trigger": "Governance: Role --[Delivers]--> Organization",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Organization",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Organization",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Policy",
    "Trigger": "Governance: Role --[Delivers]--> Policy",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Policy-COND",
    "Trigger": "Governance: Role --[Delivers]--> Policy",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Policy",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Policy",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Principle",
    "Trigger": "Governance: Role --[Delivers]--> Principle",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Principle-COND",
    "Trigger": "Governance: Role --[Delivers]--> Principle",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Principle",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Principle",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Procedure",
    "Trigger": "Governance: Role --[Delivers]--> Procedure",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Delivers]--> Procedure",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Procedure",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Procedure",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Process",
    "Trigger": "Governance: Role --[Delivers]--> Process",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Process-COND",
    "Trigger": "Governance: Role --[Delivers]--> Process",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Process",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Process-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Process",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Record",
    "Trigger": "Governance: Role --[Delivers]--> Record",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Record-COND",
    "Trigger": "Governance: Role --[Delivers]--> Record",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Record",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Record-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Record",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Delivers]--> Safety Compliance",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Delivers]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Safety Compliance",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Delivers]--> Safety Issue",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Delivers]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Safety Issue",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Software_Component",
    "Trigger": "Governance: Role --[Delivers]--> Software Component",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Delivers]--> Software Component",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Software Component",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Software Component",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Standard",
    "Trigger": "Governance: Role --[Delivers]--> Standard",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Standard-COND",
    "Trigger": "Governance: Role --[Delivers]--> Standard",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Standard",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Standard",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-System",
    "Trigger": "Governance: Role --[Delivers]--> System",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-System-COND",
    "Trigger": "Governance: Role --[Delivers]--> System",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> System",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-System-CONST",
    "Trigger": "Governance: Role --[Delivers]--> System",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Task",
    "Trigger": "Governance: Role --[Delivers]--> Task",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Task-COND",
    "Trigger": "Governance: Role --[Delivers]--> Task",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Task",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Task-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Task",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Test_Suite",
    "Trigger": "Governance: Role --[Delivers]--> Test Suite",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Delivers]--> Test Suite",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Test Suite",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Test Suite",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Vehicle",
    "Trigger": "Governance: Role --[Delivers]--> Vehicle",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Delivers]--> Vehicle",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Vehicle",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Vehicle",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Delivers]--> Verification Plan",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Delivers]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-delivers-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Delivers]--> Verification Plan",
    "Template": "Engineering team shall deliver the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-derived_from-Work_Product-Work_Product",
    "Trigger": "Governance: Work Product --[Derived from]--> Work Product",
    "Template": "Engineering team shall be derived from the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-derived_from-Work_Product-Work_Product-COND",
    "Trigger": "Governance: Work Product --[Derived from]--> Work Product",
    "Template": "When <condition>, Engineering team shall be derived from the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-derived_from-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Governance: Work Product --[Derived from]--> Work Product",
    "Template": "When <condition>, Engineering team shall be derived from the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-derived_from-Work_Product-Work_Product-CONST",
    "Trigger": "Governance: Work Product --[Derived from]--> Work Product",
    "Template": "Engineering team shall be derived from the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Activity",
    "Trigger": "Governance: Role --[Establish]--> Activity",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Activity-COND",
    "Trigger": "Governance: Role --[Establish]--> Activity",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Activity",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Establish]--> Activity",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Business_Unit",
    "Trigger": "Governance: Role --[Establish]--> Business Unit",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Establish]--> Business Unit",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Business Unit",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Establish]--> Business Unit",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Component",
    "Trigger": "Governance: Role --[Establish]--> Component",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Component-COND",
    "Trigger": "Governance: Role --[Establish]--> Component",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Component",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Component-CONST",
    "Trigger": "Governance: Role --[Establish]--> Component",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Data",
    "Trigger": "Governance: Role --[Establish]--> Data",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Data-COND",
    "Trigger": "Governance: Role --[Establish]--> Data",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Data",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Data-CONST",
    "Trigger": "Governance: Role --[Establish]--> Data",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Document",
    "Trigger": "Governance: Role --[Establish]--> Document",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Document-COND",
    "Trigger": "Governance: Role --[Establish]--> Document",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Document",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Document-CONST",
    "Trigger": "Governance: Role --[Establish]--> Document",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Driving_Function",
    "Trigger": "Governance: Role --[Establish]--> Driving Function",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Establish]--> Driving Function",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Driving Function",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Establish]--> Driving Function",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Field_Data",
    "Trigger": "Governance: Role --[Establish]--> Field Data",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Establish]--> Field Data",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Field Data",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Establish]--> Field Data",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Fleet",
    "Trigger": "Governance: Role --[Establish]--> Fleet",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Establish]--> Fleet",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Fleet",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Establish]--> Fleet",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Guideline",
    "Trigger": "Governance: Role --[Establish]--> Guideline",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Establish]--> Guideline",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Guideline",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Establish]--> Guideline",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Incident",
    "Trigger": "Governance: Role --[Establish]--> Incident",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Incident-COND",
    "Trigger": "Governance: Role --[Establish]--> Incident",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Incident",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Establish]--> Incident",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Establish]--> Lifecycle Phase",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Establish]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Establish]--> Lifecycle Phase",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Establish]--> Manufacturing Process",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Establish]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Establish]--> Manufacturing Process",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Metric",
    "Trigger": "Governance: Role --[Establish]--> Metric",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Metric-COND",
    "Trigger": "Governance: Role --[Establish]--> Metric",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Metric",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Establish]--> Metric",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Model",
    "Trigger": "Governance: Role --[Establish]--> Model",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Model-COND",
    "Trigger": "Governance: Role --[Establish]--> Model",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Model",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Model-CONST",
    "Trigger": "Governance: Role --[Establish]--> Model",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Operation",
    "Trigger": "Governance: Role --[Establish]--> Operation",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Operation-COND",
    "Trigger": "Governance: Role --[Establish]--> Operation",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Operation",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Establish]--> Operation",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Organization",
    "Trigger": "Governance: Role --[Establish]--> Organization",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Organization-COND",
    "Trigger": "Governance: Role --[Establish]--> Organization",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Organization",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Establish]--> Organization",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Policy",
    "Trigger": "Governance: Role --[Establish]--> Policy",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Policy-COND",
    "Trigger": "Governance: Role --[Establish]--> Policy",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Policy",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Establish]--> Policy",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Principle",
    "Trigger": "Governance: Role --[Establish]--> Principle",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Principle-COND",
    "Trigger": "Governance: Role --[Establish]--> Principle",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Principle",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Establish]--> Principle",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Procedure",
    "Trigger": "Governance: Role --[Establish]--> Procedure",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Establish]--> Procedure",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Procedure",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Establish]--> Procedure",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Process",
    "Trigger": "Governance: Role --[Establish]--> Process",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Process-COND",
    "Trigger": "Governance: Role --[Establish]--> Process",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Process",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Process-CONST",
    "Trigger": "Governance: Role --[Establish]--> Process",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Record",
    "Trigger": "Governance: Role --[Establish]--> Record",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Record-COND",
    "Trigger": "Governance: Role --[Establish]--> Record",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Record",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Record-CONST",
    "Trigger": "Governance: Role --[Establish]--> Record",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Establish]--> Safety Compliance",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Establish]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Establish]--> Safety Compliance",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Establish]--> Safety Issue",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Establish]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Establish]--> Safety Issue",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Software_Component",
    "Trigger": "Governance: Role --[Establish]--> Software Component",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Establish]--> Software Component",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Software Component",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Establish]--> Software Component",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Standard",
    "Trigger": "Governance: Role --[Establish]--> Standard",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Standard-COND",
    "Trigger": "Governance: Role --[Establish]--> Standard",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Standard",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Establish]--> Standard",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-System",
    "Trigger": "Governance: Role --[Establish]--> System",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-System-COND",
    "Trigger": "Governance: Role --[Establish]--> System",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> System",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-System-CONST",
    "Trigger": "Governance: Role --[Establish]--> System",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Task",
    "Trigger": "Governance: Role --[Establish]--> Task",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Task-COND",
    "Trigger": "Governance: Role --[Establish]--> Task",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Task",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Task-CONST",
    "Trigger": "Governance: Role --[Establish]--> Task",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Test_Suite",
    "Trigger": "Governance: Role --[Establish]--> Test Suite",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Establish]--> Test Suite",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Test Suite",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Establish]--> Test Suite",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Vehicle",
    "Trigger": "Governance: Role --[Establish]--> Vehicle",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Establish]--> Vehicle",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Vehicle",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Establish]--> Vehicle",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Establish]--> Verification Plan",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Establish]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Establish]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-establish-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Establish]--> Verification Plan",
    "Template": "Engineering team shall establish the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Activity",
    "Trigger": "Governance: Role --[Executes]--> Activity",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Activity-COND",
    "Trigger": "Governance: Role --[Executes]--> Activity",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Activity",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Executes]--> Activity",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Business_Unit",
    "Trigger": "Governance: Role --[Executes]--> Business Unit",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Executes]--> Business Unit",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Business Unit",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Executes]--> Business Unit",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Component",
    "Trigger": "Governance: Role --[Executes]--> Component",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Component-COND",
    "Trigger": "Governance: Role --[Executes]--> Component",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Component",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Component-CONST",
    "Trigger": "Governance: Role --[Executes]--> Component",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Data",
    "Trigger": "Governance: Role --[Executes]--> Data",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Data-COND",
    "Trigger": "Governance: Role --[Executes]--> Data",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Data",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Data-CONST",
    "Trigger": "Governance: Role --[Executes]--> Data",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Document",
    "Trigger": "Governance: Role --[Executes]--> Document",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Document-COND",
    "Trigger": "Governance: Role --[Executes]--> Document",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Document",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Document-CONST",
    "Trigger": "Governance: Role --[Executes]--> Document",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Driving_Function",
    "Trigger": "Governance: Role --[Executes]--> Driving Function",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Executes]--> Driving Function",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Driving Function",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Executes]--> Driving Function",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Field_Data",
    "Trigger": "Governance: Role --[Executes]--> Field Data",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Executes]--> Field Data",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Field Data",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Executes]--> Field Data",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Fleet",
    "Trigger": "Governance: Role --[Executes]--> Fleet",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Executes]--> Fleet",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Fleet",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Executes]--> Fleet",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Guideline",
    "Trigger": "Governance: Role --[Executes]--> Guideline",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Executes]--> Guideline",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Guideline",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Executes]--> Guideline",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Incident",
    "Trigger": "Governance: Role --[Executes]--> Incident",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Incident-COND",
    "Trigger": "Governance: Role --[Executes]--> Incident",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Incident",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Executes]--> Incident",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Executes]--> Lifecycle Phase",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Executes]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Executes]--> Lifecycle Phase",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Executes]--> Manufacturing Process",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Executes]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Executes]--> Manufacturing Process",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Metric",
    "Trigger": "Governance: Role --[Executes]--> Metric",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Metric-COND",
    "Trigger": "Governance: Role --[Executes]--> Metric",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Metric",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Executes]--> Metric",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Model",
    "Trigger": "Governance: Role --[Executes]--> Model",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Model-COND",
    "Trigger": "Governance: Role --[Executes]--> Model",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Model",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Model-CONST",
    "Trigger": "Governance: Role --[Executes]--> Model",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Operation",
    "Trigger": "Governance: Role --[Executes]--> Operation",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Operation-COND",
    "Trigger": "Governance: Role --[Executes]--> Operation",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Operation",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Executes]--> Operation",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Organization",
    "Trigger": "Governance: Role --[Executes]--> Organization",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Organization-COND",
    "Trigger": "Governance: Role --[Executes]--> Organization",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Organization",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Executes]--> Organization",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Policy",
    "Trigger": "Governance: Role --[Executes]--> Policy",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Policy-COND",
    "Trigger": "Governance: Role --[Executes]--> Policy",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Policy",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Executes]--> Policy",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Principle",
    "Trigger": "Governance: Role --[Executes]--> Principle",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Principle-COND",
    "Trigger": "Governance: Role --[Executes]--> Principle",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Principle",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Executes]--> Principle",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Procedure",
    "Trigger": "Governance: Role --[Executes]--> Procedure",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Executes]--> Procedure",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Procedure",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Executes]--> Procedure",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Process",
    "Trigger": "Governance: Role --[Executes]--> Process",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Process-COND",
    "Trigger": "Governance: Role --[Executes]--> Process",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Process",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Process-CONST",
    "Trigger": "Governance: Role --[Executes]--> Process",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Record",
    "Trigger": "Governance: Role --[Executes]--> Record",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Record-COND",
    "Trigger": "Governance: Role --[Executes]--> Record",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Record",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Record-CONST",
    "Trigger": "Governance: Role --[Executes]--> Record",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Executes]--> Safety Compliance",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Executes]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Executes]--> Safety Compliance",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Executes]--> Safety Issue",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Executes]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Executes]--> Safety Issue",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Software_Component",
    "Trigger": "Governance: Role --[Executes]--> Software Component",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Executes]--> Software Component",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Software Component",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Executes]--> Software Component",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Standard",
    "Trigger": "Governance: Role --[Executes]--> Standard",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Standard-COND",
    "Trigger": "Governance: Role --[Executes]--> Standard",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Standard",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Executes]--> Standard",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-System",
    "Trigger": "Governance: Role --[Executes]--> System",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-System-COND",
    "Trigger": "Governance: Role --[Executes]--> System",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> System",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-System-CONST",
    "Trigger": "Governance: Role --[Executes]--> System",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Task",
    "Trigger": "Governance: Role --[Executes]--> Task",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Task-COND",
    "Trigger": "Governance: Role --[Executes]--> Task",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Task",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Task-CONST",
    "Trigger": "Governance: Role --[Executes]--> Task",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Test_Suite",
    "Trigger": "Governance: Role --[Executes]--> Test Suite",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Executes]--> Test Suite",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Test Suite",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Executes]--> Test Suite",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Vehicle",
    "Trigger": "Governance: Role --[Executes]--> Vehicle",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Executes]--> Vehicle",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Vehicle",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Executes]--> Vehicle",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Executes]--> Verification Plan",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Executes]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Executes]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-executes-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Executes]--> Verification Plan",
    "Template": "Engineering team shall execute the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Policy-Policy",
    "Trigger": "Governance: Policy --[Extend]--> Policy",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Policy-Policy-COND",
    "Trigger": "Governance: Policy --[Extend]--> Policy",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Policy-Policy-COND-CONST",
    "Trigger": "Governance: Policy --[Extend]--> Policy",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Policy-Policy-CONST",
    "Trigger": "Governance: Policy --[Extend]--> Policy",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Activity",
    "Trigger": "Governance: Role --[Extend]--> Activity",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Activity-COND",
    "Trigger": "Governance: Role --[Extend]--> Activity",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Activity",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Extend]--> Activity",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Business_Unit",
    "Trigger": "Governance: Role --[Extend]--> Business Unit",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Extend]--> Business Unit",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Business Unit",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Extend]--> Business Unit",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Component",
    "Trigger": "Governance: Role --[Extend]--> Component",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Component-COND",
    "Trigger": "Governance: Role --[Extend]--> Component",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Component",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Component-CONST",
    "Trigger": "Governance: Role --[Extend]--> Component",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Data",
    "Trigger": "Governance: Role --[Extend]--> Data",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Data-COND",
    "Trigger": "Governance: Role --[Extend]--> Data",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Data",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Data-CONST",
    "Trigger": "Governance: Role --[Extend]--> Data",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Document",
    "Trigger": "Governance: Role --[Extend]--> Document",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Document-COND",
    "Trigger": "Governance: Role --[Extend]--> Document",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Document",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Document-CONST",
    "Trigger": "Governance: Role --[Extend]--> Document",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Driving_Function",
    "Trigger": "Governance: Role --[Extend]--> Driving Function",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Extend]--> Driving Function",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Driving Function",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Extend]--> Driving Function",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Field_Data",
    "Trigger": "Governance: Role --[Extend]--> Field Data",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Extend]--> Field Data",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Field Data",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Extend]--> Field Data",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Fleet",
    "Trigger": "Governance: Role --[Extend]--> Fleet",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Extend]--> Fleet",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Fleet",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Extend]--> Fleet",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Guideline",
    "Trigger": "Governance: Role --[Extend]--> Guideline",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Extend]--> Guideline",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Guideline",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Extend]--> Guideline",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Incident",
    "Trigger": "Governance: Role --[Extend]--> Incident",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Incident-COND",
    "Trigger": "Governance: Role --[Extend]--> Incident",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Incident",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Extend]--> Incident",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Extend]--> Lifecycle Phase",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Extend]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Extend]--> Lifecycle Phase",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Extend]--> Manufacturing Process",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Extend]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Extend]--> Manufacturing Process",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Metric",
    "Trigger": "Governance: Role --[Extend]--> Metric",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Metric-COND",
    "Trigger": "Governance: Role --[Extend]--> Metric",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Metric",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Extend]--> Metric",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Model",
    "Trigger": "Governance: Role --[Extend]--> Model",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Model-COND",
    "Trigger": "Governance: Role --[Extend]--> Model",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Model",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Model-CONST",
    "Trigger": "Governance: Role --[Extend]--> Model",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Operation",
    "Trigger": "Governance: Role --[Extend]--> Operation",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Operation-COND",
    "Trigger": "Governance: Role --[Extend]--> Operation",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Operation",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Extend]--> Operation",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Organization",
    "Trigger": "Governance: Role --[Extend]--> Organization",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Organization-COND",
    "Trigger": "Governance: Role --[Extend]--> Organization",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Organization",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Extend]--> Organization",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Policy",
    "Trigger": "Governance: Role --[Extend]--> Policy",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Policy-COND",
    "Trigger": "Governance: Role --[Extend]--> Policy",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Policy",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Extend]--> Policy",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Principle",
    "Trigger": "Governance: Role --[Extend]--> Principle",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Principle-COND",
    "Trigger": "Governance: Role --[Extend]--> Principle",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Principle",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Extend]--> Principle",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Procedure",
    "Trigger": "Governance: Role --[Extend]--> Procedure",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Extend]--> Procedure",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Procedure",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Extend]--> Procedure",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Process",
    "Trigger": "Governance: Role --[Extend]--> Process",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Process-COND",
    "Trigger": "Governance: Role --[Extend]--> Process",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Process",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Process-CONST",
    "Trigger": "Governance: Role --[Extend]--> Process",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Record",
    "Trigger": "Governance: Role --[Extend]--> Record",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Record-COND",
    "Trigger": "Governance: Role --[Extend]--> Record",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Record",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Record-CONST",
    "Trigger": "Governance: Role --[Extend]--> Record",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Extend]--> Safety Compliance",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Extend]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Extend]--> Safety Compliance",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Extend]--> Safety Issue",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Extend]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Extend]--> Safety Issue",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Software_Component",
    "Trigger": "Governance: Role --[Extend]--> Software Component",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Extend]--> Software Component",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Software Component",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Extend]--> Software Component",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Standard",
    "Trigger": "Governance: Role --[Extend]--> Standard",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Standard-COND",
    "Trigger": "Governance: Role --[Extend]--> Standard",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Standard",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Extend]--> Standard",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-System",
    "Trigger": "Governance: Role --[Extend]--> System",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-System-COND",
    "Trigger": "Governance: Role --[Extend]--> System",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> System",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-System-CONST",
    "Trigger": "Governance: Role --[Extend]--> System",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Task",
    "Trigger": "Governance: Role --[Extend]--> Task",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Task-COND",
    "Trigger": "Governance: Role --[Extend]--> Task",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Task",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Task-CONST",
    "Trigger": "Governance: Role --[Extend]--> Task",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Test_Suite",
    "Trigger": "Governance: Role --[Extend]--> Test Suite",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Extend]--> Test Suite",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Test Suite",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Extend]--> Test Suite",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Vehicle",
    "Trigger": "Governance: Role --[Extend]--> Vehicle",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Extend]--> Vehicle",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Vehicle",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Extend]--> Vehicle",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Extend]--> Verification Plan",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Extend]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Extend]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Extend]--> Verification Plan",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Standard-Standard",
    "Trigger": "Governance: Standard --[Extend]--> Standard",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Standard-Standard-COND",
    "Trigger": "Governance: Standard --[Extend]--> Standard",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Standard-Standard-COND-CONST",
    "Trigger": "Governance: Standard --[Extend]--> Standard",
    "Template": "When <condition>, Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-extend-Standard-Standard-CONST",
    "Trigger": "Governance: Standard --[Extend]--> Standard",
    "Template": "Engineering team shall extend the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Policy-Policy",
    "Trigger": "Governance: Policy --[Generalize]--> Policy",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Policy-Policy-COND",
    "Trigger": "Governance: Policy --[Generalize]--> Policy",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Policy-Policy-COND-CONST",
    "Trigger": "Governance: Policy --[Generalize]--> Policy",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Policy-Policy-CONST",
    "Trigger": "Governance: Policy --[Generalize]--> Policy",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Activity",
    "Trigger": "Governance: Role --[Generalize]--> Activity",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Activity-COND",
    "Trigger": "Governance: Role --[Generalize]--> Activity",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Activity",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Activity",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Business_Unit",
    "Trigger": "Governance: Role --[Generalize]--> Business Unit",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Generalize]--> Business Unit",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Business Unit",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Business Unit",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Component",
    "Trigger": "Governance: Role --[Generalize]--> Component",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Component-COND",
    "Trigger": "Governance: Role --[Generalize]--> Component",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Component",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Component-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Component",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Data",
    "Trigger": "Governance: Role --[Generalize]--> Data",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Data-COND",
    "Trigger": "Governance: Role --[Generalize]--> Data",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Data",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Data-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Data",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Document",
    "Trigger": "Governance: Role --[Generalize]--> Document",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Document-COND",
    "Trigger": "Governance: Role --[Generalize]--> Document",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Document",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Document-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Document",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Driving_Function",
    "Trigger": "Governance: Role --[Generalize]--> Driving Function",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Generalize]--> Driving Function",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Driving Function",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Driving Function",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Field_Data",
    "Trigger": "Governance: Role --[Generalize]--> Field Data",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Generalize]--> Field Data",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Field Data",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Field Data",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Fleet",
    "Trigger": "Governance: Role --[Generalize]--> Fleet",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Generalize]--> Fleet",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Fleet",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Fleet",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Guideline",
    "Trigger": "Governance: Role --[Generalize]--> Guideline",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Generalize]--> Guideline",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Guideline",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Guideline",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Incident",
    "Trigger": "Governance: Role --[Generalize]--> Incident",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Incident-COND",
    "Trigger": "Governance: Role --[Generalize]--> Incident",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Incident",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Incident",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Generalize]--> Lifecycle Phase",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Generalize]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Lifecycle Phase",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Generalize]--> Manufacturing Process",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Generalize]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Manufacturing Process",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Metric",
    "Trigger": "Governance: Role --[Generalize]--> Metric",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Metric-COND",
    "Trigger": "Governance: Role --[Generalize]--> Metric",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Metric",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Metric",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Model",
    "Trigger": "Governance: Role --[Generalize]--> Model",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Model-COND",
    "Trigger": "Governance: Role --[Generalize]--> Model",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Model",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Model-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Model",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Operation",
    "Trigger": "Governance: Role --[Generalize]--> Operation",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Operation-COND",
    "Trigger": "Governance: Role --[Generalize]--> Operation",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Operation",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Operation",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Organization",
    "Trigger": "Governance: Role --[Generalize]--> Organization",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Organization-COND",
    "Trigger": "Governance: Role --[Generalize]--> Organization",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Organization",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Organization",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Policy",
    "Trigger": "Governance: Role --[Generalize]--> Policy",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Policy-COND",
    "Trigger": "Governance: Role --[Generalize]--> Policy",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Policy",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Policy",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Principle",
    "Trigger": "Governance: Role --[Generalize]--> Principle",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Principle-COND",
    "Trigger": "Governance: Role --[Generalize]--> Principle",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Principle",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Principle",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Procedure",
    "Trigger": "Governance: Role --[Generalize]--> Procedure",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Generalize]--> Procedure",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Procedure",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Procedure",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Process",
    "Trigger": "Governance: Role --[Generalize]--> Process",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Process-COND",
    "Trigger": "Governance: Role --[Generalize]--> Process",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Process",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Process-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Process",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Record",
    "Trigger": "Governance: Role --[Generalize]--> Record",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Record-COND",
    "Trigger": "Governance: Role --[Generalize]--> Record",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Record",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Record-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Record",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Generalize]--> Safety Compliance",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Generalize]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Safety Compliance",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Generalize]--> Safety Issue",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Generalize]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Safety Issue",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Software_Component",
    "Trigger": "Governance: Role --[Generalize]--> Software Component",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Generalize]--> Software Component",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Software Component",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Software Component",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Standard",
    "Trigger": "Governance: Role --[Generalize]--> Standard",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Standard-COND",
    "Trigger": "Governance: Role --[Generalize]--> Standard",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Standard",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Standard",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-System",
    "Trigger": "Governance: Role --[Generalize]--> System",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-System-COND",
    "Trigger": "Governance: Role --[Generalize]--> System",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> System",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-System-CONST",
    "Trigger": "Governance: Role --[Generalize]--> System",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Task",
    "Trigger": "Governance: Role --[Generalize]--> Task",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Task-COND",
    "Trigger": "Governance: Role --[Generalize]--> Task",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Task",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Task-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Task",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Test_Suite",
    "Trigger": "Governance: Role --[Generalize]--> Test Suite",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Generalize]--> Test Suite",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Test Suite",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Test Suite",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Vehicle",
    "Trigger": "Governance: Role --[Generalize]--> Vehicle",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Generalize]--> Vehicle",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Vehicle",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Vehicle",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Generalize]--> Verification Plan",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Generalize]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Generalize]--> Verification Plan",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Standard-Standard",
    "Trigger": "Governance: Standard --[Generalize]--> Standard",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Standard-Standard-COND",
    "Trigger": "Governance: Standard --[Generalize]--> Standard",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Standard-Standard-COND-CONST",
    "Trigger": "Governance: Standard --[Generalize]--> Standard",
    "Template": "When <condition>, Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-generalize-Standard-Standard-CONST",
    "Trigger": "Governance: Standard --[Generalize]--> Standard",
    "Template": "Engineering team shall generalize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Activity",
    "Trigger": "Governance: Role --[Implement]--> Activity",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Activity-COND",
    "Trigger": "Governance: Role --[Implement]--> Activity",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Activity",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Implement]--> Activity",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Business_Unit",
    "Trigger": "Governance: Role --[Implement]--> Business Unit",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Implement]--> Business Unit",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Business Unit",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Implement]--> Business Unit",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Component",
    "Trigger": "Governance: Role --[Implement]--> Component",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Component-COND",
    "Trigger": "Governance: Role --[Implement]--> Component",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Component",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Component-CONST",
    "Trigger": "Governance: Role --[Implement]--> Component",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Data",
    "Trigger": "Governance: Role --[Implement]--> Data",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Data-COND",
    "Trigger": "Governance: Role --[Implement]--> Data",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Data",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Data-CONST",
    "Trigger": "Governance: Role --[Implement]--> Data",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Document",
    "Trigger": "Governance: Role --[Implement]--> Document",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Document-COND",
    "Trigger": "Governance: Role --[Implement]--> Document",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Document",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Document-CONST",
    "Trigger": "Governance: Role --[Implement]--> Document",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Driving_Function",
    "Trigger": "Governance: Role --[Implement]--> Driving Function",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Implement]--> Driving Function",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Driving Function",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Implement]--> Driving Function",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Field_Data",
    "Trigger": "Governance: Role --[Implement]--> Field Data",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Implement]--> Field Data",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Field Data",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Implement]--> Field Data",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Fleet",
    "Trigger": "Governance: Role --[Implement]--> Fleet",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Implement]--> Fleet",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Fleet",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Implement]--> Fleet",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Guideline",
    "Trigger": "Governance: Role --[Implement]--> Guideline",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Implement]--> Guideline",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Guideline",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Implement]--> Guideline",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Incident",
    "Trigger": "Governance: Role --[Implement]--> Incident",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Incident-COND",
    "Trigger": "Governance: Role --[Implement]--> Incident",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Incident",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Implement]--> Incident",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Implement]--> Lifecycle Phase",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Implement]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Implement]--> Lifecycle Phase",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Implement]--> Manufacturing Process",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Implement]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Implement]--> Manufacturing Process",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Metric",
    "Trigger": "Governance: Role --[Implement]--> Metric",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Metric-COND",
    "Trigger": "Governance: Role --[Implement]--> Metric",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Metric",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Implement]--> Metric",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Model",
    "Trigger": "Governance: Role --[Implement]--> Model",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Model-COND",
    "Trigger": "Governance: Role --[Implement]--> Model",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Model",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Model-CONST",
    "Trigger": "Governance: Role --[Implement]--> Model",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Operation",
    "Trigger": "Governance: Role --[Implement]--> Operation",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Operation-COND",
    "Trigger": "Governance: Role --[Implement]--> Operation",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Operation",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Implement]--> Operation",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Organization",
    "Trigger": "Governance: Role --[Implement]--> Organization",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Organization-COND",
    "Trigger": "Governance: Role --[Implement]--> Organization",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Organization",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Implement]--> Organization",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Policy",
    "Trigger": "Governance: Role --[Implement]--> Policy",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Policy-COND",
    "Trigger": "Governance: Role --[Implement]--> Policy",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Policy",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Implement]--> Policy",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Principle",
    "Trigger": "Governance: Role --[Implement]--> Principle",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Principle-COND",
    "Trigger": "Governance: Role --[Implement]--> Principle",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Principle",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Implement]--> Principle",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Procedure",
    "Trigger": "Governance: Role --[Implement]--> Procedure",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Implement]--> Procedure",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Procedure",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Implement]--> Procedure",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Process",
    "Trigger": "Governance: Role --[Implement]--> Process",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Process-COND",
    "Trigger": "Governance: Role --[Implement]--> Process",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Process",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Process-CONST",
    "Trigger": "Governance: Role --[Implement]--> Process",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Record",
    "Trigger": "Governance: Role --[Implement]--> Record",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Record-COND",
    "Trigger": "Governance: Role --[Implement]--> Record",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Record",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Record-CONST",
    "Trigger": "Governance: Role --[Implement]--> Record",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Implement]--> Safety Compliance",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Implement]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Implement]--> Safety Compliance",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Implement]--> Safety Issue",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Implement]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Implement]--> Safety Issue",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Software_Component",
    "Trigger": "Governance: Role --[Implement]--> Software Component",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Implement]--> Software Component",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Software Component",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Implement]--> Software Component",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Standard",
    "Trigger": "Governance: Role --[Implement]--> Standard",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Standard-COND",
    "Trigger": "Governance: Role --[Implement]--> Standard",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Standard",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Implement]--> Standard",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-System",
    "Trigger": "Governance: Role --[Implement]--> System",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-System-COND",
    "Trigger": "Governance: Role --[Implement]--> System",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> System",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-System-CONST",
    "Trigger": "Governance: Role --[Implement]--> System",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Task",
    "Trigger": "Governance: Role --[Implement]--> Task",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Task-COND",
    "Trigger": "Governance: Role --[Implement]--> Task",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Task",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Task-CONST",
    "Trigger": "Governance: Role --[Implement]--> Task",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Test_Suite",
    "Trigger": "Governance: Role --[Implement]--> Test Suite",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Implement]--> Test Suite",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Test Suite",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Implement]--> Test Suite",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Vehicle",
    "Trigger": "Governance: Role --[Implement]--> Vehicle",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Implement]--> Vehicle",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Vehicle",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Implement]--> Vehicle",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Implement]--> Verification Plan",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Implement]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Implement]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-implement-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Implement]--> Verification Plan",
    "Template": "Engineering team shall implement the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Activity",
    "Trigger": "Governance: Role --[Improve]--> Activity",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Activity-COND",
    "Trigger": "Governance: Role --[Improve]--> Activity",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Activity",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Improve]--> Activity",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Business_Unit",
    "Trigger": "Governance: Role --[Improve]--> Business Unit",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Improve]--> Business Unit",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Business Unit",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Improve]--> Business Unit",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Component",
    "Trigger": "Governance: Role --[Improve]--> Component",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Component-COND",
    "Trigger": "Governance: Role --[Improve]--> Component",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Component",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Component-CONST",
    "Trigger": "Governance: Role --[Improve]--> Component",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Data",
    "Trigger": "Governance: Role --[Improve]--> Data",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Data-COND",
    "Trigger": "Governance: Role --[Improve]--> Data",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Data",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Data-CONST",
    "Trigger": "Governance: Role --[Improve]--> Data",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Document",
    "Trigger": "Governance: Role --[Improve]--> Document",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Document-COND",
    "Trigger": "Governance: Role --[Improve]--> Document",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Document",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Document-CONST",
    "Trigger": "Governance: Role --[Improve]--> Document",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Driving_Function",
    "Trigger": "Governance: Role --[Improve]--> Driving Function",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Improve]--> Driving Function",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Driving Function",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Improve]--> Driving Function",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Field_Data",
    "Trigger": "Governance: Role --[Improve]--> Field Data",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Improve]--> Field Data",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Field Data",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Improve]--> Field Data",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Fleet",
    "Trigger": "Governance: Role --[Improve]--> Fleet",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Improve]--> Fleet",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Fleet",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Improve]--> Fleet",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Guideline",
    "Trigger": "Governance: Role --[Improve]--> Guideline",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Improve]--> Guideline",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Guideline",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Improve]--> Guideline",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Incident",
    "Trigger": "Governance: Role --[Improve]--> Incident",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Incident-COND",
    "Trigger": "Governance: Role --[Improve]--> Incident",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Incident",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Improve]--> Incident",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Improve]--> Lifecycle Phase",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Improve]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Improve]--> Lifecycle Phase",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Improve]--> Manufacturing Process",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Improve]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Improve]--> Manufacturing Process",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Metric",
    "Trigger": "Governance: Role --[Improve]--> Metric",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Metric-COND",
    "Trigger": "Governance: Role --[Improve]--> Metric",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Metric",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Improve]--> Metric",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Model",
    "Trigger": "Governance: Role --[Improve]--> Model",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Model-COND",
    "Trigger": "Governance: Role --[Improve]--> Model",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Model",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Model-CONST",
    "Trigger": "Governance: Role --[Improve]--> Model",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Operation",
    "Trigger": "Governance: Role --[Improve]--> Operation",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Operation-COND",
    "Trigger": "Governance: Role --[Improve]--> Operation",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Operation",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Improve]--> Operation",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Organization",
    "Trigger": "Governance: Role --[Improve]--> Organization",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Organization-COND",
    "Trigger": "Governance: Role --[Improve]--> Organization",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Organization",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Improve]--> Organization",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Policy",
    "Trigger": "Governance: Role --[Improve]--> Policy",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Policy-COND",
    "Trigger": "Governance: Role --[Improve]--> Policy",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Policy",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Improve]--> Policy",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Principle",
    "Trigger": "Governance: Role --[Improve]--> Principle",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Principle-COND",
    "Trigger": "Governance: Role --[Improve]--> Principle",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Principle",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Improve]--> Principle",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Procedure",
    "Trigger": "Governance: Role --[Improve]--> Procedure",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Improve]--> Procedure",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Procedure",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Improve]--> Procedure",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Process",
    "Trigger": "Governance: Role --[Improve]--> Process",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Process-COND",
    "Trigger": "Governance: Role --[Improve]--> Process",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Process",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Process-CONST",
    "Trigger": "Governance: Role --[Improve]--> Process",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Record",
    "Trigger": "Governance: Role --[Improve]--> Record",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Record-COND",
    "Trigger": "Governance: Role --[Improve]--> Record",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Record",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Record-CONST",
    "Trigger": "Governance: Role --[Improve]--> Record",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Improve]--> Safety Compliance",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Improve]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Improve]--> Safety Compliance",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Improve]--> Safety Issue",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Improve]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Improve]--> Safety Issue",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Software_Component",
    "Trigger": "Governance: Role --[Improve]--> Software Component",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Improve]--> Software Component",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Software Component",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Improve]--> Software Component",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Standard",
    "Trigger": "Governance: Role --[Improve]--> Standard",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Standard-COND",
    "Trigger": "Governance: Role --[Improve]--> Standard",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Standard",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Improve]--> Standard",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-System",
    "Trigger": "Governance: Role --[Improve]--> System",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-System-COND",
    "Trigger": "Governance: Role --[Improve]--> System",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> System",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-System-CONST",
    "Trigger": "Governance: Role --[Improve]--> System",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Task",
    "Trigger": "Governance: Role --[Improve]--> Task",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Task-COND",
    "Trigger": "Governance: Role --[Improve]--> Task",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Task",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Task-CONST",
    "Trigger": "Governance: Role --[Improve]--> Task",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Test_Suite",
    "Trigger": "Governance: Role --[Improve]--> Test Suite",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Improve]--> Test Suite",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Test Suite",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Improve]--> Test Suite",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Vehicle",
    "Trigger": "Governance: Role --[Improve]--> Vehicle",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Improve]--> Vehicle",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Vehicle",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Improve]--> Vehicle",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Improve]--> Verification Plan",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Improve]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Improve]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-improve-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Improve]--> Verification Plan",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Activity",
    "Trigger": "Governance: Role --[Inspect]--> Activity",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Activity-COND",
    "Trigger": "Governance: Role --[Inspect]--> Activity",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Activity",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Activity",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Business_Unit",
    "Trigger": "Governance: Role --[Inspect]--> Business Unit",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Inspect]--> Business Unit",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Business Unit",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Business Unit",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Component",
    "Trigger": "Governance: Role --[Inspect]--> Component",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Component-COND",
    "Trigger": "Governance: Role --[Inspect]--> Component",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Component",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Component-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Component",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Data",
    "Trigger": "Governance: Role --[Inspect]--> Data",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Data-COND",
    "Trigger": "Governance: Role --[Inspect]--> Data",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Data",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Data-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Data",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Document",
    "Trigger": "Governance: Role --[Inspect]--> Document",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Document-COND",
    "Trigger": "Governance: Role --[Inspect]--> Document",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Document",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Document-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Document",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Driving_Function",
    "Trigger": "Governance: Role --[Inspect]--> Driving Function",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Inspect]--> Driving Function",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Driving Function",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Driving Function",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Field_Data",
    "Trigger": "Governance: Role --[Inspect]--> Field Data",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Inspect]--> Field Data",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Field Data",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Field Data",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Fleet",
    "Trigger": "Governance: Role --[Inspect]--> Fleet",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Inspect]--> Fleet",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Fleet",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Fleet",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Guideline",
    "Trigger": "Governance: Role --[Inspect]--> Guideline",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Inspect]--> Guideline",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Guideline",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Guideline",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Incident",
    "Trigger": "Governance: Role --[Inspect]--> Incident",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Incident-COND",
    "Trigger": "Governance: Role --[Inspect]--> Incident",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Incident",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Incident",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Inspect]--> Lifecycle Phase",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Inspect]--> Lifecycle Phase",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Lifecycle Phase",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Lifecycle Phase",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Inspect]--> Manufacturing Process",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Inspect]--> Manufacturing Process",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Manufacturing Process",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Manufacturing Process",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Metric",
    "Trigger": "Governance: Role --[Inspect]--> Metric",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Metric-COND",
    "Trigger": "Governance: Role --[Inspect]--> Metric",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Metric",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Metric",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Model",
    "Trigger": "Governance: Role --[Inspect]--> Model",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Model-COND",
    "Trigger": "Governance: Role --[Inspect]--> Model",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Model",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Model-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Model",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Operation",
    "Trigger": "Governance: Role --[Inspect]--> Operation",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Operation-COND",
    "Trigger": "Governance: Role --[Inspect]--> Operation",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Operation",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Operation",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Organization",
    "Trigger": "Governance: Role --[Inspect]--> Organization",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Organization-COND",
    "Trigger": "Governance: Role --[Inspect]--> Organization",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Organization",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Organization",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Policy",
    "Trigger": "Governance: Role --[Inspect]--> Policy",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Policy-COND",
    "Trigger": "Governance: Role --[Inspect]--> Policy",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Policy",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Policy",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Principle",
    "Trigger": "Governance: Role --[Inspect]--> Principle",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Principle-COND",
    "Trigger": "Governance: Role --[Inspect]--> Principle",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Principle",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Principle",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Procedure",
    "Trigger": "Governance: Role --[Inspect]--> Procedure",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Inspect]--> Procedure",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Procedure",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Procedure",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Process",
    "Trigger": "Governance: Role --[Inspect]--> Process",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Process-COND",
    "Trigger": "Governance: Role --[Inspect]--> Process",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Process",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Process-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Process",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Record",
    "Trigger": "Governance: Role --[Inspect]--> Record",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Record-COND",
    "Trigger": "Governance: Role --[Inspect]--> Record",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Record",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Record-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Record",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Inspect]--> Safety Compliance",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Inspect]--> Safety Compliance",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Safety Compliance",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Safety Compliance",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Inspect]--> Safety Issue",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Inspect]--> Safety Issue",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Safety Issue",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Safety Issue",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Software_Component",
    "Trigger": "Governance: Role --[Inspect]--> Software Component",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Inspect]--> Software Component",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Software Component",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Software Component",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Standard",
    "Trigger": "Governance: Role --[Inspect]--> Standard",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Standard-COND",
    "Trigger": "Governance: Role --[Inspect]--> Standard",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Standard",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Standard",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-System",
    "Trigger": "Governance: Role --[Inspect]--> System",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-System-COND",
    "Trigger": "Governance: Role --[Inspect]--> System",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> System",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-System-CONST",
    "Trigger": "Governance: Role --[Inspect]--> System",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Task",
    "Trigger": "Governance: Role --[Inspect]--> Task",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Task-COND",
    "Trigger": "Governance: Role --[Inspect]--> Task",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Task",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Task-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Task",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Test_Suite",
    "Trigger": "Governance: Role --[Inspect]--> Test Suite",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Inspect]--> Test Suite",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Test Suite",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Test Suite",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Vehicle",
    "Trigger": "Governance: Role --[Inspect]--> Vehicle",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Inspect]--> Vehicle",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Vehicle",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Vehicle",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Inspect]--> Verification Plan",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Inspect]--> Verification Plan",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Verification Plan",
    "Template": "When <condition>, Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-inspect-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Inspect]--> Verification Plan",
    "Template": "Inspection team shall inspect the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Activity",
    "Trigger": "Governance: Role --[Manufacture]--> Activity",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Activity-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Activity",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Activity",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Activity",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Business_Unit",
    "Trigger": "Governance: Role --[Manufacture]--> Business Unit",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Business Unit",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Business Unit",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Business Unit",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Component",
    "Trigger": "Governance: Role --[Manufacture]--> Component",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Component-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Component",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Component",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Component-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Component",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Data",
    "Trigger": "Governance: Role --[Manufacture]--> Data",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Data-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Data",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Data",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Data-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Data",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Document",
    "Trigger": "Governance: Role --[Manufacture]--> Document",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Document-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Document",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Document",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Document-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Document",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Driving_Function",
    "Trigger": "Governance: Role --[Manufacture]--> Driving Function",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Driving Function",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Driving Function",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Driving Function",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Field_Data",
    "Trigger": "Governance: Role --[Manufacture]--> Field Data",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Field Data",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Field Data",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Field Data",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Fleet",
    "Trigger": "Governance: Role --[Manufacture]--> Fleet",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Fleet",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Fleet",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Fleet",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Guideline",
    "Trigger": "Governance: Role --[Manufacture]--> Guideline",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Guideline",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Guideline",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Guideline",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Incident",
    "Trigger": "Governance: Role --[Manufacture]--> Incident",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Incident-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Incident",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Incident",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Incident",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Manufacture]--> Lifecycle Phase",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Lifecycle Phase",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Lifecycle Phase",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Lifecycle Phase",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Manufacture]--> Manufacturing Process",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Manufacturing Process",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Manufacturing Process",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Manufacturing Process",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Metric",
    "Trigger": "Governance: Role --[Manufacture]--> Metric",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Metric-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Metric",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Metric",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Metric",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Model",
    "Trigger": "Governance: Role --[Manufacture]--> Model",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Model-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Model",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Model",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Model-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Model",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Operation",
    "Trigger": "Governance: Role --[Manufacture]--> Operation",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Operation-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Operation",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Operation",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Operation",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Organization",
    "Trigger": "Governance: Role --[Manufacture]--> Organization",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Organization-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Organization",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Organization",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Organization",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Policy",
    "Trigger": "Governance: Role --[Manufacture]--> Policy",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Policy-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Policy",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Policy",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Policy",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Principle",
    "Trigger": "Governance: Role --[Manufacture]--> Principle",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Principle-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Principle",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Principle",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Principle",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Procedure",
    "Trigger": "Governance: Role --[Manufacture]--> Procedure",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Procedure",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Procedure",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Procedure",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Process",
    "Trigger": "Governance: Role --[Manufacture]--> Process",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Process-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Process",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Process",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Process-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Process",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Record",
    "Trigger": "Governance: Role --[Manufacture]--> Record",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Record-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Record",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Record",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Record-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Record",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Manufacture]--> Safety Compliance",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Safety Compliance",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Safety Compliance",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Safety Compliance",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Manufacture]--> Safety Issue",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Safety Issue",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Safety Issue",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Safety Issue",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Software_Component",
    "Trigger": "Governance: Role --[Manufacture]--> Software Component",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Software Component",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Software Component",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Software Component",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Standard",
    "Trigger": "Governance: Role --[Manufacture]--> Standard",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Standard-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Standard",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Standard",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Standard",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-System",
    "Trigger": "Governance: Role --[Manufacture]--> System",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-System-COND",
    "Trigger": "Governance: Role --[Manufacture]--> System",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> System",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-System-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> System",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Task",
    "Trigger": "Governance: Role --[Manufacture]--> Task",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Task-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Task",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Task",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Task-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Task",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Test_Suite",
    "Trigger": "Governance: Role --[Manufacture]--> Test Suite",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Test Suite",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Test Suite",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Test Suite",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Vehicle",
    "Trigger": "Governance: Role --[Manufacture]--> Vehicle",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Vehicle",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Vehicle",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Vehicle",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Manufacture]--> Verification Plan",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Manufacture]--> Verification Plan",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Verification Plan",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-manufacture-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Manufacture]--> Verification Plan",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Activity",
    "Trigger": "Governance: Role --[Monitors]--> Activity",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Activity-COND",
    "Trigger": "Governance: Role --[Monitors]--> Activity",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Activity",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Activity",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Business_Unit",
    "Trigger": "Governance: Role --[Monitors]--> Business Unit",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Monitors]--> Business Unit",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Business Unit",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Business Unit",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Component",
    "Trigger": "Governance: Role --[Monitors]--> Component",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Component-COND",
    "Trigger": "Governance: Role --[Monitors]--> Component",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Component",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Component-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Component",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Data",
    "Trigger": "Governance: Role --[Monitors]--> Data",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Data-COND",
    "Trigger": "Governance: Role --[Monitors]--> Data",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Data",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Data-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Data",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Document",
    "Trigger": "Governance: Role --[Monitors]--> Document",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Document-COND",
    "Trigger": "Governance: Role --[Monitors]--> Document",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Document",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Document-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Document",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Driving_Function",
    "Trigger": "Governance: Role --[Monitors]--> Driving Function",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Monitors]--> Driving Function",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Driving Function",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Driving Function",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Field_Data",
    "Trigger": "Governance: Role --[Monitors]--> Field Data",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Monitors]--> Field Data",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Field Data",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Field Data",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Fleet",
    "Trigger": "Governance: Role --[Monitors]--> Fleet",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Monitors]--> Fleet",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Fleet",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Fleet",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Guideline",
    "Trigger": "Governance: Role --[Monitors]--> Guideline",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Monitors]--> Guideline",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Guideline",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Guideline",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Incident",
    "Trigger": "Governance: Role --[Monitors]--> Incident",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Incident-COND",
    "Trigger": "Governance: Role --[Monitors]--> Incident",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Incident",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Incident",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Monitors]--> Lifecycle Phase",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Monitors]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Lifecycle Phase",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Monitors]--> Manufacturing Process",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Monitors]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Manufacturing Process",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Metric",
    "Trigger": "Governance: Role --[Monitors]--> Metric",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Metric-COND",
    "Trigger": "Governance: Role --[Monitors]--> Metric",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Metric",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Metric",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Model",
    "Trigger": "Governance: Role --[Monitors]--> Model",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Model-COND",
    "Trigger": "Governance: Role --[Monitors]--> Model",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Model",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Model-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Model",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Operation",
    "Trigger": "Governance: Role --[Monitors]--> Operation",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Operation-COND",
    "Trigger": "Governance: Role --[Monitors]--> Operation",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Operation",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Operation",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Organization",
    "Trigger": "Governance: Role --[Monitors]--> Organization",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Organization-COND",
    "Trigger": "Governance: Role --[Monitors]--> Organization",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Organization",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Organization",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Policy",
    "Trigger": "Governance: Role --[Monitors]--> Policy",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Policy-COND",
    "Trigger": "Governance: Role --[Monitors]--> Policy",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Policy",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Policy",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Principle",
    "Trigger": "Governance: Role --[Monitors]--> Principle",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Principle-COND",
    "Trigger": "Governance: Role --[Monitors]--> Principle",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Principle",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Principle",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Procedure",
    "Trigger": "Governance: Role --[Monitors]--> Procedure",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Monitors]--> Procedure",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Procedure",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Procedure",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Process",
    "Trigger": "Governance: Role --[Monitors]--> Process",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Process-COND",
    "Trigger": "Governance: Role --[Monitors]--> Process",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Process",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Process-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Process",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Record",
    "Trigger": "Governance: Role --[Monitors]--> Record",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Record-COND",
    "Trigger": "Governance: Role --[Monitors]--> Record",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Record",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Record-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Record",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Monitors]--> Safety Compliance",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Monitors]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Safety Compliance",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Monitors]--> Safety Issue",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Monitors]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Safety Issue",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Software_Component",
    "Trigger": "Governance: Role --[Monitors]--> Software Component",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Monitors]--> Software Component",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Software Component",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Software Component",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Standard",
    "Trigger": "Governance: Role --[Monitors]--> Standard",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Standard-COND",
    "Trigger": "Governance: Role --[Monitors]--> Standard",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Standard",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Standard",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-System",
    "Trigger": "Governance: Role --[Monitors]--> System",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-System-COND",
    "Trigger": "Governance: Role --[Monitors]--> System",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> System",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-System-CONST",
    "Trigger": "Governance: Role --[Monitors]--> System",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Task",
    "Trigger": "Governance: Role --[Monitors]--> Task",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Task-COND",
    "Trigger": "Governance: Role --[Monitors]--> Task",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Task",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Task-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Task",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Test_Suite",
    "Trigger": "Governance: Role --[Monitors]--> Test Suite",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Monitors]--> Test Suite",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Test Suite",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Test Suite",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Vehicle",
    "Trigger": "Governance: Role --[Monitors]--> Vehicle",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Monitors]--> Vehicle",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Vehicle",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Vehicle",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Monitors]--> Verification Plan",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Monitors]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Monitors]--> Verification Plan",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Activity",
    "Trigger": "Governance: Role --[Operate]--> Activity",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Activity-COND",
    "Trigger": "Governance: Role --[Operate]--> Activity",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Activity",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Operate]--> Activity",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Business_Unit",
    "Trigger": "Governance: Role --[Operate]--> Business Unit",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Operate]--> Business Unit",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Business Unit",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Operate]--> Business Unit",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Component",
    "Trigger": "Governance: Role --[Operate]--> Component",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Component-COND",
    "Trigger": "Governance: Role --[Operate]--> Component",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Component",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Component-CONST",
    "Trigger": "Governance: Role --[Operate]--> Component",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Data",
    "Trigger": "Governance: Role --[Operate]--> Data",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Data-COND",
    "Trigger": "Governance: Role --[Operate]--> Data",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Data",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Data-CONST",
    "Trigger": "Governance: Role --[Operate]--> Data",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Document",
    "Trigger": "Governance: Role --[Operate]--> Document",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Document-COND",
    "Trigger": "Governance: Role --[Operate]--> Document",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Document",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Document-CONST",
    "Trigger": "Governance: Role --[Operate]--> Document",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Driving_Function",
    "Trigger": "Governance: Role --[Operate]--> Driving Function",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Operate]--> Driving Function",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Driving Function",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Operate]--> Driving Function",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Field_Data",
    "Trigger": "Governance: Role --[Operate]--> Field Data",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Operate]--> Field Data",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Field Data",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Operate]--> Field Data",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Fleet",
    "Trigger": "Governance: Role --[Operate]--> Fleet",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Operate]--> Fleet",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Fleet",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Operate]--> Fleet",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Guideline",
    "Trigger": "Governance: Role --[Operate]--> Guideline",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Operate]--> Guideline",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Guideline",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Operate]--> Guideline",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Incident",
    "Trigger": "Governance: Role --[Operate]--> Incident",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Incident-COND",
    "Trigger": "Governance: Role --[Operate]--> Incident",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Incident",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Operate]--> Incident",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Operate]--> Lifecycle Phase",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Operate]--> Lifecycle Phase",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Lifecycle Phase",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Operate]--> Lifecycle Phase",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Operate]--> Manufacturing Process",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Operate]--> Manufacturing Process",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Manufacturing Process",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Operate]--> Manufacturing Process",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Metric",
    "Trigger": "Governance: Role --[Operate]--> Metric",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Metric-COND",
    "Trigger": "Governance: Role --[Operate]--> Metric",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Metric",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Operate]--> Metric",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Model",
    "Trigger": "Governance: Role --[Operate]--> Model",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Model-COND",
    "Trigger": "Governance: Role --[Operate]--> Model",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Model",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Model-CONST",
    "Trigger": "Governance: Role --[Operate]--> Model",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Operation",
    "Trigger": "Governance: Role --[Operate]--> Operation",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Operation-COND",
    "Trigger": "Governance: Role --[Operate]--> Operation",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Operation",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Operate]--> Operation",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Organization",
    "Trigger": "Governance: Role --[Operate]--> Organization",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Organization-COND",
    "Trigger": "Governance: Role --[Operate]--> Organization",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Organization",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Operate]--> Organization",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Policy",
    "Trigger": "Governance: Role --[Operate]--> Policy",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Policy-COND",
    "Trigger": "Governance: Role --[Operate]--> Policy",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Policy",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Operate]--> Policy",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Principle",
    "Trigger": "Governance: Role --[Operate]--> Principle",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Principle-COND",
    "Trigger": "Governance: Role --[Operate]--> Principle",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Principle",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Operate]--> Principle",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Procedure",
    "Trigger": "Governance: Role --[Operate]--> Procedure",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Operate]--> Procedure",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Procedure",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Operate]--> Procedure",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Process",
    "Trigger": "Governance: Role --[Operate]--> Process",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Process-COND",
    "Trigger": "Governance: Role --[Operate]--> Process",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Process",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Process-CONST",
    "Trigger": "Governance: Role --[Operate]--> Process",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Record",
    "Trigger": "Governance: Role --[Operate]--> Record",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Record-COND",
    "Trigger": "Governance: Role --[Operate]--> Record",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Record",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Record-CONST",
    "Trigger": "Governance: Role --[Operate]--> Record",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Operate]--> Safety Compliance",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Operate]--> Safety Compliance",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Safety Compliance",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Operate]--> Safety Compliance",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Operate]--> Safety Issue",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Operate]--> Safety Issue",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Safety Issue",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Operate]--> Safety Issue",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Software_Component",
    "Trigger": "Governance: Role --[Operate]--> Software Component",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Operate]--> Software Component",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Software Component",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Operate]--> Software Component",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Standard",
    "Trigger": "Governance: Role --[Operate]--> Standard",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Standard-COND",
    "Trigger": "Governance: Role --[Operate]--> Standard",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Standard",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Operate]--> Standard",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-System",
    "Trigger": "Governance: Role --[Operate]--> System",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-System-COND",
    "Trigger": "Governance: Role --[Operate]--> System",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> System",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-System-CONST",
    "Trigger": "Governance: Role --[Operate]--> System",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Task",
    "Trigger": "Governance: Role --[Operate]--> Task",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Task-COND",
    "Trigger": "Governance: Role --[Operate]--> Task",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Task",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Task-CONST",
    "Trigger": "Governance: Role --[Operate]--> Task",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Test_Suite",
    "Trigger": "Governance: Role --[Operate]--> Test Suite",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Operate]--> Test Suite",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Test Suite",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Operate]--> Test Suite",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Vehicle",
    "Trigger": "Governance: Role --[Operate]--> Vehicle",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Operate]--> Vehicle",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Vehicle",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Operate]--> Vehicle",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Operate]--> Verification Plan",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Operate]--> Verification Plan",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Operate]--> Verification Plan",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-operate-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Operate]--> Verification Plan",
    "Template": "Operations team shall operate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Activity",
    "Trigger": "Governance: Role --[Performs]--> Activity",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Activity-COND",
    "Trigger": "Governance: Role --[Performs]--> Activity",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Activity",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Performs]--> Activity",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Business_Unit",
    "Trigger": "Governance: Role --[Performs]--> Business Unit",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Performs]--> Business Unit",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Business Unit",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Performs]--> Business Unit",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Component",
    "Trigger": "Governance: Role --[Performs]--> Component",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Component-COND",
    "Trigger": "Governance: Role --[Performs]--> Component",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Component",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Component-CONST",
    "Trigger": "Governance: Role --[Performs]--> Component",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Data",
    "Trigger": "Governance: Role --[Performs]--> Data",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Data-COND",
    "Trigger": "Governance: Role --[Performs]--> Data",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Data",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Data-CONST",
    "Trigger": "Governance: Role --[Performs]--> Data",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Document",
    "Trigger": "Governance: Role --[Performs]--> Document",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Document-COND",
    "Trigger": "Governance: Role --[Performs]--> Document",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Document",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Document-CONST",
    "Trigger": "Governance: Role --[Performs]--> Document",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Driving_Function",
    "Trigger": "Governance: Role --[Performs]--> Driving Function",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Performs]--> Driving Function",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Driving Function",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Performs]--> Driving Function",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Field_Data",
    "Trigger": "Governance: Role --[Performs]--> Field Data",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Performs]--> Field Data",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Field Data",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Performs]--> Field Data",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Fleet",
    "Trigger": "Governance: Role --[Performs]--> Fleet",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Performs]--> Fleet",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Fleet",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Performs]--> Fleet",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Guideline",
    "Trigger": "Governance: Role --[Performs]--> Guideline",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Performs]--> Guideline",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Guideline",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Performs]--> Guideline",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Incident",
    "Trigger": "Governance: Role --[Performs]--> Incident",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Incident-COND",
    "Trigger": "Governance: Role --[Performs]--> Incident",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Incident",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Performs]--> Incident",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Performs]--> Lifecycle Phase",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Performs]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Performs]--> Lifecycle Phase",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Performs]--> Manufacturing Process",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Performs]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Performs]--> Manufacturing Process",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Metric",
    "Trigger": "Governance: Role --[Performs]--> Metric",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Metric-COND",
    "Trigger": "Governance: Role --[Performs]--> Metric",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Metric",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Performs]--> Metric",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Model",
    "Trigger": "Governance: Role --[Performs]--> Model",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Model-COND",
    "Trigger": "Governance: Role --[Performs]--> Model",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Model",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Model-CONST",
    "Trigger": "Governance: Role --[Performs]--> Model",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Operation",
    "Trigger": "Governance: Role --[Performs]--> Operation",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Operation-COND",
    "Trigger": "Governance: Role --[Performs]--> Operation",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Operation",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Performs]--> Operation",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Organization",
    "Trigger": "Governance: Role --[Performs]--> Organization",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Organization-COND",
    "Trigger": "Governance: Role --[Performs]--> Organization",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Organization",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Performs]--> Organization",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Policy",
    "Trigger": "Governance: Role --[Performs]--> Policy",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Policy-COND",
    "Trigger": "Governance: Role --[Performs]--> Policy",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Policy",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Performs]--> Policy",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Principle",
    "Trigger": "Governance: Role --[Performs]--> Principle",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Principle-COND",
    "Trigger": "Governance: Role --[Performs]--> Principle",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Principle",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Performs]--> Principle",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Procedure",
    "Trigger": "Governance: Role --[Performs]--> Procedure",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Performs]--> Procedure",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Procedure",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Performs]--> Procedure",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Process",
    "Trigger": "Governance: Role --[Performs]--> Process",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Process-COND",
    "Trigger": "Governance: Role --[Performs]--> Process",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Process",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Process-CONST",
    "Trigger": "Governance: Role --[Performs]--> Process",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Record",
    "Trigger": "Governance: Role --[Performs]--> Record",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Record-COND",
    "Trigger": "Governance: Role --[Performs]--> Record",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Record",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Record-CONST",
    "Trigger": "Governance: Role --[Performs]--> Record",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Performs]--> Safety Compliance",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Performs]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Performs]--> Safety Compliance",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Performs]--> Safety Issue",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Performs]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Performs]--> Safety Issue",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Software_Component",
    "Trigger": "Governance: Role --[Performs]--> Software Component",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Performs]--> Software Component",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Software Component",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Performs]--> Software Component",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Standard",
    "Trigger": "Governance: Role --[Performs]--> Standard",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Standard-COND",
    "Trigger": "Governance: Role --[Performs]--> Standard",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Standard",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Performs]--> Standard",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-System",
    "Trigger": "Governance: Role --[Performs]--> System",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-System-COND",
    "Trigger": "Governance: Role --[Performs]--> System",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> System",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-System-CONST",
    "Trigger": "Governance: Role --[Performs]--> System",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Task",
    "Trigger": "Governance: Role --[Performs]--> Task",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Task-COND",
    "Trigger": "Governance: Role --[Performs]--> Task",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Task",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Task-CONST",
    "Trigger": "Governance: Role --[Performs]--> Task",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Test_Suite",
    "Trigger": "Governance: Role --[Performs]--> Test Suite",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Performs]--> Test Suite",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Test Suite",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Performs]--> Test Suite",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Vehicle",
    "Trigger": "Governance: Role --[Performs]--> Vehicle",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Performs]--> Vehicle",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Vehicle",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Performs]--> Vehicle",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Performs]--> Verification Plan",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Performs]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Performs]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-performs-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Performs]--> Verification Plan",
    "Template": "Engineering team shall perform the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Process-Data",
    "Trigger": "Governance: Process --[Produces]--> Data",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Process-Data-COND",
    "Trigger": "Governance: Process --[Produces]--> Data",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Process-Data-COND-CONST",
    "Trigger": "Governance: Process --[Produces]--> Data",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Process-Data-CONST",
    "Trigger": "Governance: Process --[Produces]--> Data",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Process-Document",
    "Trigger": "Governance: Process --[Produces]--> Document",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Process-Document-COND",
    "Trigger": "Governance: Process --[Produces]--> Document",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Process-Document-COND-CONST",
    "Trigger": "Governance: Process --[Produces]--> Document",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Process-Document-CONST",
    "Trigger": "Governance: Process --[Produces]--> Document",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Process-Record",
    "Trigger": "Governance: Process --[Produces]--> Record",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Process-Record-COND",
    "Trigger": "Governance: Process --[Produces]--> Record",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Process-Record-COND-CONST",
    "Trigger": "Governance: Process --[Produces]--> Record",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Process-Record-CONST",
    "Trigger": "Governance: Process --[Produces]--> Record",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Activity",
    "Trigger": "Governance: Role --[Produces]--> Activity",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Activity-COND",
    "Trigger": "Governance: Role --[Produces]--> Activity",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Activity",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Produces]--> Activity",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Business_Unit",
    "Trigger": "Governance: Role --[Produces]--> Business Unit",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Produces]--> Business Unit",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Business Unit",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Produces]--> Business Unit",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Component",
    "Trigger": "Governance: Role --[Produces]--> Component",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Component-COND",
    "Trigger": "Governance: Role --[Produces]--> Component",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Component",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Component-CONST",
    "Trigger": "Governance: Role --[Produces]--> Component",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Data",
    "Trigger": "Governance: Role --[Produces]--> Data",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Data-COND",
    "Trigger": "Governance: Role --[Produces]--> Data",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Data",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Data-CONST",
    "Trigger": "Governance: Role --[Produces]--> Data",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Document",
    "Trigger": "Governance: Role --[Produces]--> Document",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Document-COND",
    "Trigger": "Governance: Role --[Produces]--> Document",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Document",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Document-CONST",
    "Trigger": "Governance: Role --[Produces]--> Document",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Driving_Function",
    "Trigger": "Governance: Role --[Produces]--> Driving Function",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Produces]--> Driving Function",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Driving Function",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Produces]--> Driving Function",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Field_Data",
    "Trigger": "Governance: Role --[Produces]--> Field Data",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Produces]--> Field Data",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Field Data",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Produces]--> Field Data",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Fleet",
    "Trigger": "Governance: Role --[Produces]--> Fleet",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Produces]--> Fleet",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Fleet",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Produces]--> Fleet",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Guideline",
    "Trigger": "Governance: Role --[Produces]--> Guideline",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Produces]--> Guideline",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Guideline",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Produces]--> Guideline",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Incident",
    "Trigger": "Governance: Role --[Produces]--> Incident",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Incident-COND",
    "Trigger": "Governance: Role --[Produces]--> Incident",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Incident",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Produces]--> Incident",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Produces]--> Lifecycle Phase",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Produces]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Produces]--> Lifecycle Phase",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Produces]--> Manufacturing Process",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Produces]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Produces]--> Manufacturing Process",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Metric",
    "Trigger": "Governance: Role --[Produces]--> Metric",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Metric-COND",
    "Trigger": "Governance: Role --[Produces]--> Metric",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Metric",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Produces]--> Metric",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Model",
    "Trigger": "Governance: Role --[Produces]--> Model",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Model-COND",
    "Trigger": "Governance: Role --[Produces]--> Model",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Model",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Model-CONST",
    "Trigger": "Governance: Role --[Produces]--> Model",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Operation",
    "Trigger": "Governance: Role --[Produces]--> Operation",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Operation-COND",
    "Trigger": "Governance: Role --[Produces]--> Operation",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Operation",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Produces]--> Operation",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Organization",
    "Trigger": "Governance: Role --[Produces]--> Organization",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Organization-COND",
    "Trigger": "Governance: Role --[Produces]--> Organization",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Organization",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Produces]--> Organization",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Policy",
    "Trigger": "Governance: Role --[Produces]--> Policy",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Policy-COND",
    "Trigger": "Governance: Role --[Produces]--> Policy",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Policy",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Produces]--> Policy",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Principle",
    "Trigger": "Governance: Role --[Produces]--> Principle",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Principle-COND",
    "Trigger": "Governance: Role --[Produces]--> Principle",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Principle",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Produces]--> Principle",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Procedure",
    "Trigger": "Governance: Role --[Produces]--> Procedure",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Produces]--> Procedure",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Procedure",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Produces]--> Procedure",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Process",
    "Trigger": "Governance: Role --[Produces]--> Process",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Process-COND",
    "Trigger": "Governance: Role --[Produces]--> Process",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Process",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Process-CONST",
    "Trigger": "Governance: Role --[Produces]--> Process",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Record",
    "Trigger": "Governance: Role --[Produces]--> Record",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Record-COND",
    "Trigger": "Governance: Role --[Produces]--> Record",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Record",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Record-CONST",
    "Trigger": "Governance: Role --[Produces]--> Record",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Produces]--> Safety Compliance",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Produces]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Produces]--> Safety Compliance",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Produces]--> Safety Issue",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Produces]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Produces]--> Safety Issue",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Software_Component",
    "Trigger": "Governance: Role --[Produces]--> Software Component",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Produces]--> Software Component",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Software Component",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Produces]--> Software Component",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Standard",
    "Trigger": "Governance: Role --[Produces]--> Standard",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Standard-COND",
    "Trigger": "Governance: Role --[Produces]--> Standard",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Standard",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Produces]--> Standard",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-System",
    "Trigger": "Governance: Role --[Produces]--> System",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-System-COND",
    "Trigger": "Governance: Role --[Produces]--> System",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> System",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-System-CONST",
    "Trigger": "Governance: Role --[Produces]--> System",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Task",
    "Trigger": "Governance: Role --[Produces]--> Task",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Task-COND",
    "Trigger": "Governance: Role --[Produces]--> Task",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Task",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Task-CONST",
    "Trigger": "Governance: Role --[Produces]--> Task",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Test_Suite",
    "Trigger": "Governance: Role --[Produces]--> Test Suite",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Produces]--> Test Suite",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Test Suite",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Produces]--> Test Suite",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Vehicle",
    "Trigger": "Governance: Role --[Produces]--> Vehicle",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Produces]--> Vehicle",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Vehicle",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Produces]--> Vehicle",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Produces]--> Verification Plan",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Produces]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Produces]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-produces-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Produces]--> Verification Plan",
    "Template": "Engineering team shall produce the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-propagate-Work_Product-Work_Product",
    "Trigger": "Governance: Work Product --[Propagate]--> Work Product",
    "Template": "Engineering team shall propagate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-propagate-Work_Product-Work_Product-COND",
    "Trigger": "Governance: Work Product --[Propagate]--> Work Product",
    "Template": "When <condition>, Engineering team shall propagate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-propagate-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Governance: Work Product --[Propagate]--> Work Product",
    "Template": "When <condition>, Engineering team shall propagate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-propagate-Work_Product-Work_Product-CONST",
    "Trigger": "Governance: Work Product --[Propagate]--> Work Product",
    "Template": "Engineering team shall propagate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-propagate_by_approval-Work_Product-Work_Product",
    "Trigger": "Governance: Work Product --[Propagate by Approval]--> Work Product",
    "Template": "Engineering team shall propagate by approval the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-propagate_by_approval-Work_Product-Work_Product-COND",
    "Trigger": "Governance: Work Product --[Propagate by Approval]--> Work Product",
    "Template": "When <condition>, Engineering team shall propagate by approval the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-propagate_by_approval-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Governance: Work Product --[Propagate by Approval]--> Work Product",
    "Template": "When <condition>, Engineering team shall propagate by approval the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-propagate_by_approval-Work_Product-Work_Product-CONST",
    "Trigger": "Governance: Work Product --[Propagate by Approval]--> Work Product",
    "Template": "Engineering team shall propagate by approval the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-propagate_by_review-Work_Product-Work_Product",
    "Trigger": "Governance: Work Product --[Propagate by Review]--> Work Product",
    "Template": "Engineering team shall propagate by review the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-propagate_by_review-Work_Product-Work_Product-COND",
    "Trigger": "Governance: Work Product --[Propagate by Review]--> Work Product",
    "Template": "When <condition>, Engineering team shall propagate by review the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-propagate_by_review-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Governance: Work Product --[Propagate by Review]--> Work Product",
    "Template": "When <condition>, Engineering team shall propagate by review the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-propagate_by_review-Work_Product-Work_Product-CONST",
    "Trigger": "Governance: Work Product --[Propagate by Review]--> Work Product",
    "Template": "Engineering team shall propagate by review the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-re_use-Lifecycle_Phase-Lifecycle_Phase",
    "Trigger": "Governance: Lifecycle Phase --[Re-use]--> Lifecycle Phase",
    "Template": "Engineering team shall re-use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-re_use-Lifecycle_Phase-Lifecycle_Phase-COND",
    "Trigger": "Governance: Lifecycle Phase --[Re-use]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall re-use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-re_use-Lifecycle_Phase-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Lifecycle Phase --[Re-use]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall re-use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-re_use-Lifecycle_Phase-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Lifecycle Phase --[Re-use]--> Lifecycle Phase",
    "Template": "Engineering team shall re-use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-re_use-Work_Product-Lifecycle_Phase",
    "Trigger": "Governance: Work Product --[Re-use]--> Lifecycle Phase",
    "Template": "Engineering team shall re-use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-re_use-Work_Product-Lifecycle_Phase-COND",
    "Trigger": "Governance: Work Product --[Re-use]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall re-use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-re_use-Work_Product-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Work Product --[Re-use]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall re-use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-re_use-Work_Product-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Work Product --[Re-use]--> Lifecycle Phase",
    "Template": "Engineering team shall re-use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Activity",
    "Trigger": "Governance: Role --[Responsible for]--> Activity",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Activity-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Activity",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Activity",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Activity",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Business_Unit",
    "Trigger": "Governance: Role --[Responsible for]--> Business Unit",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Business Unit",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Business Unit",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Business Unit",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Component",
    "Trigger": "Governance: Role --[Responsible for]--> Component",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Component-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Component",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Component",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Component-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Component",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Data",
    "Trigger": "Governance: Role --[Responsible for]--> Data",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Data-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Data",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Data",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Data-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Data",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Document",
    "Trigger": "Governance: Role --[Responsible for]--> Document",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Document-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Document",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Document",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Document-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Document",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Driving_Function",
    "Trigger": "Governance: Role --[Responsible for]--> Driving Function",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Driving Function",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Driving Function",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Driving Function",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Field_Data",
    "Trigger": "Governance: Role --[Responsible for]--> Field Data",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Field Data",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Field Data",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Field Data",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Fleet",
    "Trigger": "Governance: Role --[Responsible for]--> Fleet",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Fleet",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Fleet",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Fleet",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Guideline",
    "Trigger": "Governance: Role --[Responsible for]--> Guideline",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Guideline",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Guideline",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Guideline",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Incident",
    "Trigger": "Governance: Role --[Responsible for]--> Incident",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Incident-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Incident",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Incident",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Incident",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Responsible for]--> Lifecycle Phase",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Lifecycle Phase",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Responsible for]--> Manufacturing Process",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Manufacturing Process",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Metric",
    "Trigger": "Governance: Role --[Responsible for]--> Metric",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Metric-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Metric",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Metric",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Metric",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Model",
    "Trigger": "Governance: Role --[Responsible for]--> Model",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Model-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Model",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Model",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Model-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Model",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Operation",
    "Trigger": "Governance: Role --[Responsible for]--> Operation",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Operation-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Operation",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Operation",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Operation",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Organization",
    "Trigger": "Governance: Role --[Responsible for]--> Organization",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Organization-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Organization",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Organization",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Organization",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Policy",
    "Trigger": "Governance: Role --[Responsible for]--> Policy",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Policy-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Policy",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Policy",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Policy",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Principle",
    "Trigger": "Governance: Role --[Responsible for]--> Principle",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Principle-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Principle",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Principle",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Principle",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Procedure",
    "Trigger": "Governance: Role --[Responsible for]--> Procedure",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Procedure",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Procedure",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Procedure",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Process",
    "Trigger": "Governance: Role --[Responsible for]--> Process",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Process-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Process",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Process",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Process-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Process",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Record",
    "Trigger": "Governance: Role --[Responsible for]--> Record",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Record-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Record",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Record",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Record-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Record",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Responsible for]--> Safety Compliance",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Safety Compliance",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Responsible for]--> Safety Issue",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Safety Issue",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Software_Component",
    "Trigger": "Governance: Role --[Responsible for]--> Software Component",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Software Component",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Software Component",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Software Component",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Standard",
    "Trigger": "Governance: Role --[Responsible for]--> Standard",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Standard-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Standard",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Standard",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Standard",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-System",
    "Trigger": "Governance: Role --[Responsible for]--> System",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-System-COND",
    "Trigger": "Governance: Role --[Responsible for]--> System",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> System",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-System-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> System",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Task",
    "Trigger": "Governance: Role --[Responsible for]--> Task",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Task-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Task",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Task",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Task-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Task",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Test_Suite",
    "Trigger": "Governance: Role --[Responsible for]--> Test Suite",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Test Suite",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Test Suite",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Test Suite",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Vehicle",
    "Trigger": "Governance: Role --[Responsible for]--> Vehicle",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Vehicle",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Vehicle",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Vehicle",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Responsible for]--> Verification Plan",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Responsible for]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Responsible for]--> Verification Plan",
    "Template": "Engineering team shall be responsible for the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-satisfied_by-Work_Product-Work_Product",
    "Trigger": "Governance: Work Product --[Satisfied by]--> Work Product",
    "Template": "Engineering team shall be satisfied by the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-satisfied_by-Work_Product-Work_Product-COND",
    "Trigger": "Governance: Work Product --[Satisfied by]--> Work Product",
    "Template": "When <condition>, Engineering team shall be satisfied by the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-satisfied_by-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Governance: Work Product --[Satisfied by]--> Work Product",
    "Template": "When <condition>, Engineering team shall be satisfied by the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-satisfied_by-Work_Product-Work_Product-CONST",
    "Trigger": "Governance: Work Product --[Satisfied by]--> Work Product",
    "Template": "Engineering team shall be satisfied by the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-trace-Work_Product-Work_Product",
    "Trigger": "Governance: Work Product --[Trace]--> Work Product",
    "Template": "Engineering team shall trace to the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-trace-Work_Product-Work_Product-COND",
    "Trigger": "Governance: Work Product --[Trace]--> Work Product",
    "Template": "When <condition>, Engineering team shall trace to the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-trace-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Governance: Work Product --[Trace]--> Work Product",
    "Template": "When <condition>, Engineering team shall trace to the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-trace-Work_Product-Work_Product-CONST",
    "Trigger": "Governance: Work Product --[Trace]--> Work Product",
    "Template": "Engineering team shall trace to the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Activity",
    "Trigger": "Governance: Role --[Triage]--> Activity",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Activity-COND",
    "Trigger": "Governance: Role --[Triage]--> Activity",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Activity",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Triage]--> Activity",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Business_Unit",
    "Trigger": "Governance: Role --[Triage]--> Business Unit",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Triage]--> Business Unit",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Business Unit",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Triage]--> Business Unit",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Component",
    "Trigger": "Governance: Role --[Triage]--> Component",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Component-COND",
    "Trigger": "Governance: Role --[Triage]--> Component",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Component",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Component-CONST",
    "Trigger": "Governance: Role --[Triage]--> Component",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Data",
    "Trigger": "Governance: Role --[Triage]--> Data",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Data-COND",
    "Trigger": "Governance: Role --[Triage]--> Data",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Data",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Data-CONST",
    "Trigger": "Governance: Role --[Triage]--> Data",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Document",
    "Trigger": "Governance: Role --[Triage]--> Document",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Document-COND",
    "Trigger": "Governance: Role --[Triage]--> Document",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Document",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Document-CONST",
    "Trigger": "Governance: Role --[Triage]--> Document",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Driving_Function",
    "Trigger": "Governance: Role --[Triage]--> Driving Function",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Triage]--> Driving Function",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Driving Function",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Triage]--> Driving Function",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Field_Data",
    "Trigger": "Governance: Role --[Triage]--> Field Data",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Triage]--> Field Data",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Field Data",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Triage]--> Field Data",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Fleet",
    "Trigger": "Governance: Role --[Triage]--> Fleet",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Triage]--> Fleet",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Fleet",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Triage]--> Fleet",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Guideline",
    "Trigger": "Governance: Role --[Triage]--> Guideline",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Triage]--> Guideline",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Guideline",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Triage]--> Guideline",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Incident",
    "Trigger": "Governance: Role --[Triage]--> Incident",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Incident-COND",
    "Trigger": "Governance: Role --[Triage]--> Incident",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Incident",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Triage]--> Incident",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Triage]--> Lifecycle Phase",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Triage]--> Lifecycle Phase",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Lifecycle Phase",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Triage]--> Lifecycle Phase",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Triage]--> Manufacturing Process",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Triage]--> Manufacturing Process",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Manufacturing Process",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Triage]--> Manufacturing Process",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Metric",
    "Trigger": "Governance: Role --[Triage]--> Metric",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Metric-COND",
    "Trigger": "Governance: Role --[Triage]--> Metric",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Metric",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Triage]--> Metric",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Model",
    "Trigger": "Governance: Role --[Triage]--> Model",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Model-COND",
    "Trigger": "Governance: Role --[Triage]--> Model",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Model",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Model-CONST",
    "Trigger": "Governance: Role --[Triage]--> Model",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Operation",
    "Trigger": "Governance: Role --[Triage]--> Operation",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Operation-COND",
    "Trigger": "Governance: Role --[Triage]--> Operation",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Operation",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Triage]--> Operation",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Organization",
    "Trigger": "Governance: Role --[Triage]--> Organization",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Organization-COND",
    "Trigger": "Governance: Role --[Triage]--> Organization",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Organization",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Triage]--> Organization",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Policy",
    "Trigger": "Governance: Role --[Triage]--> Policy",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Policy-COND",
    "Trigger": "Governance: Role --[Triage]--> Policy",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Policy",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Triage]--> Policy",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Principle",
    "Trigger": "Governance: Role --[Triage]--> Principle",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Principle-COND",
    "Trigger": "Governance: Role --[Triage]--> Principle",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Principle",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Triage]--> Principle",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Procedure",
    "Trigger": "Governance: Role --[Triage]--> Procedure",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Triage]--> Procedure",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Procedure",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Triage]--> Procedure",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Process",
    "Trigger": "Governance: Role --[Triage]--> Process",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Process-COND",
    "Trigger": "Governance: Role --[Triage]--> Process",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Process",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Process-CONST",
    "Trigger": "Governance: Role --[Triage]--> Process",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Record",
    "Trigger": "Governance: Role --[Triage]--> Record",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Record-COND",
    "Trigger": "Governance: Role --[Triage]--> Record",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Record",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Record-CONST",
    "Trigger": "Governance: Role --[Triage]--> Record",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Triage]--> Safety Compliance",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Triage]--> Safety Compliance",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Safety Compliance",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Triage]--> Safety Compliance",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Triage]--> Safety Issue",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Triage]--> Safety Issue",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Safety Issue",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Triage]--> Safety Issue",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Software_Component",
    "Trigger": "Governance: Role --[Triage]--> Software Component",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Triage]--> Software Component",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Software Component",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Triage]--> Software Component",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Standard",
    "Trigger": "Governance: Role --[Triage]--> Standard",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Standard-COND",
    "Trigger": "Governance: Role --[Triage]--> Standard",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Standard",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Triage]--> Standard",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-System",
    "Trigger": "Governance: Role --[Triage]--> System",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-System-COND",
    "Trigger": "Governance: Role --[Triage]--> System",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> System",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-System-CONST",
    "Trigger": "Governance: Role --[Triage]--> System",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Task",
    "Trigger": "Governance: Role --[Triage]--> Task",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Task-COND",
    "Trigger": "Governance: Role --[Triage]--> Task",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Task",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Task-CONST",
    "Trigger": "Governance: Role --[Triage]--> Task",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Test_Suite",
    "Trigger": "Governance: Role --[Triage]--> Test Suite",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Triage]--> Test Suite",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Test Suite",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Triage]--> Test Suite",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Vehicle",
    "Trigger": "Governance: Role --[Triage]--> Vehicle",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Triage]--> Vehicle",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Vehicle",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Triage]--> Vehicle",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Triage]--> Verification Plan",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Triage]--> Verification Plan",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Triage]--> Verification Plan",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-triage-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Triage]--> Verification Plan",
    "Template": "Support team shall triage the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-used_after_approval-Work_Product-Work_Product",
    "Trigger": "Governance: Work Product --[Used after Approval]--> Work Product",
    "Template": "Engineering team shall be used after approval the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-used_after_approval-Work_Product-Work_Product-COND",
    "Trigger": "Governance: Work Product --[Used after Approval]--> Work Product",
    "Template": "When <condition>, Engineering team shall be used after approval the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-used_after_approval-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Governance: Work Product --[Used after Approval]--> Work Product",
    "Template": "When <condition>, Engineering team shall be used after approval the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-used_after_approval-Work_Product-Work_Product-CONST",
    "Trigger": "Governance: Work Product --[Used after Approval]--> Work Product",
    "Template": "Engineering team shall be used after approval the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-used_after_review-Work_Product-Work_Product",
    "Trigger": "Governance: Work Product --[Used after Review]--> Work Product",
    "Template": "Engineering team shall be used after review the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-used_after_review-Work_Product-Work_Product-COND",
    "Trigger": "Governance: Work Product --[Used after Review]--> Work Product",
    "Template": "When <condition>, Engineering team shall be used after review the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-used_after_review-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Governance: Work Product --[Used after Review]--> Work Product",
    "Template": "When <condition>, Engineering team shall be used after review the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-used_after_review-Work_Product-Work_Product-CONST",
    "Trigger": "Governance: Work Product --[Used after Review]--> Work Product",
    "Template": "Engineering team shall be used after review the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-used_by-Work_Product-Work_Product",
    "Trigger": "Governance: Work Product --[Used By]--> Work Product",
    "Template": "Engineering team shall be used by the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-used_by-Work_Product-Work_Product-COND",
    "Trigger": "Governance: Work Product --[Used By]--> Work Product",
    "Template": "When <condition>, Engineering team shall be used by the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-used_by-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Governance: Work Product --[Used By]--> Work Product",
    "Template": "When <condition>, Engineering team shall be used by the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-used_by-Work_Product-Work_Product-CONST",
    "Trigger": "Governance: Work Product --[Used By]--> Work Product",
    "Template": "Engineering team shall be used by the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Activity",
    "Trigger": "Governance: Role --[Uses]--> Activity",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Activity-COND",
    "Trigger": "Governance: Role --[Uses]--> Activity",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Activity",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Uses]--> Activity",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Business_Unit",
    "Trigger": "Governance: Role --[Uses]--> Business Unit",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Uses]--> Business Unit",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Business Unit",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Uses]--> Business Unit",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Component",
    "Trigger": "Governance: Role --[Uses]--> Component",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Component-COND",
    "Trigger": "Governance: Role --[Uses]--> Component",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Component",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Component-CONST",
    "Trigger": "Governance: Role --[Uses]--> Component",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Data",
    "Trigger": "Governance: Role --[Uses]--> Data",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Data-COND",
    "Trigger": "Governance: Role --[Uses]--> Data",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Data",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Data-CONST",
    "Trigger": "Governance: Role --[Uses]--> Data",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Document",
    "Trigger": "Governance: Role --[Uses]--> Document",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Document-COND",
    "Trigger": "Governance: Role --[Uses]--> Document",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Document",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Document-CONST",
    "Trigger": "Governance: Role --[Uses]--> Document",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Driving_Function",
    "Trigger": "Governance: Role --[Uses]--> Driving Function",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Uses]--> Driving Function",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Driving Function",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Uses]--> Driving Function",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Field_Data",
    "Trigger": "Governance: Role --[Uses]--> Field Data",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Uses]--> Field Data",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Field Data",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Uses]--> Field Data",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Fleet",
    "Trigger": "Governance: Role --[Uses]--> Fleet",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Uses]--> Fleet",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Fleet",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Uses]--> Fleet",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Guideline",
    "Trigger": "Governance: Role --[Uses]--> Guideline",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Uses]--> Guideline",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Guideline",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Uses]--> Guideline",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Incident",
    "Trigger": "Governance: Role --[Uses]--> Incident",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Incident-COND",
    "Trigger": "Governance: Role --[Uses]--> Incident",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Incident",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Uses]--> Incident",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Uses]--> Lifecycle Phase",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Uses]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Uses]--> Lifecycle Phase",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Uses]--> Manufacturing Process",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Uses]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Manufacturing Process",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Uses]--> Manufacturing Process",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Metric",
    "Trigger": "Governance: Role --[Uses]--> Metric",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Metric-COND",
    "Trigger": "Governance: Role --[Uses]--> Metric",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Metric",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Uses]--> Metric",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Model",
    "Trigger": "Governance: Role --[Uses]--> Model",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Model-COND",
    "Trigger": "Governance: Role --[Uses]--> Model",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Model",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Model-CONST",
    "Trigger": "Governance: Role --[Uses]--> Model",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Operation",
    "Trigger": "Governance: Role --[Uses]--> Operation",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Operation-COND",
    "Trigger": "Governance: Role --[Uses]--> Operation",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Operation",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Uses]--> Operation",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Organization",
    "Trigger": "Governance: Role --[Uses]--> Organization",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Organization-COND",
    "Trigger": "Governance: Role --[Uses]--> Organization",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Organization",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Uses]--> Organization",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Policy",
    "Trigger": "Governance: Role --[Uses]--> Policy",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Policy-COND",
    "Trigger": "Governance: Role --[Uses]--> Policy",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Policy",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Uses]--> Policy",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Principle",
    "Trigger": "Governance: Role --[Uses]--> Principle",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Principle-COND",
    "Trigger": "Governance: Role --[Uses]--> Principle",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Principle",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Uses]--> Principle",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Procedure",
    "Trigger": "Governance: Role --[Uses]--> Procedure",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Uses]--> Procedure",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Procedure",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Uses]--> Procedure",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Process",
    "Trigger": "Governance: Role --[Uses]--> Process",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Process-COND",
    "Trigger": "Governance: Role --[Uses]--> Process",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Process",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Process-CONST",
    "Trigger": "Governance: Role --[Uses]--> Process",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Record",
    "Trigger": "Governance: Role --[Uses]--> Record",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Record-COND",
    "Trigger": "Governance: Role --[Uses]--> Record",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Record",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Record-CONST",
    "Trigger": "Governance: Role --[Uses]--> Record",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Uses]--> Safety Compliance",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Uses]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Safety Compliance",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Uses]--> Safety Compliance",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Uses]--> Safety Issue",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Uses]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Safety Issue",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Uses]--> Safety Issue",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Software_Component",
    "Trigger": "Governance: Role --[Uses]--> Software Component",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Uses]--> Software Component",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Software Component",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Uses]--> Software Component",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Standard",
    "Trigger": "Governance: Role --[Uses]--> Standard",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Standard-COND",
    "Trigger": "Governance: Role --[Uses]--> Standard",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Standard",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Uses]--> Standard",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-System",
    "Trigger": "Governance: Role --[Uses]--> System",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-System-COND",
    "Trigger": "Governance: Role --[Uses]--> System",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> System",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-System-CONST",
    "Trigger": "Governance: Role --[Uses]--> System",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Task",
    "Trigger": "Governance: Role --[Uses]--> Task",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Task-COND",
    "Trigger": "Governance: Role --[Uses]--> Task",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Task",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Task-CONST",
    "Trigger": "Governance: Role --[Uses]--> Task",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Test_Suite",
    "Trigger": "Governance: Role --[Uses]--> Test Suite",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Uses]--> Test Suite",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Test Suite",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Uses]--> Test Suite",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Vehicle",
    "Trigger": "Governance: Role --[Uses]--> Vehicle",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Uses]--> Vehicle",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Vehicle",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Uses]--> Vehicle",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Uses]--> Verification Plan",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Uses]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Uses]--> Verification Plan",
    "Template": "When <condition>, Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-uses-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Uses]--> Verification Plan",
    "Template": "Engineering team shall use the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Activity",
    "Trigger": "Governance: Role --[Validate]--> Activity",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Activity-COND",
    "Trigger": "Governance: Role --[Validate]--> Activity",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Activity",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Validate]--> Activity",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Business_Unit",
    "Trigger": "Governance: Role --[Validate]--> Business Unit",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Validate]--> Business Unit",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Business Unit",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Validate]--> Business Unit",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Component",
    "Trigger": "Governance: Role --[Validate]--> Component",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Component-COND",
    "Trigger": "Governance: Role --[Validate]--> Component",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Component",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Component-CONST",
    "Trigger": "Governance: Role --[Validate]--> Component",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Data",
    "Trigger": "Governance: Role --[Validate]--> Data",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Data-COND",
    "Trigger": "Governance: Role --[Validate]--> Data",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Data",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Data-CONST",
    "Trigger": "Governance: Role --[Validate]--> Data",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Document",
    "Trigger": "Governance: Role --[Validate]--> Document",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Document-COND",
    "Trigger": "Governance: Role --[Validate]--> Document",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Document",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Document-CONST",
    "Trigger": "Governance: Role --[Validate]--> Document",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Driving_Function",
    "Trigger": "Governance: Role --[Validate]--> Driving Function",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Validate]--> Driving Function",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Driving Function",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Validate]--> Driving Function",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Field_Data",
    "Trigger": "Governance: Role --[Validate]--> Field Data",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Validate]--> Field Data",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Field Data",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Validate]--> Field Data",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Fleet",
    "Trigger": "Governance: Role --[Validate]--> Fleet",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Validate]--> Fleet",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Fleet",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Validate]--> Fleet",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Guideline",
    "Trigger": "Governance: Role --[Validate]--> Guideline",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Validate]--> Guideline",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Guideline",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Validate]--> Guideline",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Incident",
    "Trigger": "Governance: Role --[Validate]--> Incident",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Incident-COND",
    "Trigger": "Governance: Role --[Validate]--> Incident",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Incident",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Validate]--> Incident",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Validate]--> Lifecycle Phase",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Validate]--> Lifecycle Phase",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Lifecycle Phase",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Validate]--> Lifecycle Phase",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Validate]--> Manufacturing Process",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Validate]--> Manufacturing Process",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Manufacturing Process",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Validate]--> Manufacturing Process",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Metric",
    "Trigger": "Governance: Role --[Validate]--> Metric",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Metric-COND",
    "Trigger": "Governance: Role --[Validate]--> Metric",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Metric",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Validate]--> Metric",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Model",
    "Trigger": "Governance: Role --[Validate]--> Model",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Model-COND",
    "Trigger": "Governance: Role --[Validate]--> Model",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Model",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Model-CONST",
    "Trigger": "Governance: Role --[Validate]--> Model",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Operation",
    "Trigger": "Governance: Role --[Validate]--> Operation",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Operation-COND",
    "Trigger": "Governance: Role --[Validate]--> Operation",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Operation",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Validate]--> Operation",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Organization",
    "Trigger": "Governance: Role --[Validate]--> Organization",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Organization-COND",
    "Trigger": "Governance: Role --[Validate]--> Organization",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Organization",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Validate]--> Organization",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Policy",
    "Trigger": "Governance: Role --[Validate]--> Policy",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Policy-COND",
    "Trigger": "Governance: Role --[Validate]--> Policy",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Policy",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Validate]--> Policy",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Principle",
    "Trigger": "Governance: Role --[Validate]--> Principle",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Principle-COND",
    "Trigger": "Governance: Role --[Validate]--> Principle",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Principle",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Validate]--> Principle",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Procedure",
    "Trigger": "Governance: Role --[Validate]--> Procedure",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Validate]--> Procedure",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Procedure",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Validate]--> Procedure",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Process",
    "Trigger": "Governance: Role --[Validate]--> Process",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Process-COND",
    "Trigger": "Governance: Role --[Validate]--> Process",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Process",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Process-CONST",
    "Trigger": "Governance: Role --[Validate]--> Process",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Record",
    "Trigger": "Governance: Role --[Validate]--> Record",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Record-COND",
    "Trigger": "Governance: Role --[Validate]--> Record",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Record",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Record-CONST",
    "Trigger": "Governance: Role --[Validate]--> Record",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Validate]--> Safety Compliance",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Validate]--> Safety Compliance",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Safety Compliance",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Validate]--> Safety Compliance",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Validate]--> Safety Issue",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Validate]--> Safety Issue",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Safety Issue",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Validate]--> Safety Issue",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Software_Component",
    "Trigger": "Governance: Role --[Validate]--> Software Component",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Validate]--> Software Component",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Software Component",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Validate]--> Software Component",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Standard",
    "Trigger": "Governance: Role --[Validate]--> Standard",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Standard-COND",
    "Trigger": "Governance: Role --[Validate]--> Standard",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Standard",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Validate]--> Standard",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-System",
    "Trigger": "Governance: Role --[Validate]--> System",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-System-COND",
    "Trigger": "Governance: Role --[Validate]--> System",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> System",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-System-CONST",
    "Trigger": "Governance: Role --[Validate]--> System",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Task",
    "Trigger": "Governance: Role --[Validate]--> Task",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Task-COND",
    "Trigger": "Governance: Role --[Validate]--> Task",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Task",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Task-CONST",
    "Trigger": "Governance: Role --[Validate]--> Task",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Test_Suite",
    "Trigger": "Governance: Role --[Validate]--> Test Suite",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Validate]--> Test Suite",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Test Suite",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Validate]--> Test Suite",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Vehicle",
    "Trigger": "Governance: Role --[Validate]--> Vehicle",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Validate]--> Vehicle",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Vehicle",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Validate]--> Vehicle",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Validate]--> Verification Plan",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Validate]--> Verification Plan",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Validate]--> Verification Plan",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-validate-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Validate]--> Verification Plan",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Activity",
    "Trigger": "Governance: Role --[Verify]--> Activity",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Activity-COND",
    "Trigger": "Governance: Role --[Verify]--> Activity",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Activity-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Activity",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Activity-CONST",
    "Trigger": "Governance: Role --[Verify]--> Activity",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Business_Unit",
    "Trigger": "Governance: Role --[Verify]--> Business Unit",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Business_Unit-COND",
    "Trigger": "Governance: Role --[Verify]--> Business Unit",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Business_Unit-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Business Unit",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Business_Unit-CONST",
    "Trigger": "Governance: Role --[Verify]--> Business Unit",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Component",
    "Trigger": "Governance: Role --[Verify]--> Component",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Component-COND",
    "Trigger": "Governance: Role --[Verify]--> Component",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Component-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Component",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Component-CONST",
    "Trigger": "Governance: Role --[Verify]--> Component",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Data",
    "Trigger": "Governance: Role --[Verify]--> Data",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Data-COND",
    "Trigger": "Governance: Role --[Verify]--> Data",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Data-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Data",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Data-CONST",
    "Trigger": "Governance: Role --[Verify]--> Data",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Document",
    "Trigger": "Governance: Role --[Verify]--> Document",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Document-COND",
    "Trigger": "Governance: Role --[Verify]--> Document",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Document-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Document",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Document-CONST",
    "Trigger": "Governance: Role --[Verify]--> Document",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Driving_Function",
    "Trigger": "Governance: Role --[Verify]--> Driving Function",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Driving_Function-COND",
    "Trigger": "Governance: Role --[Verify]--> Driving Function",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Driving_Function-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Driving Function",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Driving_Function-CONST",
    "Trigger": "Governance: Role --[Verify]--> Driving Function",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Field_Data",
    "Trigger": "Governance: Role --[Verify]--> Field Data",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Field_Data-COND",
    "Trigger": "Governance: Role --[Verify]--> Field Data",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Field_Data-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Field Data",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Field_Data-CONST",
    "Trigger": "Governance: Role --[Verify]--> Field Data",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Fleet",
    "Trigger": "Governance: Role --[Verify]--> Fleet",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Fleet-COND",
    "Trigger": "Governance: Role --[Verify]--> Fleet",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Fleet-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Fleet",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Fleet-CONST",
    "Trigger": "Governance: Role --[Verify]--> Fleet",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Guideline",
    "Trigger": "Governance: Role --[Verify]--> Guideline",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Guideline-COND",
    "Trigger": "Governance: Role --[Verify]--> Guideline",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Guideline-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Guideline",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Guideline-CONST",
    "Trigger": "Governance: Role --[Verify]--> Guideline",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Incident",
    "Trigger": "Governance: Role --[Verify]--> Incident",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Incident-COND",
    "Trigger": "Governance: Role --[Verify]--> Incident",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Incident-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Incident",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Incident-CONST",
    "Trigger": "Governance: Role --[Verify]--> Incident",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Lifecycle_Phase",
    "Trigger": "Governance: Role --[Verify]--> Lifecycle Phase",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Lifecycle_Phase-COND",
    "Trigger": "Governance: Role --[Verify]--> Lifecycle Phase",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Lifecycle_Phase-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Lifecycle Phase",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Lifecycle_Phase-CONST",
    "Trigger": "Governance: Role --[Verify]--> Lifecycle Phase",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Manufacturing_Process",
    "Trigger": "Governance: Role --[Verify]--> Manufacturing Process",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Manufacturing_Process-COND",
    "Trigger": "Governance: Role --[Verify]--> Manufacturing Process",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Manufacturing_Process-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Manufacturing Process",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Manufacturing_Process-CONST",
    "Trigger": "Governance: Role --[Verify]--> Manufacturing Process",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Metric",
    "Trigger": "Governance: Role --[Verify]--> Metric",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Metric-COND",
    "Trigger": "Governance: Role --[Verify]--> Metric",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Metric-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Metric",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Metric-CONST",
    "Trigger": "Governance: Role --[Verify]--> Metric",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Model",
    "Trigger": "Governance: Role --[Verify]--> Model",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Model-COND",
    "Trigger": "Governance: Role --[Verify]--> Model",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Model-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Model",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Model-CONST",
    "Trigger": "Governance: Role --[Verify]--> Model",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Operation",
    "Trigger": "Governance: Role --[Verify]--> Operation",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Operation-COND",
    "Trigger": "Governance: Role --[Verify]--> Operation",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Operation-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Operation",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Operation-CONST",
    "Trigger": "Governance: Role --[Verify]--> Operation",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Organization",
    "Trigger": "Governance: Role --[Verify]--> Organization",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Organization-COND",
    "Trigger": "Governance: Role --[Verify]--> Organization",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Organization-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Organization",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Organization-CONST",
    "Trigger": "Governance: Role --[Verify]--> Organization",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Policy",
    "Trigger": "Governance: Role --[Verify]--> Policy",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Policy-COND",
    "Trigger": "Governance: Role --[Verify]--> Policy",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Policy-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Policy",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Policy-CONST",
    "Trigger": "Governance: Role --[Verify]--> Policy",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Principle",
    "Trigger": "Governance: Role --[Verify]--> Principle",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Principle-COND",
    "Trigger": "Governance: Role --[Verify]--> Principle",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Principle-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Principle",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Principle-CONST",
    "Trigger": "Governance: Role --[Verify]--> Principle",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Procedure",
    "Trigger": "Governance: Role --[Verify]--> Procedure",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Procedure-COND",
    "Trigger": "Governance: Role --[Verify]--> Procedure",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Procedure-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Procedure",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Procedure-CONST",
    "Trigger": "Governance: Role --[Verify]--> Procedure",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Process",
    "Trigger": "Governance: Role --[Verify]--> Process",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Process-COND",
    "Trigger": "Governance: Role --[Verify]--> Process",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Process-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Process",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Process-CONST",
    "Trigger": "Governance: Role --[Verify]--> Process",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Record",
    "Trigger": "Governance: Role --[Verify]--> Record",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Record-COND",
    "Trigger": "Governance: Role --[Verify]--> Record",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Record-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Record",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Record-CONST",
    "Trigger": "Governance: Role --[Verify]--> Record",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Safety_Compliance",
    "Trigger": "Governance: Role --[Verify]--> Safety Compliance",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Safety_Compliance-COND",
    "Trigger": "Governance: Role --[Verify]--> Safety Compliance",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Safety_Compliance-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Safety Compliance",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Safety_Compliance-CONST",
    "Trigger": "Governance: Role --[Verify]--> Safety Compliance",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Safety_Issue",
    "Trigger": "Governance: Role --[Verify]--> Safety Issue",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Safety_Issue-COND",
    "Trigger": "Governance: Role --[Verify]--> Safety Issue",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Safety_Issue-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Safety Issue",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Safety_Issue-CONST",
    "Trigger": "Governance: Role --[Verify]--> Safety Issue",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Software_Component",
    "Trigger": "Governance: Role --[Verify]--> Software Component",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Software_Component-COND",
    "Trigger": "Governance: Role --[Verify]--> Software Component",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Software_Component-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Software Component",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Software_Component-CONST",
    "Trigger": "Governance: Role --[Verify]--> Software Component",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Standard",
    "Trigger": "Governance: Role --[Verify]--> Standard",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Standard-COND",
    "Trigger": "Governance: Role --[Verify]--> Standard",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Standard-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Standard",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Standard-CONST",
    "Trigger": "Governance: Role --[Verify]--> Standard",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-System",
    "Trigger": "Governance: Role --[Verify]--> System",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-System-COND",
    "Trigger": "Governance: Role --[Verify]--> System",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-System-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> System",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-System-CONST",
    "Trigger": "Governance: Role --[Verify]--> System",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Task",
    "Trigger": "Governance: Role --[Verify]--> Task",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Task-COND",
    "Trigger": "Governance: Role --[Verify]--> Task",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Task-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Task",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Task-CONST",
    "Trigger": "Governance: Role --[Verify]--> Task",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Test_Suite",
    "Trigger": "Governance: Role --[Verify]--> Test Suite",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Test_Suite-COND",
    "Trigger": "Governance: Role --[Verify]--> Test Suite",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Test_Suite-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Test Suite",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Test_Suite-CONST",
    "Trigger": "Governance: Role --[Verify]--> Test Suite",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Vehicle",
    "Trigger": "Governance: Role --[Verify]--> Vehicle",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Vehicle-COND",
    "Trigger": "Governance: Role --[Verify]--> Vehicle",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Vehicle-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Vehicle",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Vehicle-CONST",
    "Trigger": "Governance: Role --[Verify]--> Vehicle",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Verification_Plan",
    "Trigger": "Governance: Role --[Verify]--> Verification Plan",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Verification_Plan-COND",
    "Trigger": "Governance: Role --[Verify]--> Verification Plan",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Verification_Plan-COND-CONST",
    "Trigger": "Governance: Role --[Verify]--> Verification Plan",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "GOV-verify-Role-Verification_Plan-CONST",
    "Trigger": "Governance: Role --[Verify]--> Verification Plan",
    "Template": "Verification team shall verify the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "IMP-improve-Field_Data-Model",
    "Trigger": "Improvement: Field Data --[Improve]--> Model",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Post-deployment improvement requirement."
  },
  {
    "Pattern ID": "IMP-improve-Field_Data-Model-COND",
    "Trigger": "Improvement: Field Data --[Improve]--> Model",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Post-deployment improvement requirement."
  },
  {
    "Pattern ID": "IMP-improve-Field_Data-Model-COND-CONST",
    "Trigger": "Improvement: Field Data --[Improve]--> Model",
    "Template": "When <condition>, Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Post-deployment improvement requirement."
  },
  {
    "Pattern ID": "IMP-improve-Field_Data-Model-CONST",
    "Trigger": "Improvement: Field Data --[Improve]--> Model",
    "Template": "Engineering team shall improve the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Post-deployment improvement requirement."
  },
  {
    "Pattern ID": "INSP-inspect-Vehicle-Safety_Compliance",
    "Trigger": "Inspection: Vehicle --[Inspect]--> Safety Compliance",
    "Template": "Inspection team shall inspect the <source_id> (<source_class>) for <target_id> (<target_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Periodic inspection requirement."
  },
  {
    "Pattern ID": "INSP-inspect-Vehicle-Safety_Compliance-COND",
    "Trigger": "Inspection: Vehicle --[Inspect]--> Safety Compliance",
    "Template": "When <condition>, Inspection team shall inspect the <source_id> (<source_class>) for <target_id> (<target_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Periodic inspection requirement."
  },
  {
    "Pattern ID": "INSP-inspect-Vehicle-Safety_Compliance-COND-CONST",
    "Trigger": "Inspection: Vehicle --[Inspect]--> Safety Compliance",
    "Template": "When <condition>, Inspection team shall inspect the <source_id> (<source_class>) for <target_id> (<target_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Periodic inspection requirement."
  },
  {
    "Pattern ID": "INSP-inspect-Vehicle-Safety_Compliance-CONST",
    "Trigger": "Inspection: Vehicle --[Inspect]--> Safety Compliance",
    "Template": "Inspection team shall inspect the <source_id> (<source_class>) for <target_id> (<target_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Periodic inspection requirement."
  },
  {
    "Pattern ID": "NFR-COMPLIANCE",
    "Trigger": "Constraint node via Constrained by / Governed by",
    "Template": "The shall comply with and retain objective evidence in.",
    "Variables": [],
    "Notes": "Compliance requirement with auditable trail."
  },
  {
    "Pattern ID": "NFR-COMPLIANCE-COND",
    "Trigger": "Constraint node via Constrained by / Governed by",
    "Template": "When <condition>, The shall comply with and retain objective evidence in.",
    "Variables": [
      "<condition>"
    ],
    "Notes": "Compliance requirement with auditable trail."
  },
  {
    "Pattern ID": "NFR-COMPLIANCE-COND-CONST",
    "Trigger": "Constraint node via Constrained by / Governed by",
    "Template": "When <condition>, The shall comply with and retain objective evidence in constrained by <constraint>.",
    "Variables": [
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Compliance requirement with auditable trail."
  },
  {
    "Pattern ID": "NFR-COMPLIANCE-CONST",
    "Trigger": "Constraint node via Constrained by / Governed by",
    "Template": "The shall comply with and retain objective evidence in constrained by <constraint>.",
    "Variables": [
      "<constraint>"
    ],
    "Notes": "Compliance requirement with auditable trail."
  },
  {
    "Pattern ID": "NFR-METRIC-PERF",
    "Trigger": "Metric linked to Process/Activity (Monitors/Produces/Uses)",
    "Template": "The shall achieve ≤ measured over with ≥ confidence; measurement recorded in.",
    "Variables": [],
    "Notes": "Performance KPI in engineering terms."
  },
  {
    "Pattern ID": "NFR-METRIC-PERF-COND",
    "Trigger": "Metric linked to Process/Activity (Monitors/Produces/Uses)",
    "Template": "When <condition>, The shall achieve ≤ measured over with ≥ confidence; measurement recorded in.",
    "Variables": [
      "<condition>"
    ],
    "Notes": "Performance KPI in engineering terms."
  },
  {
    "Pattern ID": "NFR-METRIC-PERF-COND-CONST",
    "Trigger": "Metric linked to Process/Activity (Monitors/Produces/Uses)",
    "Template": "When <condition>, The shall achieve ≤ measured over with ≥ confidence; measurement recorded in constrained by <constraint>.",
    "Variables": [
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Performance KPI in engineering terms."
  },
  {
    "Pattern ID": "NFR-METRIC-PERF-CONST",
    "Trigger": "Metric linked to Process/Activity (Monitors/Produces/Uses)",
    "Template": "The shall achieve ≤ measured over with ≥ confidence; measurement recorded in constrained by <constraint>.",
    "Variables": [
      "<constraint>"
    ],
    "Notes": "Performance KPI in engineering terms."
  },
  {
    "Pattern ID": "OP-operate-Fleet-Vehicle",
    "Trigger": "Operation: Fleet --[Operate]--> Vehicle",
    "Template": "Operations team shall operate the <target_id> (<target_class>) within the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Operational requirement."
  },
  {
    "Pattern ID": "OP-operate-Fleet-Vehicle-COND",
    "Trigger": "Operation: Fleet --[Operate]--> Vehicle",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) within the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Operational requirement."
  },
  {
    "Pattern ID": "OP-operate-Fleet-Vehicle-COND-CONST",
    "Trigger": "Operation: Fleet --[Operate]--> Vehicle",
    "Template": "When <condition>, Operations team shall operate the <target_id> (<target_class>) within the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Operational requirement."
  },
  {
    "Pattern ID": "OP-operate-Fleet-Vehicle-CONST",
    "Trigger": "Operation: Fleet --[Operate]--> Vehicle",
    "Template": "Operations team shall operate the <target_id> (<target_class>) within the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Operational requirement."
  },
  {
    "Pattern ID": "ORG-establish-Organization-Process",
    "Trigger": "Organization: Organization --[Establish]--> Process",
    "Template": "shall establish the and record evidence in.",
    "Variables": [
      "<due_date>"
    ],
    "Notes": "Organizational process definition requirement."
  },
  {
    "Pattern ID": "ORG-establish-Organization-Process-COND",
    "Trigger": "Organization: Organization --[Establish]--> Process",
    "Template": "When <condition>, Shall establish the and record evidence in.",
    "Variables": [
      "<due_date>",
      "<condition>"
    ],
    "Notes": "Organizational process definition requirement."
  },
  {
    "Pattern ID": "ORG-establish-Organization-Process-COND-CONST",
    "Trigger": "Organization: Organization --[Establish]--> Process",
    "Template": "When <condition>, Shall establish the and record evidence in constrained by <constraint>.",
    "Variables": [
      "<due_date>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Organizational process definition requirement."
  },
  {
    "Pattern ID": "ORG-establish-Organization-Process-CONST",
    "Trigger": "Organization: Organization --[Establish]--> Process",
    "Template": "shall establish the and record evidence in constrained by <constraint>.",
    "Variables": [
      "<due_date>",
      "<constraint>"
    ],
    "Notes": "Organizational process definition requirement."
  },
  {
    "Pattern ID": "PROD-manufacture-Manufacturing_Process-Vehicle",
    "Trigger": "Production: Manufacturing Process --[Manufacture]--> Vehicle",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Production requirement."
  },
  {
    "Pattern ID": "PROD-manufacture-Manufacturing_Process-Vehicle-COND",
    "Trigger": "Production: Manufacturing Process --[Manufacture]--> Vehicle",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Production requirement."
  },
  {
    "Pattern ID": "PROD-manufacture-Manufacturing_Process-Vehicle-COND-CONST",
    "Trigger": "Production: Manufacturing Process --[Manufacture]--> Vehicle",
    "Template": "When <condition>, Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Production requirement."
  },
  {
    "Pattern ID": "PROD-manufacture-Manufacturing_Process-Vehicle-CONST",
    "Trigger": "Production: Manufacturing Process --[Manufacture]--> Vehicle",
    "Template": "Manufacturing team shall manufacture the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Production requirement."
  },
  {
    "Pattern ID": "SA-acquisition-Database-Data_acquisition",
    "Trigger": "Safety&AI: Database --[Acquisition]--> Data acquisition",
    "Template": "Engineering team shall acquire the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-acquisition-Database-Data_acquisition-COND",
    "Trigger": "Safety&AI: Database --[Acquisition]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall acquire the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-acquisition-Database-Data_acquisition-COND-CONST",
    "Trigger": "Safety&AI: Database --[Acquisition]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall acquire the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-acquisition-Database-Data_acquisition-CONST",
    "Trigger": "Safety&AI: Database --[Acquisition]--> Data acquisition",
    "Template": "Engineering team shall acquire the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-ai_re_training-Database-ANN",
    "Trigger": "Safety&AI: Database --[AI re-training]--> ANN",
    "Template": "Engineering team shall retrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-ai_re_training-Database-ANN-COND",
    "Trigger": "Safety&AI: Database --[AI re-training]--> ANN",
    "Template": "When <condition>, Engineering team shall retrain the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-ai_re_training-Database-ANN-COND-CONST",
    "Trigger": "Safety&AI: Database --[AI re-training]--> ANN",
    "Template": "When <condition>, Engineering team shall retrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-ai_re_training-Database-ANN-CONST",
    "Trigger": "Safety&AI: Database --[AI re-training]--> ANN",
    "Template": "Engineering team shall retrain the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-ai_training-Database-ANN",
    "Trigger": "Safety&AI: Database --[AI training]--> ANN",
    "Template": "Engineering team shall train the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-ai_training-Database-ANN-COND",
    "Trigger": "Safety&AI: Database --[AI training]--> ANN",
    "Template": "When <condition>, Engineering team shall train the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-ai_training-Database-ANN-COND-CONST",
    "Trigger": "Safety&AI: Database --[AI training]--> ANN",
    "Template": "When <condition>, Engineering team shall train the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-ai_training-Database-ANN-CONST",
    "Trigger": "Safety&AI: Database --[AI training]--> ANN",
    "Template": "Engineering team shall train the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-annotation-ANN-Database",
    "Trigger": "Safety&AI: ANN --[Annotation]--> Database",
    "Template": "Engineering team shall annotate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-annotation-ANN-Database-COND",
    "Trigger": "Safety&AI: ANN --[Annotation]--> Database",
    "Template": "When <condition>, Engineering team shall annotate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-annotation-ANN-Database-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Annotation]--> Database",
    "Template": "When <condition>, Engineering team shall annotate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-annotation-ANN-Database-CONST",
    "Trigger": "Safety&AI: ANN --[Annotation]--> Database",
    "Template": "Engineering team shall annotate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-augmentation-ANN-Database",
    "Trigger": "Safety&AI: ANN --[Augmentation]--> Database",
    "Template": "Engineering team shall augment the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-augmentation-ANN-Database-COND",
    "Trigger": "Safety&AI: ANN --[Augmentation]--> Database",
    "Template": "When <condition>, Engineering team shall augment the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-augmentation-ANN-Database-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Augmentation]--> Database",
    "Template": "When <condition>, Engineering team shall augment the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-augmentation-ANN-Database-CONST",
    "Trigger": "Safety&AI: ANN --[Augmentation]--> Database",
    "Template": "Engineering team shall augment the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-complies_with-ANN-Policy",
    "Trigger": "Safety&AI: ANN --[Complies with]--> Policy",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-complies_with-ANN-Policy-COND",
    "Trigger": "Safety&AI: ANN --[Complies with]--> Policy",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-complies_with-ANN-Policy-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Complies with]--> Policy",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-complies_with-ANN-Policy-CONST",
    "Trigger": "Safety&AI: ANN --[Complies with]--> Policy",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-complies_with-Database-Policy",
    "Trigger": "Safety&AI: Database --[Complies with]--> Policy",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-complies_with-Database-Policy-COND",
    "Trigger": "Safety&AI: Database --[Complies with]--> Policy",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-complies_with-Database-Policy-COND-CONST",
    "Trigger": "Safety&AI: Database --[Complies with]--> Policy",
    "Template": "When <condition>, Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-complies_with-Database-Policy-CONST",
    "Trigger": "Safety&AI: Database --[Complies with]--> Policy",
    "Template": "Engineering team shall comply with the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-curation-Database-Database",
    "Trigger": "Safety&AI: Database --[Curation]--> Database",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-curation-Database-Database-COND",
    "Trigger": "Safety&AI: Database --[Curation]--> Database",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-curation-Database-Database-COND-CONST",
    "Trigger": "Safety&AI: Database --[Curation]--> Database",
    "Template": "When <condition>, Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-curation-Database-Database-CONST",
    "Trigger": "Safety&AI: Database --[Curation]--> Database",
    "Template": "Engineering team shall curate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-field_data_collection-Database-Data_acquisition",
    "Trigger": "Safety&AI: Database --[Field data collection]--> Data acquisition",
    "Template": "Engineering team shall collect field data the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-field_data_collection-Database-Data_acquisition-COND",
    "Trigger": "Safety&AI: Database --[Field data collection]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall collect field data the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-field_data_collection-Database-Data_acquisition-COND-CONST",
    "Trigger": "Safety&AI: Database --[Field data collection]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall collect field data the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-field_data_collection-Database-Data_acquisition-CONST",
    "Trigger": "Safety&AI: Database --[Field data collection]--> Data acquisition",
    "Template": "Engineering team shall collect field data the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-field_data_collection-Database-Task",
    "Trigger": "Safety&AI: Database --[Field data collection]--> Task",
    "Template": "Engineering team shall collect field data the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-field_data_collection-Database-Task-COND",
    "Trigger": "Safety&AI: Database --[Field data collection]--> Task",
    "Template": "When <condition>, Engineering team shall collect field data the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-field_data_collection-Database-Task-COND-CONST",
    "Trigger": "Safety&AI: Database --[Field data collection]--> Task",
    "Template": "When <condition>, Engineering team shall collect field data the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-field_data_collection-Database-Task-CONST",
    "Trigger": "Safety&AI: Database --[Field data collection]--> Task",
    "Template": "Engineering team shall collect field data the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-field_risk_evaluation-Database-Data_acquisition",
    "Trigger": "Safety&AI: Database --[Field risk evaluation]--> Data acquisition",
    "Template": "Engineering team shall evaluate field risk the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-field_risk_evaluation-Database-Data_acquisition-COND",
    "Trigger": "Safety&AI: Database --[Field risk evaluation]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall evaluate field risk the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-field_risk_evaluation-Database-Data_acquisition-COND-CONST",
    "Trigger": "Safety&AI: Database --[Field risk evaluation]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall evaluate field risk the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-field_risk_evaluation-Database-Data_acquisition-CONST",
    "Trigger": "Safety&AI: Database --[Field risk evaluation]--> Data acquisition",
    "Template": "Engineering team shall evaluate field risk the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-ingestion-Database-Database",
    "Trigger": "Safety&AI: Database --[Ingestion]--> Database",
    "Template": "Engineering team shall ingest the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-ingestion-Database-Database-COND",
    "Trigger": "Safety&AI: Database --[Ingestion]--> Database",
    "Template": "When <condition>, Engineering team shall ingest the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-ingestion-Database-Database-COND-CONST",
    "Trigger": "Safety&AI: Database --[Ingestion]--> Database",
    "Template": "When <condition>, Engineering team shall ingest the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-ingestion-Database-Database-CONST",
    "Trigger": "Safety&AI: Database --[Ingestion]--> Database",
    "Template": "Engineering team shall ingest the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-labeling-ANN-Database",
    "Trigger": "Safety&AI: ANN --[Labeling]--> Database",
    "Template": "Engineering team shall label the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-labeling-ANN-Database-COND",
    "Trigger": "Safety&AI: ANN --[Labeling]--> Database",
    "Template": "When <condition>, Engineering team shall label the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-labeling-ANN-Database-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Labeling]--> Database",
    "Template": "When <condition>, Engineering team shall label the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-labeling-ANN-Database-CONST",
    "Trigger": "Safety&AI: ANN --[Labeling]--> Database",
    "Template": "Engineering team shall label the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-model_evaluation-ANN-Database",
    "Trigger": "Safety&AI: ANN --[Model evaluation]--> Database",
    "Template": "Engineering team shall evaluate model the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-model_evaluation-ANN-Database-COND",
    "Trigger": "Safety&AI: ANN --[Model evaluation]--> Database",
    "Template": "When <condition>, Engineering team shall evaluate model the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-model_evaluation-ANN-Database-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Model evaluation]--> Database",
    "Template": "When <condition>, Engineering team shall evaluate model the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-model_evaluation-ANN-Database-CONST",
    "Trigger": "Safety&AI: ANN --[Model evaluation]--> Database",
    "Template": "Engineering team shall evaluate model the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-monitoring-ANN-Operation",
    "Trigger": "Safety&AI: ANN --[Monitoring]--> Operation",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-monitoring-ANN-Operation-COND",
    "Trigger": "Safety&AI: ANN --[Monitoring]--> Operation",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-monitoring-ANN-Operation-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Monitoring]--> Operation",
    "Template": "When <condition>, Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-monitoring-ANN-Operation-CONST",
    "Trigger": "Safety&AI: ANN --[Monitoring]--> Operation",
    "Template": "Engineering team shall monitor the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-synthesis-ANN-Database",
    "Trigger": "Safety&AI: ANN --[Synthesis]--> Database",
    "Template": "Engineering team shall synthesize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-synthesis-ANN-Database-COND",
    "Trigger": "Safety&AI: ANN --[Synthesis]--> Database",
    "Template": "When <condition>, Engineering team shall synthesize the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-synthesis-ANN-Database-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Synthesis]--> Database",
    "Template": "When <condition>, Engineering team shall synthesize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "SA-synthesis-ANN-Database-CONST",
    "Trigger": "Safety&AI: ANN --[Synthesis]--> Database",
    "Template": "Engineering team shall synthesize the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Instantiate on detected edge; add measurable criteria."
  },
  {
    "Pattern ID": "TRI-triage-Incident-Safety_Issue",
    "Trigger": "Triage: Incident --[Triage]--> Safety Issue",
    "Template": "Support team shall triage the <target_id> (<target_class>) from the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Incident triage requirement."
  },
  {
    "Pattern ID": "TRI-triage-Incident-Safety_Issue-COND",
    "Trigger": "Triage: Incident --[Triage]--> Safety Issue",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) from the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Incident triage requirement."
  },
  {
    "Pattern ID": "TRI-triage-Incident-Safety_Issue-COND-CONST",
    "Trigger": "Triage: Incident --[Triage]--> Safety Issue",
    "Template": "When <condition>, Support team shall triage the <target_id> (<target_class>) from the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Incident triage requirement."
  },
  {
    "Pattern ID": "TRI-triage-Incident-Safety_Issue-CONST",
    "Trigger": "Triage: Incident --[Triage]--> Safety Issue",
    "Template": "Support team shall triage the <target_id> (<target_class>) from the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Incident triage requirement."
  },
  {
    "Pattern ID": "VAL-validate-Test_Suite-System",
    "Trigger": "Validation: Test Suite --[Validate]--> System",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Validation coverage requirement."
  },
  {
    "Pattern ID": "VAL-validate-Test_Suite-System-COND",
    "Trigger": "Validation: Test Suite --[Validate]--> System",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Validation coverage requirement."
  },
  {
    "Pattern ID": "VAL-validate-Test_Suite-System-COND-CONST",
    "Trigger": "Validation: Test Suite --[Validate]--> System",
    "Template": "When <condition>, Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Validation coverage requirement."
  },
  {
    "Pattern ID": "VAL-validate-Test_Suite-System-CONST",
    "Trigger": "Validation: Test Suite --[Validate]--> System",
    "Template": "Validation team shall validate the <target_id> (<target_class>) using the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Validation coverage requirement."
  },
  {
    "Pattern ID": "VER-verify-Verification_Plan-Component",
    "Trigger": "Verification: Verification Plan --[Verify]--> Component",
    "Template": "Verification team shall verify the <target_id> (<target_class>) according to the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Verification requirement."
  },
  {
    "Pattern ID": "VER-verify-Verification_Plan-Component-COND",
    "Trigger": "Verification: Verification Plan --[Verify]--> Component",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) according to the <source_id> (<source_class>).",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Verification requirement."
  },
  {
    "Pattern ID": "VER-verify-Verification_Plan-Component-COND-CONST",
    "Trigger": "Verification: Verification Plan --[Verify]--> Component",
    "Template": "When <condition>, Verification team shall verify the <target_id> (<target_class>) according to the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Verification requirement."
  },
  {
    "Pattern ID": "VER-verify-Verification_Plan-Component-CONST",
    "Trigger": "Verification: Verification Plan --[Verify]--> Component",
    "Template": "Verification team shall verify the <target_id> (<target_class>) according to the <source_id> (<source_class>) constrained by <constraint>.",
    "Variables": [
      "<source_id>",
      "<source_class>",
      "<target_id>",
      "<target_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Verification requirement."
  }
]
