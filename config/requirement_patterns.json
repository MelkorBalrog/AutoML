[
  {
    "Pattern ID": "GOV-approves-Document-Guideline",
    "Trigger": "Gov: Document --[Approves]--> Guideline",
    "Template": "<subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Document-Guideline-COND",
    "Trigger": "Gov: Document --[Approves]--> Guideline",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Document-Guideline-COND-CONST",
    "Trigger": "Gov: Document --[Approves]--> Guideline",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Document-Guideline-CONST",
    "Trigger": "Gov: Document --[Approves]--> Guideline",
    "Template": "<subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Document-Policy",
    "Trigger": "Gov: Document --[Approves]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Document-Policy-COND",
    "Trigger": "Gov: Document --[Approves]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Document-Policy-COND-CONST",
    "Trigger": "Gov: Document --[Approves]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Document-Policy-CONST",
    "Trigger": "Gov: Document --[Approves]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Document-Principle",
    "Trigger": "Gov: Document --[Approves]--> Principle",
    "Template": "<subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Document-Principle-COND",
    "Trigger": "Gov: Document --[Approves]--> Principle",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Document-Principle-COND-CONST",
    "Trigger": "Gov: Document --[Approves]--> Principle",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Document-Principle-CONST",
    "Trigger": "Gov: Document --[Approves]--> Principle",
    "Template": "<subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Document-Standard",
    "Trigger": "Gov: Document --[Approves]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Document-Standard-COND",
    "Trigger": "Gov: Document --[Approves]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Document-Standard-COND-CONST",
    "Trigger": "Gov: Document --[Approves]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Document-Standard-CONST",
    "Trigger": "Gov: Document --[Approves]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Document",
    "Trigger": "Gov: Role --[Approves]--> Document",
    "Template": "<subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Document-COND",
    "Trigger": "Gov: Role --[Approves]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Document-COND-CONST",
    "Trigger": "Gov: Role --[Approves]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Document-CONST",
    "Trigger": "Gov: Role --[Approves]--> Document",
    "Template": "<subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Policy",
    "Trigger": "Gov: Role --[Approves]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Policy-COND",
    "Trigger": "Gov: Role --[Approves]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Policy-COND-CONST",
    "Trigger": "Gov: Role --[Approves]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Policy-CONST",
    "Trigger": "Gov: Role --[Approves]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Procedure",
    "Trigger": "Gov: Role --[Approves]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Procedure-COND",
    "Trigger": "Gov: Role --[Approves]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Procedure-COND-CONST",
    "Trigger": "Gov: Role --[Approves]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Procedure-CONST",
    "Trigger": "Gov: Role --[Approves]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Record",
    "Trigger": "Gov: Role --[Approves]--> Record",
    "Template": "<subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Record-COND",
    "Trigger": "Gov: Role --[Approves]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Record-COND-CONST",
    "Trigger": "Gov: Role --[Approves]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Record-CONST",
    "Trigger": "Gov: Role --[Approves]--> Record",
    "Template": "<subject_id> (<subject_class>) shall approve '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Component",
    "Trigger": "Gov: Business Unit --[Assesses]--> Component",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Component-COND",
    "Trigger": "Gov: Business Unit --[Assesses]--> Component",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Component-COND-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Component",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Component-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Component",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Document",
    "Trigger": "Gov: Business Unit --[Assesses]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Document-COND",
    "Trigger": "Gov: Business Unit --[Assesses]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Document-COND-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Document-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Field_Data",
    "Trigger": "Gov: Business Unit --[Assesses]--> Field Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Field_Data-COND",
    "Trigger": "Gov: Business Unit --[Assesses]--> Field Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Field_Data-COND-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Field Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Field_Data-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Field Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Hazard",
    "Trigger": "Gov: Business Unit --[Assesses]--> Hazard",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Hazard-COND",
    "Trigger": "Gov: Business Unit --[Assesses]--> Hazard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Hazard-COND-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Hazard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Hazard-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Hazard",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Model",
    "Trigger": "Gov: Business Unit --[Assesses]--> Model",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Model-COND",
    "Trigger": "Gov: Business Unit --[Assesses]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Model-COND-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Model-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Model",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Plan",
    "Trigger": "Gov: Business Unit --[Assesses]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Plan-COND",
    "Trigger": "Gov: Business Unit --[Assesses]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Plan-COND-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Plan-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Policy",
    "Trigger": "Gov: Business Unit --[Assesses]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Policy-COND",
    "Trigger": "Gov: Business Unit --[Assesses]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Policy-COND-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Policy-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Procedure",
    "Trigger": "Gov: Business Unit --[Assesses]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Procedure-COND",
    "Trigger": "Gov: Business Unit --[Assesses]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Procedure-COND-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Procedure-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Process",
    "Trigger": "Gov: Business Unit --[Assesses]--> Process",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Process-COND",
    "Trigger": "Gov: Business Unit --[Assesses]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Process-COND-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Process-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Process",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Report",
    "Trigger": "Gov: Business Unit --[Assesses]--> Report",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Report-COND",
    "Trigger": "Gov: Business Unit --[Assesses]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Report-COND-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Report-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Report",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Risk_Assessment",
    "Trigger": "Gov: Business Unit --[Assesses]--> Risk Assessment",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Risk_Assessment-COND",
    "Trigger": "Gov: Business Unit --[Assesses]--> Risk Assessment",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Risk_Assessment-COND-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Risk Assessment",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Risk_Assessment-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Risk Assessment",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Security_Threat",
    "Trigger": "Gov: Business Unit --[Assesses]--> Security Threat",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Security_Threat-COND",
    "Trigger": "Gov: Business Unit --[Assesses]--> Security Threat",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Security_Threat-COND-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Security Threat",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Security_Threat-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Security Threat",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-System",
    "Trigger": "Gov: Business Unit --[Assesses]--> System",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-System-COND",
    "Trigger": "Gov: Business Unit --[Assesses]--> System",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-System-COND-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> System",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-System-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> System",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Test_Suite",
    "Trigger": "Gov: Business Unit --[Assesses]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Test_Suite-COND",
    "Trigger": "Gov: Business Unit --[Assesses]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Test_Suite-COND-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Test_Suite-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Work_Product",
    "Trigger": "Gov: Business Unit --[Assesses]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Work_Product-COND",
    "Trigger": "Gov: Business Unit --[Assesses]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Work_Product-COND-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Business_Unit-Work_Product-CONST",
    "Trigger": "Gov: Business Unit --[Assesses]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Field_Data-Risk_Assessment",
    "Trigger": "Gov: Field Data --[Assesses]--> Risk Assessment",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Field_Data-Risk_Assessment-COND",
    "Trigger": "Gov: Field Data --[Assesses]--> Risk Assessment",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Field_Data-Risk_Assessment-COND-CONST",
    "Trigger": "Gov: Field Data --[Assesses]--> Risk Assessment",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Field_Data-Risk_Assessment-CONST",
    "Trigger": "Gov: Field Data --[Assesses]--> Risk Assessment",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Hazard-Risk_Assessment",
    "Trigger": "Gov: Hazard --[Assesses]--> Risk Assessment",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Hazard-Risk_Assessment-COND",
    "Trigger": "Gov: Hazard --[Assesses]--> Risk Assessment",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Hazard-Risk_Assessment-COND-CONST",
    "Trigger": "Gov: Hazard --[Assesses]--> Risk Assessment",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Hazard-Risk_Assessment-CONST",
    "Trigger": "Gov: Hazard --[Assesses]--> Risk Assessment",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Component",
    "Trigger": "Gov: Organization --[Assesses]--> Component",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Component-COND",
    "Trigger": "Gov: Organization --[Assesses]--> Component",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Component-COND-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Component",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Component-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Component",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Document",
    "Trigger": "Gov: Organization --[Assesses]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Document-COND",
    "Trigger": "Gov: Organization --[Assesses]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Document-COND-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Document-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Field_Data",
    "Trigger": "Gov: Organization --[Assesses]--> Field Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Field_Data-COND",
    "Trigger": "Gov: Organization --[Assesses]--> Field Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Field_Data-COND-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Field Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Field_Data-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Field Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Hazard",
    "Trigger": "Gov: Organization --[Assesses]--> Hazard",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Hazard-COND",
    "Trigger": "Gov: Organization --[Assesses]--> Hazard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Hazard-COND-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Hazard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Hazard-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Hazard",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Model",
    "Trigger": "Gov: Organization --[Assesses]--> Model",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Model-COND",
    "Trigger": "Gov: Organization --[Assesses]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Model-COND-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Model-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Model",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Plan",
    "Trigger": "Gov: Organization --[Assesses]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Plan-COND",
    "Trigger": "Gov: Organization --[Assesses]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Plan-COND-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Plan-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Policy",
    "Trigger": "Gov: Organization --[Assesses]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Policy-COND",
    "Trigger": "Gov: Organization --[Assesses]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Policy-COND-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Policy-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Procedure",
    "Trigger": "Gov: Organization --[Assesses]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Procedure-COND",
    "Trigger": "Gov: Organization --[Assesses]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Procedure-COND-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Procedure-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Process",
    "Trigger": "Gov: Organization --[Assesses]--> Process",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Process-COND",
    "Trigger": "Gov: Organization --[Assesses]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Process-COND-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Process-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Process",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Report",
    "Trigger": "Gov: Organization --[Assesses]--> Report",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Report-COND",
    "Trigger": "Gov: Organization --[Assesses]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Report-COND-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Report-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Report",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Risk_Assessment",
    "Trigger": "Gov: Organization --[Assesses]--> Risk Assessment",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Risk_Assessment-COND",
    "Trigger": "Gov: Organization --[Assesses]--> Risk Assessment",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Risk_Assessment-COND-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Risk Assessment",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Risk_Assessment-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Risk Assessment",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Security_Threat",
    "Trigger": "Gov: Organization --[Assesses]--> Security Threat",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Security_Threat-COND",
    "Trigger": "Gov: Organization --[Assesses]--> Security Threat",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Security_Threat-COND-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Security Threat",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Security_Threat-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Security Threat",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-System",
    "Trigger": "Gov: Organization --[Assesses]--> System",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-System-COND",
    "Trigger": "Gov: Organization --[Assesses]--> System",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-System-COND-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> System",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-System-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> System",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Test_Suite",
    "Trigger": "Gov: Organization --[Assesses]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Test_Suite-COND",
    "Trigger": "Gov: Organization --[Assesses]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Test_Suite-COND-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Test_Suite-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Work_Product",
    "Trigger": "Gov: Organization --[Assesses]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Work_Product-COND",
    "Trigger": "Gov: Organization --[Assesses]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Work_Product-COND-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Organization-Work_Product-CONST",
    "Trigger": "Gov: Organization --[Assesses]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Component",
    "Trigger": "Gov: Role --[Assesses]--> Component",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Component-COND",
    "Trigger": "Gov: Role --[Assesses]--> Component",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Component-COND-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Component",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Component-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Component",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Document",
    "Trigger": "Gov: Role --[Assesses]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Document-COND",
    "Trigger": "Gov: Role --[Assesses]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Document-COND-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Document-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Field_Data",
    "Trigger": "Gov: Role --[Assesses]--> Field Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Field_Data-COND",
    "Trigger": "Gov: Role --[Assesses]--> Field Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Field_Data-COND-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Field Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Field_Data-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Field Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Hazard",
    "Trigger": "Gov: Role --[Assesses]--> Hazard",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Hazard-COND",
    "Trigger": "Gov: Role --[Assesses]--> Hazard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Hazard-COND-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Hazard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Hazard-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Hazard",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Model",
    "Trigger": "Gov: Role --[Assesses]--> Model",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Model-COND",
    "Trigger": "Gov: Role --[Assesses]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Model-COND-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Model-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Model",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Plan",
    "Trigger": "Gov: Role --[Assesses]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Plan-COND",
    "Trigger": "Gov: Role --[Assesses]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Plan-COND-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Plan-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Policy",
    "Trigger": "Gov: Role --[Assesses]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Policy-COND",
    "Trigger": "Gov: Role --[Assesses]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Policy-COND-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Policy-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Procedure",
    "Trigger": "Gov: Role --[Assesses]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Procedure-COND",
    "Trigger": "Gov: Role --[Assesses]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Procedure-COND-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Procedure-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Process",
    "Trigger": "Gov: Role --[Assesses]--> Process",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Process-COND",
    "Trigger": "Gov: Role --[Assesses]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Process-COND-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Process-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Process",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Report",
    "Trigger": "Gov: Role --[Assesses]--> Report",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Report-COND",
    "Trigger": "Gov: Role --[Assesses]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Report-COND-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Report-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Report",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Risk_Assessment",
    "Trigger": "Gov: Role --[Assesses]--> Risk Assessment",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Risk_Assessment-COND",
    "Trigger": "Gov: Role --[Assesses]--> Risk Assessment",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Risk_Assessment-COND-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Risk Assessment",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Risk_Assessment-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Risk Assessment",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Security_Threat",
    "Trigger": "Gov: Role --[Assesses]--> Security Threat",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Security_Threat-COND",
    "Trigger": "Gov: Role --[Assesses]--> Security Threat",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Security_Threat-COND-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Security Threat",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Security_Threat-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Security Threat",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-System",
    "Trigger": "Gov: Role --[Assesses]--> System",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-System-COND",
    "Trigger": "Gov: Role --[Assesses]--> System",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-System-COND-CONST",
    "Trigger": "Gov: Role --[Assesses]--> System",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-System-CONST",
    "Trigger": "Gov: Role --[Assesses]--> System",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Test_Suite",
    "Trigger": "Gov: Role --[Assesses]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Test_Suite-COND",
    "Trigger": "Gov: Role --[Assesses]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Test_Suite-COND-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Test_Suite-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Work_Product",
    "Trigger": "Gov: Role --[Assesses]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Work_Product-COND",
    "Trigger": "Gov: Role --[Assesses]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Work_Product-COND-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Role-Work_Product-CONST",
    "Trigger": "Gov: Role --[Assesses]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Security_Threat-Risk_Assessment",
    "Trigger": "Gov: Security Threat --[Assesses]--> Risk Assessment",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Security_Threat-Risk_Assessment-COND",
    "Trigger": "Gov: Security Threat --[Assesses]--> Risk Assessment",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Security_Threat-Risk_Assessment-COND-CONST",
    "Trigger": "Gov: Security Threat --[Assesses]--> Risk Assessment",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-assesses-Security_Threat-Risk_Assessment-CONST",
    "Trigger": "Gov: Security Threat --[Assesses]--> Risk Assessment",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Process-Report",
    "Trigger": "Gov: Process --[Audits]--> Report",
    "Template": "<subject_id> (<subject_class>) shall audits the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Process-Report-COND",
    "Trigger": "Gov: Process --[Audits]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audits the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Process-Report-COND-CONST",
    "Trigger": "Gov: Process --[Audits]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audits the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Process-Report-CONST",
    "Trigger": "Gov: Process --[Audits]--> Report",
    "Template": "<subject_id> (<subject_class>) shall audits the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Role-Procedure",
    "Trigger": "Gov: Role --[Audits]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall audits the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Role-Procedure-COND",
    "Trigger": "Gov: Role --[Audits]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audits the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Role-Procedure-COND-CONST",
    "Trigger": "Gov: Role --[Audits]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audits the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Role-Procedure-CONST",
    "Trigger": "Gov: Role --[Audits]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall audits the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Role-Process",
    "Trigger": "Gov: Role --[Audits]--> Process",
    "Template": "<subject_id> (<subject_class>) shall audits the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Role-Process-COND",
    "Trigger": "Gov: Role --[Audits]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audits the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Role-Process-COND-CONST",
    "Trigger": "Gov: Role --[Audits]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audits the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Role-Process-CONST",
    "Trigger": "Gov: Role --[Audits]--> Process",
    "Template": "<subject_id> (<subject_class>) shall audits the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Role-Record",
    "Trigger": "Gov: Role --[Audits]--> Record",
    "Template": "<subject_id> (<subject_class>) shall audits the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Role-Record-COND",
    "Trigger": "Gov: Role --[Audits]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audits the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Role-Record-COND-CONST",
    "Trigger": "Gov: Role --[Audits]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audits the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Role-Record-CONST",
    "Trigger": "Gov: Role --[Audits]--> Record",
    "Template": "<subject_id> (<subject_class>) shall audits the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Policy",
    "Trigger": "Gov: Organization --[Authorizes]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall authorizes the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Policy-COND",
    "Trigger": "Gov: Organization --[Authorizes]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorizes the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Policy-COND-CONST",
    "Trigger": "Gov: Organization --[Authorizes]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorizes the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Policy-CONST",
    "Trigger": "Gov: Organization --[Authorizes]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall authorizes the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Procedure",
    "Trigger": "Gov: Organization --[Authorizes]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall authorizes the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Procedure-COND",
    "Trigger": "Gov: Organization --[Authorizes]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorizes the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Procedure-COND-CONST",
    "Trigger": "Gov: Organization --[Authorizes]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorizes the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Procedure-CONST",
    "Trigger": "Gov: Organization --[Authorizes]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall authorizes the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Process",
    "Trigger": "Gov: Organization --[Authorizes]--> Process",
    "Template": "<subject_id> (<subject_class>) shall authorizes the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Process-COND",
    "Trigger": "Gov: Organization --[Authorizes]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorizes the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Process-COND-CONST",
    "Trigger": "Gov: Organization --[Authorizes]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorizes the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Process-CONST",
    "Trigger": "Gov: Organization --[Authorizes]--> Process",
    "Template": "<subject_id> (<subject_class>) shall authorizes the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Policy",
    "Trigger": "Gov: Role --[Authorizes]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall authorizes the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Policy-COND",
    "Trigger": "Gov: Role --[Authorizes]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorizes the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Policy-COND-CONST",
    "Trigger": "Gov: Role --[Authorizes]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorizes the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Policy-CONST",
    "Trigger": "Gov: Role --[Authorizes]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall authorizes the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Procedure",
    "Trigger": "Gov: Role --[Authorizes]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall authorizes the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Procedure-COND",
    "Trigger": "Gov: Role --[Authorizes]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorizes the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Procedure-COND-CONST",
    "Trigger": "Gov: Role --[Authorizes]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorizes the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Procedure-CONST",
    "Trigger": "Gov: Role --[Authorizes]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall authorizes the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Business_Unit-Business_Unit",
    "Trigger": "Gov: Business Unit --[Communication Path]--> Business Unit",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Business_Unit-Business_Unit-COND",
    "Trigger": "Gov: Business Unit --[Communication Path]--> Business Unit",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Business_Unit-Business_Unit-COND-CONST",
    "Trigger": "Gov: Business Unit --[Communication Path]--> Business Unit",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Business_Unit-Business_Unit-CONST",
    "Trigger": "Gov: Business Unit --[Communication Path]--> Business Unit",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Organization-Business_Unit",
    "Trigger": "Gov: Organization --[Communication Path]--> Business Unit",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Organization-Business_Unit-COND",
    "Trigger": "Gov: Organization --[Communication Path]--> Business Unit",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Organization-Business_Unit-COND-CONST",
    "Trigger": "Gov: Organization --[Communication Path]--> Business Unit",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Organization-Business_Unit-CONST",
    "Trigger": "Gov: Organization --[Communication Path]--> Business Unit",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Organization-Organization",
    "Trigger": "Gov: Organization --[Communication Path]--> Organization",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Organization-Organization-COND",
    "Trigger": "Gov: Organization --[Communication Path]--> Organization",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Organization-Organization-COND-CONST",
    "Trigger": "Gov: Organization --[Communication Path]--> Organization",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Organization-Organization-CONST",
    "Trigger": "Gov: Organization --[Communication Path]--> Organization",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Business_Unit",
    "Trigger": "Gov: Role --[Communication Path]--> Business Unit",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Business_Unit-COND",
    "Trigger": "Gov: Role --[Communication Path]--> Business Unit",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Business_Unit-COND-CONST",
    "Trigger": "Gov: Role --[Communication Path]--> Business Unit",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Business_Unit-CONST",
    "Trigger": "Gov: Role --[Communication Path]--> Business Unit",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Organization",
    "Trigger": "Gov: Role --[Communication Path]--> Organization",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Organization-COND",
    "Trigger": "Gov: Role --[Communication Path]--> Organization",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Organization-COND-CONST",
    "Trigger": "Gov: Role --[Communication Path]--> Organization",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Organization-CONST",
    "Trigger": "Gov: Role --[Communication Path]--> Organization",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Role",
    "Trigger": "Gov: Role --[Communication Path]--> Role",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Role-COND",
    "Trigger": "Gov: Role --[Communication Path]--> Role",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Role-COND-CONST",
    "Trigger": "Gov: Role --[Communication Path]--> Role",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Role-CONST",
    "Trigger": "Gov: Role --[Communication Path]--> Role",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Document-Guideline",
    "Trigger": "Gov: Document --[Constrained by]--> Guideline",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Document-Guideline-COND",
    "Trigger": "Gov: Document --[Constrained by]--> Guideline",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Document-Guideline-COND-CONST",
    "Trigger": "Gov: Document --[Constrained by]--> Guideline",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Document-Guideline-CONST",
    "Trigger": "Gov: Document --[Constrained by]--> Guideline",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Document-Policy",
    "Trigger": "Gov: Document --[Constrained by]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Document-Policy-COND",
    "Trigger": "Gov: Document --[Constrained by]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Document-Policy-COND-CONST",
    "Trigger": "Gov: Document --[Constrained by]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Document-Policy-CONST",
    "Trigger": "Gov: Document --[Constrained by]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Document-Principle",
    "Trigger": "Gov: Document --[Constrained by]--> Principle",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Document-Principle-COND",
    "Trigger": "Gov: Document --[Constrained by]--> Principle",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Document-Principle-COND-CONST",
    "Trigger": "Gov: Document --[Constrained by]--> Principle",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Document-Principle-CONST",
    "Trigger": "Gov: Document --[Constrained by]--> Principle",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Document-Standard",
    "Trigger": "Gov: Document --[Constrained by]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Document-Standard-COND",
    "Trigger": "Gov: Document --[Constrained by]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Document-Standard-COND-CONST",
    "Trigger": "Gov: Document --[Constrained by]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Document-Standard-CONST",
    "Trigger": "Gov: Document --[Constrained by]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Guideline",
    "Trigger": "Gov: Procedure --[Constrained by]--> Guideline",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Guideline-COND",
    "Trigger": "Gov: Procedure --[Constrained by]--> Guideline",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Guideline-COND-CONST",
    "Trigger": "Gov: Procedure --[Constrained by]--> Guideline",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Guideline-CONST",
    "Trigger": "Gov: Procedure --[Constrained by]--> Guideline",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Policy",
    "Trigger": "Gov: Procedure --[Constrained by]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Policy-COND",
    "Trigger": "Gov: Procedure --[Constrained by]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Policy-COND-CONST",
    "Trigger": "Gov: Procedure --[Constrained by]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Policy-CONST",
    "Trigger": "Gov: Procedure --[Constrained by]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Principle",
    "Trigger": "Gov: Procedure --[Constrained by]--> Principle",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Principle-COND",
    "Trigger": "Gov: Procedure --[Constrained by]--> Principle",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Principle-COND-CONST",
    "Trigger": "Gov: Procedure --[Constrained by]--> Principle",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Principle-CONST",
    "Trigger": "Gov: Procedure --[Constrained by]--> Principle",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Standard",
    "Trigger": "Gov: Procedure --[Constrained by]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Standard-COND",
    "Trigger": "Gov: Procedure --[Constrained by]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Standard-COND-CONST",
    "Trigger": "Gov: Procedure --[Constrained by]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Standard-CONST",
    "Trigger": "Gov: Procedure --[Constrained by]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Work_Product-Guideline",
    "Trigger": "Gov: Work Product --[Constrained by]--> Guideline",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Work_Product-Guideline-COND",
    "Trigger": "Gov: Work Product --[Constrained by]--> Guideline",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Work_Product-Guideline-COND-CONST",
    "Trigger": "Gov: Work Product --[Constrained by]--> Guideline",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Work_Product-Guideline-CONST",
    "Trigger": "Gov: Work Product --[Constrained by]--> Guideline",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Work_Product-Policy",
    "Trigger": "Gov: Work Product --[Constrained by]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Work_Product-Policy-COND",
    "Trigger": "Gov: Work Product --[Constrained by]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Work_Product-Policy-COND-CONST",
    "Trigger": "Gov: Work Product --[Constrained by]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Work_Product-Policy-CONST",
    "Trigger": "Gov: Work Product --[Constrained by]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Work_Product-Principle",
    "Trigger": "Gov: Work Product --[Constrained by]--> Principle",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Work_Product-Principle-COND",
    "Trigger": "Gov: Work Product --[Constrained by]--> Principle",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Work_Product-Principle-COND-CONST",
    "Trigger": "Gov: Work Product --[Constrained by]--> Principle",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Work_Product-Principle-CONST",
    "Trigger": "Gov: Work Product --[Constrained by]--> Principle",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Work_Product-Standard",
    "Trigger": "Gov: Work Product --[Constrained by]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Work_Product-Standard-COND",
    "Trigger": "Gov: Work Product --[Constrained by]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Work_Product-Standard-COND-CONST",
    "Trigger": "Gov: Work Product --[Constrained by]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Work_Product-Standard-CONST",
    "Trigger": "Gov: Work Product --[Constrained by]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrains-Policy-Process",
    "Trigger": "Gov: Policy --[Constrains]--> Process",
    "Template": "<subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrains-Policy-Process-COND",
    "Trigger": "Gov: Policy --[Constrains]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrains-Policy-Process-COND-CONST",
    "Trigger": "Gov: Policy --[Constrains]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrains-Policy-Process-CONST",
    "Trigger": "Gov: Policy --[Constrains]--> Process",
    "Template": "<subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-consumes-Process-Data",
    "Trigger": "Gov: Process --[Consumes]--> Data",
    "Template": "<subject_id> (<subject_class>) shall consumes the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-consumes-Process-Data-COND",
    "Trigger": "Gov: Process --[Consumes]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall consumes the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-consumes-Process-Data-COND-CONST",
    "Trigger": "Gov: Process --[Consumes]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall consumes the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-consumes-Process-Data-CONST",
    "Trigger": "Gov: Process --[Consumes]--> Data",
    "Template": "<subject_id> (<subject_class>) shall consumes the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-consumes-Process-Record",
    "Trigger": "Gov: Process --[Consumes]--> Record",
    "Template": "<subject_id> (<subject_class>) shall consumes the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-consumes-Process-Record-COND",
    "Trigger": "Gov: Process --[Consumes]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall consumes the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-consumes-Process-Record-COND-CONST",
    "Trigger": "Gov: Process --[Consumes]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall consumes the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-consumes-Process-Record-CONST",
    "Trigger": "Gov: Process --[Consumes]--> Record",
    "Template": "<subject_id> (<subject_class>) shall consumes the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-curation-Process-Data",
    "Trigger": "Gov: Process --[Curation]--> Data",
    "Template": "<subject_id> (<subject_class>) shall curation the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-curation-Process-Data-COND",
    "Trigger": "Gov: Process --[Curation]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall curation the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-curation-Process-Data-COND-CONST",
    "Trigger": "Gov: Process --[Curation]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall curation the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-curation-Process-Data-CONST",
    "Trigger": "Gov: Process --[Curation]--> Data",
    "Template": "<subject_id> (<subject_class>) shall curation the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-delivers-Process-Document",
    "Trigger": "Gov: Process --[Delivers]--> Document",
    "Template": "<subject_id> (<subject_class>) shall delivers the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-delivers-Process-Document-COND",
    "Trigger": "Gov: Process --[Delivers]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall delivers the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-delivers-Process-Document-COND-CONST",
    "Trigger": "Gov: Process --[Delivers]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall delivers the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-delivers-Process-Document-CONST",
    "Trigger": "Gov: Process --[Delivers]--> Document",
    "Template": "<subject_id> (<subject_class>) shall delivers the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-delivers-Process-Record",
    "Trigger": "Gov: Process --[Delivers]--> Record",
    "Template": "<subject_id> (<subject_class>) shall delivers the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-delivers-Process-Record-COND",
    "Trigger": "Gov: Process --[Delivers]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall delivers the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-delivers-Process-Record-COND-CONST",
    "Trigger": "Gov: Process --[Delivers]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall delivers the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-delivers-Process-Record-CONST",
    "Trigger": "Gov: Process --[Delivers]--> Record",
    "Template": "<subject_id> (<subject_class>) shall delivers the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-derived_from-Work_Product-Work_Product",
    "Trigger": "Gov: Work Product --[Derived from]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be derived from the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-derived_from-Work_Product-Work_Product-COND",
    "Trigger": "Gov: Work Product --[Derived from]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be derived from the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-derived_from-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Gov: Work Product --[Derived from]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be derived from the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-derived_from-Work_Product-Work_Product-CONST",
    "Trigger": "Gov: Work Product --[Derived from]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be derived from the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Document",
    "Trigger": "Gov: Business Unit --[Develops]--> Document",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Document-COND",
    "Trigger": "Gov: Business Unit --[Develops]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Document-COND-CONST",
    "Trigger": "Gov: Business Unit --[Develops]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Document-CONST",
    "Trigger": "Gov: Business Unit --[Develops]--> Document",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Model",
    "Trigger": "Gov: Business Unit --[Develops]--> Model",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Model-COND",
    "Trigger": "Gov: Business Unit --[Develops]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Model-COND-CONST",
    "Trigger": "Gov: Business Unit --[Develops]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Model-CONST",
    "Trigger": "Gov: Business Unit --[Develops]--> Model",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Plan",
    "Trigger": "Gov: Business Unit --[Develops]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Plan-COND",
    "Trigger": "Gov: Business Unit --[Develops]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Plan-COND-CONST",
    "Trigger": "Gov: Business Unit --[Develops]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Plan-CONST",
    "Trigger": "Gov: Business Unit --[Develops]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Procedure",
    "Trigger": "Gov: Business Unit --[Develops]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Procedure-COND",
    "Trigger": "Gov: Business Unit --[Develops]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Procedure-COND-CONST",
    "Trigger": "Gov: Business Unit --[Develops]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Procedure-CONST",
    "Trigger": "Gov: Business Unit --[Develops]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Process",
    "Trigger": "Gov: Business Unit --[Develops]--> Process",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Process-COND",
    "Trigger": "Gov: Business Unit --[Develops]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Process-COND-CONST",
    "Trigger": "Gov: Business Unit --[Develops]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Process-CONST",
    "Trigger": "Gov: Business Unit --[Develops]--> Process",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Report",
    "Trigger": "Gov: Business Unit --[Develops]--> Report",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Report-COND",
    "Trigger": "Gov: Business Unit --[Develops]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Report-COND-CONST",
    "Trigger": "Gov: Business Unit --[Develops]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Report-CONST",
    "Trigger": "Gov: Business Unit --[Develops]--> Report",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Test_Suite",
    "Trigger": "Gov: Business Unit --[Develops]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Test_Suite-COND",
    "Trigger": "Gov: Business Unit --[Develops]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Test_Suite-COND-CONST",
    "Trigger": "Gov: Business Unit --[Develops]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Test_Suite-CONST",
    "Trigger": "Gov: Business Unit --[Develops]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Work_Product",
    "Trigger": "Gov: Business Unit --[Develops]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Work_Product-COND",
    "Trigger": "Gov: Business Unit --[Develops]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Work_Product-COND-CONST",
    "Trigger": "Gov: Business Unit --[Develops]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Business_Unit-Work_Product-CONST",
    "Trigger": "Gov: Business Unit --[Develops]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Field_Data-Test_Suite",
    "Trigger": "Gov: Field Data --[Develops]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Field_Data-Test_Suite-COND",
    "Trigger": "Gov: Field Data --[Develops]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Field_Data-Test_Suite-COND-CONST",
    "Trigger": "Gov: Field Data --[Develops]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Field_Data-Test_Suite-CONST",
    "Trigger": "Gov: Field Data --[Develops]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Document",
    "Trigger": "Gov: Organization --[Develops]--> Document",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Document-COND",
    "Trigger": "Gov: Organization --[Develops]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Document-COND-CONST",
    "Trigger": "Gov: Organization --[Develops]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Document-CONST",
    "Trigger": "Gov: Organization --[Develops]--> Document",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Model",
    "Trigger": "Gov: Organization --[Develops]--> Model",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Model-COND",
    "Trigger": "Gov: Organization --[Develops]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Model-COND-CONST",
    "Trigger": "Gov: Organization --[Develops]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Model-CONST",
    "Trigger": "Gov: Organization --[Develops]--> Model",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Plan",
    "Trigger": "Gov: Organization --[Develops]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Plan-COND",
    "Trigger": "Gov: Organization --[Develops]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Plan-COND-CONST",
    "Trigger": "Gov: Organization --[Develops]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Plan-CONST",
    "Trigger": "Gov: Organization --[Develops]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Procedure",
    "Trigger": "Gov: Organization --[Develops]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Procedure-COND",
    "Trigger": "Gov: Organization --[Develops]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Procedure-COND-CONST",
    "Trigger": "Gov: Organization --[Develops]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Procedure-CONST",
    "Trigger": "Gov: Organization --[Develops]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Process",
    "Trigger": "Gov: Organization --[Develops]--> Process",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Process-COND",
    "Trigger": "Gov: Organization --[Develops]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Process-COND-CONST",
    "Trigger": "Gov: Organization --[Develops]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Process-CONST",
    "Trigger": "Gov: Organization --[Develops]--> Process",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Report",
    "Trigger": "Gov: Organization --[Develops]--> Report",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Report-COND",
    "Trigger": "Gov: Organization --[Develops]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Report-COND-CONST",
    "Trigger": "Gov: Organization --[Develops]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Report-CONST",
    "Trigger": "Gov: Organization --[Develops]--> Report",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Test_Suite",
    "Trigger": "Gov: Organization --[Develops]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Test_Suite-COND",
    "Trigger": "Gov: Organization --[Develops]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Test_Suite-COND-CONST",
    "Trigger": "Gov: Organization --[Develops]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Test_Suite-CONST",
    "Trigger": "Gov: Organization --[Develops]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Work_Product",
    "Trigger": "Gov: Organization --[Develops]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Work_Product-COND",
    "Trigger": "Gov: Organization --[Develops]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Work_Product-COND-CONST",
    "Trigger": "Gov: Organization --[Develops]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Organization-Work_Product-CONST",
    "Trigger": "Gov: Organization --[Develops]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Plan-Test_Suite",
    "Trigger": "Gov: Plan --[Develops]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Plan-Test_Suite-COND",
    "Trigger": "Gov: Plan --[Develops]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Plan-Test_Suite-COND-CONST",
    "Trigger": "Gov: Plan --[Develops]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Plan-Test_Suite-CONST",
    "Trigger": "Gov: Plan --[Develops]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Process-Test_Suite",
    "Trigger": "Gov: Process --[Develops]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Process-Test_Suite-COND",
    "Trigger": "Gov: Process --[Develops]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Process-Test_Suite-COND-CONST",
    "Trigger": "Gov: Process --[Develops]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Process-Test_Suite-CONST",
    "Trigger": "Gov: Process --[Develops]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Risk_Assessment-Test_Suite",
    "Trigger": "Gov: Risk Assessment --[Develops]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Risk_Assessment-Test_Suite-COND",
    "Trigger": "Gov: Risk Assessment --[Develops]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Risk_Assessment-Test_Suite-COND-CONST",
    "Trigger": "Gov: Risk Assessment --[Develops]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Risk_Assessment-Test_Suite-CONST",
    "Trigger": "Gov: Risk Assessment --[Develops]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Document",
    "Trigger": "Gov: Role --[Develops]--> Document",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Document-COND",
    "Trigger": "Gov: Role --[Develops]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Document-COND-CONST",
    "Trigger": "Gov: Role --[Develops]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Document-CONST",
    "Trigger": "Gov: Role --[Develops]--> Document",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Model",
    "Trigger": "Gov: Role --[Develops]--> Model",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Model-COND",
    "Trigger": "Gov: Role --[Develops]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Model-COND-CONST",
    "Trigger": "Gov: Role --[Develops]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Model-CONST",
    "Trigger": "Gov: Role --[Develops]--> Model",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Plan",
    "Trigger": "Gov: Role --[Develops]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Plan-COND",
    "Trigger": "Gov: Role --[Develops]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Plan-COND-CONST",
    "Trigger": "Gov: Role --[Develops]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Plan-CONST",
    "Trigger": "Gov: Role --[Develops]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Procedure",
    "Trigger": "Gov: Role --[Develops]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Procedure-COND",
    "Trigger": "Gov: Role --[Develops]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Procedure-COND-CONST",
    "Trigger": "Gov: Role --[Develops]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Procedure-CONST",
    "Trigger": "Gov: Role --[Develops]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Process",
    "Trigger": "Gov: Role --[Develops]--> Process",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Process-COND",
    "Trigger": "Gov: Role --[Develops]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Process-COND-CONST",
    "Trigger": "Gov: Role --[Develops]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Process-CONST",
    "Trigger": "Gov: Role --[Develops]--> Process",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Report",
    "Trigger": "Gov: Role --[Develops]--> Report",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Report-COND",
    "Trigger": "Gov: Role --[Develops]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Report-COND-CONST",
    "Trigger": "Gov: Role --[Develops]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Report-CONST",
    "Trigger": "Gov: Role --[Develops]--> Report",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Test_Suite",
    "Trigger": "Gov: Role --[Develops]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Test_Suite-COND",
    "Trigger": "Gov: Role --[Develops]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Test_Suite-COND-CONST",
    "Trigger": "Gov: Role --[Develops]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Test_Suite-CONST",
    "Trigger": "Gov: Role --[Develops]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Work_Product",
    "Trigger": "Gov: Role --[Develops]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Work_Product-COND",
    "Trigger": "Gov: Role --[Develops]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Work_Product-COND-CONST",
    "Trigger": "Gov: Role --[Develops]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Role-Work_Product-CONST",
    "Trigger": "Gov: Role --[Develops]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Safety_Goal-Test_Suite",
    "Trigger": "Gov: Safety Goal --[Develops]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Safety_Goal-Test_Suite-COND",
    "Trigger": "Gov: Safety Goal --[Develops]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Safety_Goal-Test_Suite-COND-CONST",
    "Trigger": "Gov: Safety Goal --[Develops]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-develops-Safety_Goal-Test_Suite-CONST",
    "Trigger": "Gov: Safety Goal --[Develops]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall develops the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-executes-Operation-Procedure",
    "Trigger": "Gov: Operation --[Executes]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall executes the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-executes-Operation-Procedure-COND",
    "Trigger": "Gov: Operation --[Executes]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall executes the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-executes-Operation-Procedure-COND-CONST",
    "Trigger": "Gov: Operation --[Executes]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall executes the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-executes-Operation-Procedure-CONST",
    "Trigger": "Gov: Operation --[Executes]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall executes the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-executes-Operation-Process",
    "Trigger": "Gov: Operation --[Executes]--> Process",
    "Template": "<subject_id> (<subject_class>) shall executes the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-executes-Operation-Process-COND",
    "Trigger": "Gov: Operation --[Executes]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall executes the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-executes-Operation-Process-COND-CONST",
    "Trigger": "Gov: Operation --[Executes]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall executes the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-executes-Operation-Process-CONST",
    "Trigger": "Gov: Operation --[Executes]--> Process",
    "Template": "<subject_id> (<subject_class>) shall executes the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-executes-Role-Procedure",
    "Trigger": "Gov: Role --[Executes]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall executes the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-executes-Role-Procedure-COND",
    "Trigger": "Gov: Role --[Executes]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall executes the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-executes-Role-Procedure-COND-CONST",
    "Trigger": "Gov: Role --[Executes]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall executes the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-executes-Role-Procedure-CONST",
    "Trigger": "Gov: Role --[Executes]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall executes the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-executes-Role-Process",
    "Trigger": "Gov: Role --[Executes]--> Process",
    "Template": "<subject_id> (<subject_class>) shall executes the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-executes-Role-Process-COND",
    "Trigger": "Gov: Role --[Executes]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall executes the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-executes-Role-Process-COND-CONST",
    "Trigger": "Gov: Role --[Executes]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall executes the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-executes-Role-Process-CONST",
    "Trigger": "Gov: Role --[Executes]--> Process",
    "Template": "<subject_id> (<subject_class>) shall executes the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-extend-Policy-Policy",
    "Trigger": "Gov: Policy --[Extend]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-extend-Policy-Policy-COND",
    "Trigger": "Gov: Policy --[Extend]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-extend-Policy-Policy-COND-CONST",
    "Trigger": "Gov: Policy --[Extend]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-extend-Policy-Policy-CONST",
    "Trigger": "Gov: Policy --[Extend]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-extend-Standard-Standard",
    "Trigger": "Gov: Standard --[Extend]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-extend-Standard-Standard-COND",
    "Trigger": "Gov: Standard --[Extend]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-extend-Standard-Standard-COND-CONST",
    "Trigger": "Gov: Standard --[Extend]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-extend-Standard-Standard-CONST",
    "Trigger": "Gov: Standard --[Extend]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Action",
    "Trigger": "Gov: Action --[Flow]--> Action",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Action-COND",
    "Trigger": "Gov: Action --[Flow]--> Action",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Action-COND-CONST",
    "Trigger": "Gov: Action --[Flow]--> Action",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Action-CONST",
    "Trigger": "Gov: Action --[Flow]--> Action",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Decision",
    "Trigger": "Gov: Action --[Flow]--> Decision",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Decision-COND",
    "Trigger": "Gov: Action --[Flow]--> Decision",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Decision-COND-CONST",
    "Trigger": "Gov: Action --[Flow]--> Decision",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Decision-CONST",
    "Trigger": "Gov: Action --[Flow]--> Decision",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Final",
    "Trigger": "Gov: Action --[Flow]--> Final",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Final-COND",
    "Trigger": "Gov: Action --[Flow]--> Final",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Final-COND-CONST",
    "Trigger": "Gov: Action --[Flow]--> Final",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Final-CONST",
    "Trigger": "Gov: Action --[Flow]--> Final",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Merge",
    "Trigger": "Gov: Action --[Flow]--> Merge",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Merge-COND",
    "Trigger": "Gov: Action --[Flow]--> Merge",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Merge-COND-CONST",
    "Trigger": "Gov: Action --[Flow]--> Merge",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Merge-CONST",
    "Trigger": "Gov: Action --[Flow]--> Merge",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Action",
    "Trigger": "Gov: Decision --[Flow]--> Action",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Action-COND",
    "Trigger": "Gov: Decision --[Flow]--> Action",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Action-COND-CONST",
    "Trigger": "Gov: Decision --[Flow]--> Action",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Action-CONST",
    "Trigger": "Gov: Decision --[Flow]--> Action",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Decision",
    "Trigger": "Gov: Decision --[Flow]--> Decision",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Decision-COND",
    "Trigger": "Gov: Decision --[Flow]--> Decision",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Decision-COND-CONST",
    "Trigger": "Gov: Decision --[Flow]--> Decision",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Decision-CONST",
    "Trigger": "Gov: Decision --[Flow]--> Decision",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Final",
    "Trigger": "Gov: Decision --[Flow]--> Final",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Final-COND",
    "Trigger": "Gov: Decision --[Flow]--> Final",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Final-COND-CONST",
    "Trigger": "Gov: Decision --[Flow]--> Final",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Final-CONST",
    "Trigger": "Gov: Decision --[Flow]--> Final",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Lifecycle_Phase",
    "Trigger": "Gov: Decision --[Flow]--> Lifecycle Phase",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Lifecycle_Phase-COND",
    "Trigger": "Gov: Decision --[Flow]--> Lifecycle Phase",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Lifecycle_Phase-COND-CONST",
    "Trigger": "Gov: Decision --[Flow]--> Lifecycle Phase",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Lifecycle_Phase-CONST",
    "Trigger": "Gov: Decision --[Flow]--> Lifecycle Phase",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Merge",
    "Trigger": "Gov: Decision --[Flow]--> Merge",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Merge-COND",
    "Trigger": "Gov: Decision --[Flow]--> Merge",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Merge-COND-CONST",
    "Trigger": "Gov: Decision --[Flow]--> Merge",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Merge-CONST",
    "Trigger": "Gov: Decision --[Flow]--> Merge",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Action",
    "Trigger": "Gov: Initial --[Flow]--> Action",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Action-COND",
    "Trigger": "Gov: Initial --[Flow]--> Action",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Action-COND-CONST",
    "Trigger": "Gov: Initial --[Flow]--> Action",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Action-CONST",
    "Trigger": "Gov: Initial --[Flow]--> Action",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Decision",
    "Trigger": "Gov: Initial --[Flow]--> Decision",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Decision-COND",
    "Trigger": "Gov: Initial --[Flow]--> Decision",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Decision-COND-CONST",
    "Trigger": "Gov: Initial --[Flow]--> Decision",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Decision-CONST",
    "Trigger": "Gov: Initial --[Flow]--> Decision",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Merge",
    "Trigger": "Gov: Initial --[Flow]--> Merge",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Merge-COND",
    "Trigger": "Gov: Initial --[Flow]--> Merge",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Merge-COND-CONST",
    "Trigger": "Gov: Initial --[Flow]--> Merge",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Merge-CONST",
    "Trigger": "Gov: Initial --[Flow]--> Merge",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Action",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Action",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Action-COND",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Action",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Action-COND-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Action",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Action-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Action",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Decision",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Decision",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Decision-COND",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Decision",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Decision-COND-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Decision",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Decision-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Decision",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Final",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Final",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Final-COND",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Final",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Final-COND-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Final",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Final-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Final",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Merge",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Merge",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Merge-COND",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Merge",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Merge-COND-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Merge",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Merge-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Merge",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Action",
    "Trigger": "Gov: Merge --[Flow]--> Action",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Action-COND",
    "Trigger": "Gov: Merge --[Flow]--> Action",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Action-COND-CONST",
    "Trigger": "Gov: Merge --[Flow]--> Action",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Action-CONST",
    "Trigger": "Gov: Merge --[Flow]--> Action",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Decision",
    "Trigger": "Gov: Merge --[Flow]--> Decision",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Decision-COND",
    "Trigger": "Gov: Merge --[Flow]--> Decision",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Decision-COND-CONST",
    "Trigger": "Gov: Merge --[Flow]--> Decision",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Decision-CONST",
    "Trigger": "Gov: Merge --[Flow]--> Decision",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Merge",
    "Trigger": "Gov: Merge --[Flow]--> Merge",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Merge-COND",
    "Trigger": "Gov: Merge --[Flow]--> Merge",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Merge-COND-CONST",
    "Trigger": "Gov: Merge --[Flow]--> Merge",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Merge-CONST",
    "Trigger": "Gov: Merge --[Flow]--> Merge",
    "Template": "<subject_id> (<subject_class>) shall flow to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-generalize-Policy-Policy",
    "Trigger": "Gov: Policy --[Generalize]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-generalize-Policy-Policy-COND",
    "Trigger": "Gov: Policy --[Generalize]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-generalize-Policy-Policy-COND-CONST",
    "Trigger": "Gov: Policy --[Generalize]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-generalize-Policy-Policy-CONST",
    "Trigger": "Gov: Policy --[Generalize]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-generalize-Standard-Standard",
    "Trigger": "Gov: Standard --[Generalize]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-generalize-Standard-Standard-COND",
    "Trigger": "Gov: Standard --[Generalize]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-generalize-Standard-Standard-COND-CONST",
    "Trigger": "Gov: Standard --[Generalize]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-generalize-Standard-Standard-CONST",
    "Trigger": "Gov: Standard --[Generalize]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Hazard",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Hazard",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Hazard-COND",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Hazard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Hazard-COND-CONST",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Hazard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Hazard-CONST",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Hazard",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Plan",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Plan-COND",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Plan-COND-CONST",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Plan-CONST",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Policy",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Policy-COND",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Policy-COND-CONST",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Policy-CONST",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Procedure",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Procedure-COND",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Procedure-COND-CONST",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Procedure-CONST",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Process",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Process",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Process-COND",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Process-COND-CONST",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Process-CONST",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Process",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Risk_Assessment",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Risk Assessment",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Risk_Assessment-COND",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Risk Assessment",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Risk_Assessment-COND-CONST",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Risk Assessment",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Risk_Assessment-CONST",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Risk Assessment",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Safety_Goal",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Safety Goal",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Safety_Goal-COND",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Safety Goal",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Safety_Goal-COND-CONST",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Safety Goal",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Safety_Goal-CONST",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Safety Goal",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Safety_Issue",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Safety Issue",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Safety_Issue-COND",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Safety Issue",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Safety_Issue-COND-CONST",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Safety Issue",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Safety_Issue-CONST",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Safety Issue",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Security_Threat",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Security Threat",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Security_Threat-COND",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Security Threat",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Security_Threat-COND-CONST",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Security Threat",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Security_Threat-CONST",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Security Threat",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Test_Suite",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Test_Suite-COND",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Test_Suite-COND-CONST",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Test_Suite-CONST",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Work_Product",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Work_Product-COND",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Work_Product-COND-CONST",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Business_Unit-Work_Product-CONST",
    "Trigger": "Gov: Business Unit --[Mitigates]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Hazard",
    "Trigger": "Gov: Organization --[Mitigates]--> Hazard",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Hazard-COND",
    "Trigger": "Gov: Organization --[Mitigates]--> Hazard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Hazard-COND-CONST",
    "Trigger": "Gov: Organization --[Mitigates]--> Hazard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Hazard-CONST",
    "Trigger": "Gov: Organization --[Mitigates]--> Hazard",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Plan",
    "Trigger": "Gov: Organization --[Mitigates]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Plan-COND",
    "Trigger": "Gov: Organization --[Mitigates]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Plan-COND-CONST",
    "Trigger": "Gov: Organization --[Mitigates]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Plan-CONST",
    "Trigger": "Gov: Organization --[Mitigates]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Policy",
    "Trigger": "Gov: Organization --[Mitigates]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Policy-COND",
    "Trigger": "Gov: Organization --[Mitigates]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Policy-COND-CONST",
    "Trigger": "Gov: Organization --[Mitigates]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Policy-CONST",
    "Trigger": "Gov: Organization --[Mitigates]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Procedure",
    "Trigger": "Gov: Organization --[Mitigates]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Procedure-COND",
    "Trigger": "Gov: Organization --[Mitigates]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Procedure-COND-CONST",
    "Trigger": "Gov: Organization --[Mitigates]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Procedure-CONST",
    "Trigger": "Gov: Organization --[Mitigates]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Process",
    "Trigger": "Gov: Organization --[Mitigates]--> Process",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Process-COND",
    "Trigger": "Gov: Organization --[Mitigates]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Process-COND-CONST",
    "Trigger": "Gov: Organization --[Mitigates]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Process-CONST",
    "Trigger": "Gov: Organization --[Mitigates]--> Process",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Risk_Assessment",
    "Trigger": "Gov: Organization --[Mitigates]--> Risk Assessment",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Risk_Assessment-COND",
    "Trigger": "Gov: Organization --[Mitigates]--> Risk Assessment",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Risk_Assessment-COND-CONST",
    "Trigger": "Gov: Organization --[Mitigates]--> Risk Assessment",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Risk_Assessment-CONST",
    "Trigger": "Gov: Organization --[Mitigates]--> Risk Assessment",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Safety_Goal",
    "Trigger": "Gov: Organization --[Mitigates]--> Safety Goal",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Safety_Goal-COND",
    "Trigger": "Gov: Organization --[Mitigates]--> Safety Goal",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Safety_Goal-COND-CONST",
    "Trigger": "Gov: Organization --[Mitigates]--> Safety Goal",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Safety_Goal-CONST",
    "Trigger": "Gov: Organization --[Mitigates]--> Safety Goal",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Safety_Issue",
    "Trigger": "Gov: Organization --[Mitigates]--> Safety Issue",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Safety_Issue-COND",
    "Trigger": "Gov: Organization --[Mitigates]--> Safety Issue",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Safety_Issue-COND-CONST",
    "Trigger": "Gov: Organization --[Mitigates]--> Safety Issue",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Safety_Issue-CONST",
    "Trigger": "Gov: Organization --[Mitigates]--> Safety Issue",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Security_Threat",
    "Trigger": "Gov: Organization --[Mitigates]--> Security Threat",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Security_Threat-COND",
    "Trigger": "Gov: Organization --[Mitigates]--> Security Threat",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Security_Threat-COND-CONST",
    "Trigger": "Gov: Organization --[Mitigates]--> Security Threat",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Security_Threat-CONST",
    "Trigger": "Gov: Organization --[Mitigates]--> Security Threat",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Test_Suite",
    "Trigger": "Gov: Organization --[Mitigates]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Test_Suite-COND",
    "Trigger": "Gov: Organization --[Mitigates]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Test_Suite-COND-CONST",
    "Trigger": "Gov: Organization --[Mitigates]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Test_Suite-CONST",
    "Trigger": "Gov: Organization --[Mitigates]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Work_Product",
    "Trigger": "Gov: Organization --[Mitigates]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Work_Product-COND",
    "Trigger": "Gov: Organization --[Mitigates]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Work_Product-COND-CONST",
    "Trigger": "Gov: Organization --[Mitigates]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Organization-Work_Product-CONST",
    "Trigger": "Gov: Organization --[Mitigates]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Risk_Assessment-Plan",
    "Trigger": "Gov: Risk Assessment --[Mitigates]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Risk_Assessment-Plan-COND",
    "Trigger": "Gov: Risk Assessment --[Mitigates]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Risk_Assessment-Plan-COND-CONST",
    "Trigger": "Gov: Risk Assessment --[Mitigates]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Risk_Assessment-Plan-CONST",
    "Trigger": "Gov: Risk Assessment --[Mitigates]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Risk_Assessment-Safety_Goal",
    "Trigger": "Gov: Risk Assessment --[Mitigates]--> Safety Goal",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Risk_Assessment-Safety_Goal-COND",
    "Trigger": "Gov: Risk Assessment --[Mitigates]--> Safety Goal",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Risk_Assessment-Safety_Goal-COND-CONST",
    "Trigger": "Gov: Risk Assessment --[Mitigates]--> Safety Goal",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Risk_Assessment-Safety_Goal-CONST",
    "Trigger": "Gov: Risk Assessment --[Mitigates]--> Safety Goal",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Hazard",
    "Trigger": "Gov: Role --[Mitigates]--> Hazard",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Hazard-COND",
    "Trigger": "Gov: Role --[Mitigates]--> Hazard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Hazard-COND-CONST",
    "Trigger": "Gov: Role --[Mitigates]--> Hazard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Hazard-CONST",
    "Trigger": "Gov: Role --[Mitigates]--> Hazard",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Plan",
    "Trigger": "Gov: Role --[Mitigates]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Plan-COND",
    "Trigger": "Gov: Role --[Mitigates]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Plan-COND-CONST",
    "Trigger": "Gov: Role --[Mitigates]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Plan-CONST",
    "Trigger": "Gov: Role --[Mitigates]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Policy",
    "Trigger": "Gov: Role --[Mitigates]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Policy-COND",
    "Trigger": "Gov: Role --[Mitigates]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Policy-COND-CONST",
    "Trigger": "Gov: Role --[Mitigates]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Policy-CONST",
    "Trigger": "Gov: Role --[Mitigates]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Procedure",
    "Trigger": "Gov: Role --[Mitigates]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Procedure-COND",
    "Trigger": "Gov: Role --[Mitigates]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Procedure-COND-CONST",
    "Trigger": "Gov: Role --[Mitigates]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Procedure-CONST",
    "Trigger": "Gov: Role --[Mitigates]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Process",
    "Trigger": "Gov: Role --[Mitigates]--> Process",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Process-COND",
    "Trigger": "Gov: Role --[Mitigates]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Process-COND-CONST",
    "Trigger": "Gov: Role --[Mitigates]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Process-CONST",
    "Trigger": "Gov: Role --[Mitigates]--> Process",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Risk_Assessment",
    "Trigger": "Gov: Role --[Mitigates]--> Risk Assessment",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Risk_Assessment-COND",
    "Trigger": "Gov: Role --[Mitigates]--> Risk Assessment",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Risk_Assessment-COND-CONST",
    "Trigger": "Gov: Role --[Mitigates]--> Risk Assessment",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Risk_Assessment-CONST",
    "Trigger": "Gov: Role --[Mitigates]--> Risk Assessment",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Safety_Goal",
    "Trigger": "Gov: Role --[Mitigates]--> Safety Goal",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Safety_Goal-COND",
    "Trigger": "Gov: Role --[Mitigates]--> Safety Goal",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Safety_Goal-COND-CONST",
    "Trigger": "Gov: Role --[Mitigates]--> Safety Goal",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Safety_Goal-CONST",
    "Trigger": "Gov: Role --[Mitigates]--> Safety Goal",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Safety_Issue",
    "Trigger": "Gov: Role --[Mitigates]--> Safety Issue",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Safety_Issue-COND",
    "Trigger": "Gov: Role --[Mitigates]--> Safety Issue",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Safety_Issue-COND-CONST",
    "Trigger": "Gov: Role --[Mitigates]--> Safety Issue",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Safety_Issue-CONST",
    "Trigger": "Gov: Role --[Mitigates]--> Safety Issue",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Security_Threat",
    "Trigger": "Gov: Role --[Mitigates]--> Security Threat",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Security_Threat-COND",
    "Trigger": "Gov: Role --[Mitigates]--> Security Threat",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Security_Threat-COND-CONST",
    "Trigger": "Gov: Role --[Mitigates]--> Security Threat",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Security_Threat-CONST",
    "Trigger": "Gov: Role --[Mitigates]--> Security Threat",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Test_Suite",
    "Trigger": "Gov: Role --[Mitigates]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Test_Suite-COND",
    "Trigger": "Gov: Role --[Mitigates]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Test_Suite-COND-CONST",
    "Trigger": "Gov: Role --[Mitigates]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Test_Suite-CONST",
    "Trigger": "Gov: Role --[Mitigates]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Work_Product",
    "Trigger": "Gov: Role --[Mitigates]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Work_Product-COND",
    "Trigger": "Gov: Role --[Mitigates]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Work_Product-COND-CONST",
    "Trigger": "Gov: Role --[Mitigates]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-mitigates-Role-Work_Product-CONST",
    "Trigger": "Gov: Role --[Mitigates]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Activity",
    "Trigger": "Gov: Role --[Monitors]--> Activity",
    "Template": "<subject_id> (<subject_class>) shall monitors the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Activity-COND",
    "Trigger": "Gov: Role --[Monitors]--> Activity",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitors the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Activity-COND-CONST",
    "Trigger": "Gov: Role --[Monitors]--> Activity",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitors the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Activity-CONST",
    "Trigger": "Gov: Role --[Monitors]--> Activity",
    "Template": "<subject_id> (<subject_class>) shall monitors the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Metric",
    "Trigger": "Gov: Role --[Monitors]--> Metric",
    "Template": "<subject_id> (<subject_class>) shall monitors the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Metric-COND",
    "Trigger": "Gov: Role --[Monitors]--> Metric",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitors the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Metric-COND-CONST",
    "Trigger": "Gov: Role --[Monitors]--> Metric",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitors the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Metric-CONST",
    "Trigger": "Gov: Role --[Monitors]--> Metric",
    "Template": "<subject_id> (<subject_class>) shall monitors the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Process",
    "Trigger": "Gov: Role --[Monitors]--> Process",
    "Template": "<subject_id> (<subject_class>) shall monitors the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Process-COND",
    "Trigger": "Gov: Role --[Monitors]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitors the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Process-COND-CONST",
    "Trigger": "Gov: Role --[Monitors]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitors the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Process-CONST",
    "Trigger": "Gov: Role --[Monitors]--> Process",
    "Template": "<subject_id> (<subject_class>) shall monitors the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-performs-Role-Activity",
    "Trigger": "Gov: Role --[Performs]--> Activity",
    "Template": "<subject_id> (<subject_class>) shall perform '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-performs-Role-Activity-COND",
    "Trigger": "Gov: Role --[Performs]--> Activity",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall perform '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-performs-Role-Activity-COND-CONST",
    "Trigger": "Gov: Role --[Performs]--> Activity",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall perform '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-performs-Role-Activity-CONST",
    "Trigger": "Gov: Role --[Performs]--> Activity",
    "Template": "<subject_id> (<subject_class>) shall perform '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-performs-Role-Procedure",
    "Trigger": "Gov: Role --[Performs]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall perform '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-performs-Role-Procedure-COND",
    "Trigger": "Gov: Role --[Performs]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall perform '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-performs-Role-Procedure-COND-CONST",
    "Trigger": "Gov: Role --[Performs]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall perform '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-performs-Role-Procedure-CONST",
    "Trigger": "Gov: Role --[Performs]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall perform '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-performs-Role-Task",
    "Trigger": "Gov: Role --[Performs]--> Task",
    "Template": "<subject_id> (<subject_class>) shall perform '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-performs-Role-Task-COND",
    "Trigger": "Gov: Role --[Performs]--> Task",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall perform '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-performs-Role-Task-COND-CONST",
    "Trigger": "Gov: Role --[Performs]--> Task",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall perform '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-performs-Role-Task-CONST",
    "Trigger": "Gov: Role --[Performs]--> Task",
    "Template": "<subject_id> (<subject_class>) shall perform '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-plans-Plan-Process",
    "Trigger": "Gov: Plan --[Plans]--> Process",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-plans-Plan-Process-COND",
    "Trigger": "Gov: Plan --[Plans]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-plans-Plan-Process-COND-CONST",
    "Trigger": "Gov: Plan --[Plans]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-plans-Plan-Process-CONST",
    "Trigger": "Gov: Plan --[Plans]--> Process",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Data",
    "Trigger": "Gov: Business Unit --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Data-COND",
    "Trigger": "Gov: Business Unit --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Data-COND-CONST",
    "Trigger": "Gov: Business Unit --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Data-CONST",
    "Trigger": "Gov: Business Unit --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Document",
    "Trigger": "Gov: Business Unit --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Document-COND",
    "Trigger": "Gov: Business Unit --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Document-COND-CONST",
    "Trigger": "Gov: Business Unit --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Document-CONST",
    "Trigger": "Gov: Business Unit --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Model",
    "Trigger": "Gov: Business Unit --[Produces]--> Model",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Model-COND",
    "Trigger": "Gov: Business Unit --[Produces]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Model-COND-CONST",
    "Trigger": "Gov: Business Unit --[Produces]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Model-CONST",
    "Trigger": "Gov: Business Unit --[Produces]--> Model",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Plan",
    "Trigger": "Gov: Business Unit --[Produces]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Plan-COND",
    "Trigger": "Gov: Business Unit --[Produces]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Plan-COND-CONST",
    "Trigger": "Gov: Business Unit --[Produces]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Plan-CONST",
    "Trigger": "Gov: Business Unit --[Produces]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Process",
    "Trigger": "Gov: Business Unit --[Produces]--> Process",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Process-COND",
    "Trigger": "Gov: Business Unit --[Produces]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Process-COND-CONST",
    "Trigger": "Gov: Business Unit --[Produces]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Process-CONST",
    "Trigger": "Gov: Business Unit --[Produces]--> Process",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Record",
    "Trigger": "Gov: Business Unit --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Record-COND",
    "Trigger": "Gov: Business Unit --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Record-COND-CONST",
    "Trigger": "Gov: Business Unit --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Record-CONST",
    "Trigger": "Gov: Business Unit --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Report",
    "Trigger": "Gov: Business Unit --[Produces]--> Report",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Report-COND",
    "Trigger": "Gov: Business Unit --[Produces]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Report-COND-CONST",
    "Trigger": "Gov: Business Unit --[Produces]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Report-CONST",
    "Trigger": "Gov: Business Unit --[Produces]--> Report",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Test_Suite",
    "Trigger": "Gov: Business Unit --[Produces]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Test_Suite-COND",
    "Trigger": "Gov: Business Unit --[Produces]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Test_Suite-COND-CONST",
    "Trigger": "Gov: Business Unit --[Produces]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Test_Suite-CONST",
    "Trigger": "Gov: Business Unit --[Produces]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Work_Product",
    "Trigger": "Gov: Business Unit --[Produces]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Work_Product-COND",
    "Trigger": "Gov: Business Unit --[Produces]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Work_Product-COND-CONST",
    "Trigger": "Gov: Business Unit --[Produces]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Business_Unit-Work_Product-CONST",
    "Trigger": "Gov: Business Unit --[Produces]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Data",
    "Trigger": "Gov: Organization --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Data-COND",
    "Trigger": "Gov: Organization --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Data-COND-CONST",
    "Trigger": "Gov: Organization --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Data-CONST",
    "Trigger": "Gov: Organization --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Document",
    "Trigger": "Gov: Organization --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Document-COND",
    "Trigger": "Gov: Organization --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Document-COND-CONST",
    "Trigger": "Gov: Organization --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Document-CONST",
    "Trigger": "Gov: Organization --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Model",
    "Trigger": "Gov: Organization --[Produces]--> Model",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Model-COND",
    "Trigger": "Gov: Organization --[Produces]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Model-COND-CONST",
    "Trigger": "Gov: Organization --[Produces]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Model-CONST",
    "Trigger": "Gov: Organization --[Produces]--> Model",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Plan",
    "Trigger": "Gov: Organization --[Produces]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Plan-COND",
    "Trigger": "Gov: Organization --[Produces]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Plan-COND-CONST",
    "Trigger": "Gov: Organization --[Produces]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Plan-CONST",
    "Trigger": "Gov: Organization --[Produces]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Process",
    "Trigger": "Gov: Organization --[Produces]--> Process",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Process-COND",
    "Trigger": "Gov: Organization --[Produces]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Process-COND-CONST",
    "Trigger": "Gov: Organization --[Produces]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Process-CONST",
    "Trigger": "Gov: Organization --[Produces]--> Process",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Record",
    "Trigger": "Gov: Organization --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Record-COND",
    "Trigger": "Gov: Organization --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Record-COND-CONST",
    "Trigger": "Gov: Organization --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Record-CONST",
    "Trigger": "Gov: Organization --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Report",
    "Trigger": "Gov: Organization --[Produces]--> Report",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Report-COND",
    "Trigger": "Gov: Organization --[Produces]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Report-COND-CONST",
    "Trigger": "Gov: Organization --[Produces]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Report-CONST",
    "Trigger": "Gov: Organization --[Produces]--> Report",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Test_Suite",
    "Trigger": "Gov: Organization --[Produces]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Test_Suite-COND",
    "Trigger": "Gov: Organization --[Produces]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Test_Suite-COND-CONST",
    "Trigger": "Gov: Organization --[Produces]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Test_Suite-CONST",
    "Trigger": "Gov: Organization --[Produces]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Work_Product",
    "Trigger": "Gov: Organization --[Produces]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Work_Product-COND",
    "Trigger": "Gov: Organization --[Produces]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Work_Product-COND-CONST",
    "Trigger": "Gov: Organization --[Produces]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Organization-Work_Product-CONST",
    "Trigger": "Gov: Organization --[Produces]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Plan-Document",
    "Trigger": "Gov: Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Plan-Document-COND",
    "Trigger": "Gov: Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Plan-Document-COND-CONST",
    "Trigger": "Gov: Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Plan-Document-CONST",
    "Trigger": "Gov: Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Process-Data",
    "Trigger": "Gov: Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Process-Data-COND",
    "Trigger": "Gov: Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Process-Data-COND-CONST",
    "Trigger": "Gov: Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Process-Data-CONST",
    "Trigger": "Gov: Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Process-Document",
    "Trigger": "Gov: Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Process-Document-COND",
    "Trigger": "Gov: Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Process-Document-COND-CONST",
    "Trigger": "Gov: Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Process-Document-CONST",
    "Trigger": "Gov: Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Process-Record",
    "Trigger": "Gov: Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Process-Record-COND",
    "Trigger": "Gov: Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Process-Record-COND-CONST",
    "Trigger": "Gov: Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Process-Record-CONST",
    "Trigger": "Gov: Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Report-Document",
    "Trigger": "Gov: Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Report-Document-COND",
    "Trigger": "Gov: Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Report-Document-COND-CONST",
    "Trigger": "Gov: Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Report-Document-CONST",
    "Trigger": "Gov: Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Data",
    "Trigger": "Gov: Role --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Data-COND",
    "Trigger": "Gov: Role --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Data-COND-CONST",
    "Trigger": "Gov: Role --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Data-CONST",
    "Trigger": "Gov: Role --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Document",
    "Trigger": "Gov: Role --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Document-COND",
    "Trigger": "Gov: Role --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Document-COND-CONST",
    "Trigger": "Gov: Role --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Document-CONST",
    "Trigger": "Gov: Role --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Model",
    "Trigger": "Gov: Role --[Produces]--> Model",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Model-COND",
    "Trigger": "Gov: Role --[Produces]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Model-COND-CONST",
    "Trigger": "Gov: Role --[Produces]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Model-CONST",
    "Trigger": "Gov: Role --[Produces]--> Model",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Plan",
    "Trigger": "Gov: Role --[Produces]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Plan-COND",
    "Trigger": "Gov: Role --[Produces]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Plan-COND-CONST",
    "Trigger": "Gov: Role --[Produces]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Plan-CONST",
    "Trigger": "Gov: Role --[Produces]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Process",
    "Trigger": "Gov: Role --[Produces]--> Process",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Process-COND",
    "Trigger": "Gov: Role --[Produces]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Process-COND-CONST",
    "Trigger": "Gov: Role --[Produces]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Process-CONST",
    "Trigger": "Gov: Role --[Produces]--> Process",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Record",
    "Trigger": "Gov: Role --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Record-COND",
    "Trigger": "Gov: Role --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Record-COND-CONST",
    "Trigger": "Gov: Role --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Record-CONST",
    "Trigger": "Gov: Role --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Report",
    "Trigger": "Gov: Role --[Produces]--> Report",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Report-COND",
    "Trigger": "Gov: Role --[Produces]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Report-COND-CONST",
    "Trigger": "Gov: Role --[Produces]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Report-CONST",
    "Trigger": "Gov: Role --[Produces]--> Report",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Test_Suite",
    "Trigger": "Gov: Role --[Produces]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Test_Suite-COND",
    "Trigger": "Gov: Role --[Produces]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Test_Suite-COND-CONST",
    "Trigger": "Gov: Role --[Produces]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Test_Suite-CONST",
    "Trigger": "Gov: Role --[Produces]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Work_Product",
    "Trigger": "Gov: Role --[Produces]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Work_Product-COND",
    "Trigger": "Gov: Role --[Produces]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Work_Product-COND-CONST",
    "Trigger": "Gov: Role --[Produces]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Role-Work_Product-CONST",
    "Trigger": "Gov: Role --[Produces]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Safety_Security_Case-Document",
    "Trigger": "Gov: Safety & Security Case --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Safety_Security_Case-Document-COND",
    "Trigger": "Gov: Safety & Security Case --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Safety_Security_Case-Document-COND-CONST",
    "Trigger": "Gov: Safety & Security Case --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Safety_Security_Case-Document-CONST",
    "Trigger": "Gov: Safety & Security Case --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Test_Suite-Document",
    "Trigger": "Gov: Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Test_Suite-Document-COND",
    "Trigger": "Gov: Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Test_Suite-Document-COND-CONST",
    "Trigger": "Gov: Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Test_Suite-Document-CONST",
    "Trigger": "Gov: Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall produces the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-propagate-Work_Product-Work_Product",
    "Trigger": "Gov: Work Product --[Propagate]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall propagate the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-propagate-Work_Product-Work_Product-COND",
    "Trigger": "Gov: Work Product --[Propagate]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall propagate the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-propagate-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Gov: Work Product --[Propagate]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall propagate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-propagate-Work_Product-Work_Product-CONST",
    "Trigger": "Gov: Work Product --[Propagate]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall propagate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-propagate_by_approval-Work_Product-Work_Product",
    "Trigger": "Gov: Work Product --[Propagate by Approval]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall propagate by approval the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-propagate_by_approval-Work_Product-Work_Product-COND",
    "Trigger": "Gov: Work Product --[Propagate by Approval]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall propagate by approval the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-propagate_by_approval-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Gov: Work Product --[Propagate by Approval]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall propagate by approval the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-propagate_by_approval-Work_Product-Work_Product-CONST",
    "Trigger": "Gov: Work Product --[Propagate by Approval]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall propagate by approval the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-propagate_by_review-Work_Product-Work_Product",
    "Trigger": "Gov: Work Product --[Propagate by Review]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall propagate by review the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-propagate_by_review-Work_Product-Work_Product-COND",
    "Trigger": "Gov: Work Product --[Propagate by Review]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall propagate by review the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-propagate_by_review-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Gov: Work Product --[Propagate by Review]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall propagate by review the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-propagate_by_review-Work_Product-Work_Product-CONST",
    "Trigger": "Gov: Work Product --[Propagate by Review]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall propagate by review the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-re-use-Lifecycle_Phase-Lifecycle_Phase",
    "Trigger": "Gov: Lifecycle Phase --[Re-use]--> Lifecycle Phase",
    "Template": "<subject_id> (<subject_class>) shall re-use the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-re-use-Lifecycle_Phase-Lifecycle_Phase-COND",
    "Trigger": "Gov: Lifecycle Phase --[Re-use]--> Lifecycle Phase",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall re-use the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-re-use-Lifecycle_Phase-Lifecycle_Phase-COND-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Re-use]--> Lifecycle Phase",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall re-use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-re-use-Lifecycle_Phase-Lifecycle_Phase-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Re-use]--> Lifecycle Phase",
    "Template": "<subject_id> (<subject_class>) shall re-use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-re-use-Work_Product-Lifecycle_Phase",
    "Trigger": "Gov: Work Product --[Re-use]--> Lifecycle Phase",
    "Template": "<subject_id> (<subject_class>) shall re-use the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-re-use-Work_Product-Lifecycle_Phase-COND",
    "Trigger": "Gov: Work Product --[Re-use]--> Lifecycle Phase",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall re-use the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-re-use-Work_Product-Lifecycle_Phase-COND-CONST",
    "Trigger": "Gov: Work Product --[Re-use]--> Lifecycle Phase",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall re-use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-re-use-Work_Product-Lifecycle_Phase-CONST",
    "Trigger": "Gov: Work Product --[Re-use]--> Lifecycle Phase",
    "Template": "<subject_id> (<subject_class>) shall re-use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Activity",
    "Trigger": "Gov: Role --[Responsible for]--> Activity",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Activity-COND",
    "Trigger": "Gov: Role --[Responsible for]--> Activity",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Activity-COND-CONST",
    "Trigger": "Gov: Role --[Responsible for]--> Activity",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Activity-CONST",
    "Trigger": "Gov: Role --[Responsible for]--> Activity",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Process",
    "Trigger": "Gov: Role --[Responsible for]--> Process",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Process-COND",
    "Trigger": "Gov: Role --[Responsible for]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Process-COND-CONST",
    "Trigger": "Gov: Role --[Responsible for]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Process-CONST",
    "Trigger": "Gov: Role --[Responsible for]--> Process",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Task",
    "Trigger": "Gov: Role --[Responsible for]--> Task",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Task-COND",
    "Trigger": "Gov: Role --[Responsible for]--> Task",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Task-COND-CONST",
    "Trigger": "Gov: Role --[Responsible for]--> Task",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Task-CONST",
    "Trigger": "Gov: Role --[Responsible for]--> Task",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-reviews-Audit_Report-Safety_Security_Case",
    "Trigger": "Gov: Audit Report --[Reviews]--> Safety & Security Case",
    "Template": "<subject_id> (<subject_class>) shall reviews the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-reviews-Audit_Report-Safety_Security_Case-COND",
    "Trigger": "Gov: Audit Report --[Reviews]--> Safety & Security Case",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall reviews the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-reviews-Audit_Report-Safety_Security_Case-COND-CONST",
    "Trigger": "Gov: Audit Report --[Reviews]--> Safety & Security Case",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall reviews the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-reviews-Audit_Report-Safety_Security_Case-CONST",
    "Trigger": "Gov: Audit Report --[Reviews]--> Safety & Security Case",
    "Template": "<subject_id> (<subject_class>) shall reviews the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-satisfied_by-Work_Product-Work_Product",
    "Trigger": "Gov: Work Product --[Satisfied by]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be satisfied by the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-satisfied_by-Work_Product-Work_Product-COND",
    "Trigger": "Gov: Work Product --[Satisfied by]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be satisfied by the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-satisfied_by-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Gov: Work Product --[Satisfied by]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be satisfied by the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-satisfied_by-Work_Product-Work_Product-CONST",
    "Trigger": "Gov: Work Product --[Satisfied by]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be satisfied by the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-trace-Work_Product-Work_Product",
    "Trigger": "Gov: Work Product --[Trace]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall trace to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-trace-Work_Product-Work_Product-COND",
    "Trigger": "Gov: Work Product --[Trace]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall trace to the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-trace-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Gov: Work Product --[Trace]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall trace to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-trace-Work_Product-Work_Product-CONST",
    "Trigger": "Gov: Work Product --[Trace]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall trace to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-triage-Safety_Issue-Field_Data",
    "Trigger": "Gov: Safety Issue --[Triage]--> Field Data",
    "Template": "<subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-triage-Safety_Issue-Field_Data-COND",
    "Trigger": "Gov: Safety Issue --[Triage]--> Field Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-triage-Safety_Issue-Field_Data-COND-CONST",
    "Trigger": "Gov: Safety Issue --[Triage]--> Field Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-triage-Safety_Issue-Field_Data-CONST",
    "Trigger": "Gov: Safety Issue --[Triage]--> Field Data",
    "Template": "<subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-used_after_approval-Work_Product-Work_Product",
    "Trigger": "Gov: Work Product --[Used after Approval]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be used after approval the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-used_after_approval-Work_Product-Work_Product-COND",
    "Trigger": "Gov: Work Product --[Used after Approval]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be used after approval the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-used_after_approval-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Gov: Work Product --[Used after Approval]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be used after approval the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-used_after_approval-Work_Product-Work_Product-CONST",
    "Trigger": "Gov: Work Product --[Used after Approval]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be used after approval the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-used_after_review-Work_Product-Work_Product",
    "Trigger": "Gov: Work Product --[Used after Review]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be used after review the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-used_after_review-Work_Product-Work_Product-COND",
    "Trigger": "Gov: Work Product --[Used after Review]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be used after review the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-used_after_review-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Gov: Work Product --[Used after Review]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be used after review the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-used_after_review-Work_Product-Work_Product-CONST",
    "Trigger": "Gov: Work Product --[Used after Review]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be used after review the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-used_by-Work_Product-Work_Product",
    "Trigger": "Gov: Work Product --[Used By]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be used by the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-used_by-Work_Product-Work_Product-COND",
    "Trigger": "Gov: Work Product --[Used By]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be used by the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-used_by-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Gov: Work Product --[Used By]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be used by the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-used_by-Work_Product-Work_Product-CONST",
    "Trigger": "Gov: Work Product --[Used By]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be used by the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Component",
    "Trigger": "Gov: Business Unit --[Uses]--> Component",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Component-COND",
    "Trigger": "Gov: Business Unit --[Uses]--> Component",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Component-COND-CONST",
    "Trigger": "Gov: Business Unit --[Uses]--> Component",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Component-CONST",
    "Trigger": "Gov: Business Unit --[Uses]--> Component",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Data",
    "Trigger": "Gov: Business Unit --[Uses]--> Data",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Data-COND",
    "Trigger": "Gov: Business Unit --[Uses]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Data-COND-CONST",
    "Trigger": "Gov: Business Unit --[Uses]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Data-CONST",
    "Trigger": "Gov: Business Unit --[Uses]--> Data",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Document",
    "Trigger": "Gov: Business Unit --[Uses]--> Document",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Document-COND",
    "Trigger": "Gov: Business Unit --[Uses]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Document-COND-CONST",
    "Trigger": "Gov: Business Unit --[Uses]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Document-CONST",
    "Trigger": "Gov: Business Unit --[Uses]--> Document",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Model",
    "Trigger": "Gov: Business Unit --[Uses]--> Model",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Model-COND",
    "Trigger": "Gov: Business Unit --[Uses]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Model-COND-CONST",
    "Trigger": "Gov: Business Unit --[Uses]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Model-CONST",
    "Trigger": "Gov: Business Unit --[Uses]--> Model",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Plan",
    "Trigger": "Gov: Business Unit --[Uses]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Plan-COND",
    "Trigger": "Gov: Business Unit --[Uses]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Plan-COND-CONST",
    "Trigger": "Gov: Business Unit --[Uses]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Plan-CONST",
    "Trigger": "Gov: Business Unit --[Uses]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Procedure",
    "Trigger": "Gov: Business Unit --[Uses]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Procedure-COND",
    "Trigger": "Gov: Business Unit --[Uses]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Procedure-COND-CONST",
    "Trigger": "Gov: Business Unit --[Uses]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Procedure-CONST",
    "Trigger": "Gov: Business Unit --[Uses]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Process",
    "Trigger": "Gov: Business Unit --[Uses]--> Process",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Process-COND",
    "Trigger": "Gov: Business Unit --[Uses]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Process-COND-CONST",
    "Trigger": "Gov: Business Unit --[Uses]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Process-CONST",
    "Trigger": "Gov: Business Unit --[Uses]--> Process",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Record",
    "Trigger": "Gov: Business Unit --[Uses]--> Record",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Record-COND",
    "Trigger": "Gov: Business Unit --[Uses]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Record-COND-CONST",
    "Trigger": "Gov: Business Unit --[Uses]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Record-CONST",
    "Trigger": "Gov: Business Unit --[Uses]--> Record",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-System",
    "Trigger": "Gov: Business Unit --[Uses]--> System",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-System-COND",
    "Trigger": "Gov: Business Unit --[Uses]--> System",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-System-COND-CONST",
    "Trigger": "Gov: Business Unit --[Uses]--> System",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-System-CONST",
    "Trigger": "Gov: Business Unit --[Uses]--> System",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Test_Suite",
    "Trigger": "Gov: Business Unit --[Uses]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Test_Suite-COND",
    "Trigger": "Gov: Business Unit --[Uses]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Test_Suite-COND-CONST",
    "Trigger": "Gov: Business Unit --[Uses]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Business_Unit-Test_Suite-CONST",
    "Trigger": "Gov: Business Unit --[Uses]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Operation-Data",
    "Trigger": "Gov: Operation --[Uses]--> Data",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Operation-Data-COND",
    "Trigger": "Gov: Operation --[Uses]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Operation-Data-COND-CONST",
    "Trigger": "Gov: Operation --[Uses]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Operation-Data-CONST",
    "Trigger": "Gov: Operation --[Uses]--> Data",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Operation-Document",
    "Trigger": "Gov: Operation --[Uses]--> Document",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Operation-Document-COND",
    "Trigger": "Gov: Operation --[Uses]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Operation-Document-COND-CONST",
    "Trigger": "Gov: Operation --[Uses]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Operation-Document-CONST",
    "Trigger": "Gov: Operation --[Uses]--> Document",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Operation-Record",
    "Trigger": "Gov: Operation --[Uses]--> Record",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Operation-Record-COND",
    "Trigger": "Gov: Operation --[Uses]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Operation-Record-COND-CONST",
    "Trigger": "Gov: Operation --[Uses]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Operation-Record-CONST",
    "Trigger": "Gov: Operation --[Uses]--> Record",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Component",
    "Trigger": "Gov: Organization --[Uses]--> Component",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Component-COND",
    "Trigger": "Gov: Organization --[Uses]--> Component",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Component-COND-CONST",
    "Trigger": "Gov: Organization --[Uses]--> Component",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Component-CONST",
    "Trigger": "Gov: Organization --[Uses]--> Component",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Data",
    "Trigger": "Gov: Organization --[Uses]--> Data",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Data-COND",
    "Trigger": "Gov: Organization --[Uses]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Data-COND-CONST",
    "Trigger": "Gov: Organization --[Uses]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Data-CONST",
    "Trigger": "Gov: Organization --[Uses]--> Data",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Document",
    "Trigger": "Gov: Organization --[Uses]--> Document",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Document-COND",
    "Trigger": "Gov: Organization --[Uses]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Document-COND-CONST",
    "Trigger": "Gov: Organization --[Uses]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Document-CONST",
    "Trigger": "Gov: Organization --[Uses]--> Document",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Model",
    "Trigger": "Gov: Organization --[Uses]--> Model",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Model-COND",
    "Trigger": "Gov: Organization --[Uses]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Model-COND-CONST",
    "Trigger": "Gov: Organization --[Uses]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Model-CONST",
    "Trigger": "Gov: Organization --[Uses]--> Model",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Plan",
    "Trigger": "Gov: Organization --[Uses]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Plan-COND",
    "Trigger": "Gov: Organization --[Uses]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Plan-COND-CONST",
    "Trigger": "Gov: Organization --[Uses]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Plan-CONST",
    "Trigger": "Gov: Organization --[Uses]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Procedure",
    "Trigger": "Gov: Organization --[Uses]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Procedure-COND",
    "Trigger": "Gov: Organization --[Uses]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Procedure-COND-CONST",
    "Trigger": "Gov: Organization --[Uses]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Procedure-CONST",
    "Trigger": "Gov: Organization --[Uses]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Process",
    "Trigger": "Gov: Organization --[Uses]--> Process",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Process-COND",
    "Trigger": "Gov: Organization --[Uses]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Process-COND-CONST",
    "Trigger": "Gov: Organization --[Uses]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Process-CONST",
    "Trigger": "Gov: Organization --[Uses]--> Process",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Record",
    "Trigger": "Gov: Organization --[Uses]--> Record",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Record-COND",
    "Trigger": "Gov: Organization --[Uses]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Record-COND-CONST",
    "Trigger": "Gov: Organization --[Uses]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Record-CONST",
    "Trigger": "Gov: Organization --[Uses]--> Record",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-System",
    "Trigger": "Gov: Organization --[Uses]--> System",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-System-COND",
    "Trigger": "Gov: Organization --[Uses]--> System",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-System-COND-CONST",
    "Trigger": "Gov: Organization --[Uses]--> System",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-System-CONST",
    "Trigger": "Gov: Organization --[Uses]--> System",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Test_Suite",
    "Trigger": "Gov: Organization --[Uses]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Test_Suite-COND",
    "Trigger": "Gov: Organization --[Uses]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Test_Suite-COND-CONST",
    "Trigger": "Gov: Organization --[Uses]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Organization-Test_Suite-CONST",
    "Trigger": "Gov: Organization --[Uses]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Component",
    "Trigger": "Gov: Role --[Uses]--> Component",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Component-COND",
    "Trigger": "Gov: Role --[Uses]--> Component",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Component-COND-CONST",
    "Trigger": "Gov: Role --[Uses]--> Component",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Component-CONST",
    "Trigger": "Gov: Role --[Uses]--> Component",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Data",
    "Trigger": "Gov: Role --[Uses]--> Data",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Data-COND",
    "Trigger": "Gov: Role --[Uses]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Data-COND-CONST",
    "Trigger": "Gov: Role --[Uses]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Data-CONST",
    "Trigger": "Gov: Role --[Uses]--> Data",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Document",
    "Trigger": "Gov: Role --[Uses]--> Document",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Document-COND",
    "Trigger": "Gov: Role --[Uses]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Document-COND-CONST",
    "Trigger": "Gov: Role --[Uses]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Document-CONST",
    "Trigger": "Gov: Role --[Uses]--> Document",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Model",
    "Trigger": "Gov: Role --[Uses]--> Model",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Model-COND",
    "Trigger": "Gov: Role --[Uses]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Model-COND-CONST",
    "Trigger": "Gov: Role --[Uses]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Model-CONST",
    "Trigger": "Gov: Role --[Uses]--> Model",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Plan",
    "Trigger": "Gov: Role --[Uses]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Plan-COND",
    "Trigger": "Gov: Role --[Uses]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Plan-COND-CONST",
    "Trigger": "Gov: Role --[Uses]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Plan-CONST",
    "Trigger": "Gov: Role --[Uses]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Procedure",
    "Trigger": "Gov: Role --[Uses]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Procedure-COND",
    "Trigger": "Gov: Role --[Uses]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Procedure-COND-CONST",
    "Trigger": "Gov: Role --[Uses]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Procedure-CONST",
    "Trigger": "Gov: Role --[Uses]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Process",
    "Trigger": "Gov: Role --[Uses]--> Process",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Process-COND",
    "Trigger": "Gov: Role --[Uses]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Process-COND-CONST",
    "Trigger": "Gov: Role --[Uses]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Process-CONST",
    "Trigger": "Gov: Role --[Uses]--> Process",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Record",
    "Trigger": "Gov: Role --[Uses]--> Record",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Record-COND",
    "Trigger": "Gov: Role --[Uses]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Record-COND-CONST",
    "Trigger": "Gov: Role --[Uses]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Record-CONST",
    "Trigger": "Gov: Role --[Uses]--> Record",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-System",
    "Trigger": "Gov: Role --[Uses]--> System",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-System-COND",
    "Trigger": "Gov: Role --[Uses]--> System",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-System-COND-CONST",
    "Trigger": "Gov: Role --[Uses]--> System",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-System-CONST",
    "Trigger": "Gov: Role --[Uses]--> System",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Test_Suite",
    "Trigger": "Gov: Role --[Uses]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Test_Suite-COND",
    "Trigger": "Gov: Role --[Uses]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Test_Suite-COND-CONST",
    "Trigger": "Gov: Role --[Uses]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Test_Suite-CONST",
    "Trigger": "Gov: Role --[Uses]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall uses the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-validate-Model-Test_Suite",
    "Trigger": "Gov: Model --[Validate]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-validate-Model-Test_Suite-COND",
    "Trigger": "Gov: Model --[Validate]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-validate-Model-Test_Suite-COND-CONST",
    "Trigger": "Gov: Model --[Validate]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-validate-Model-Test_Suite-CONST",
    "Trigger": "Gov: Model --[Validate]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-validate-Plan-Report",
    "Trigger": "Gov: Plan --[Validate]--> Report",
    "Template": "<subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-validate-Plan-Report-COND",
    "Trigger": "Gov: Plan --[Validate]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-validate-Plan-Report-COND-CONST",
    "Trigger": "Gov: Plan --[Validate]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-validate-Plan-Report-CONST",
    "Trigger": "Gov: Plan --[Validate]--> Report",
    "Template": "<subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-validate-Test_Suite-Report",
    "Trigger": "Gov: Test Suite --[Validate]--> Report",
    "Template": "<subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-validate-Test_Suite-Report-COND",
    "Trigger": "Gov: Test Suite --[Validate]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-validate-Test_Suite-Report-COND-CONST",
    "Trigger": "Gov: Test Suite --[Validate]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-validate-Test_Suite-Report-CONST",
    "Trigger": "Gov: Test Suite --[Validate]--> Report",
    "Template": "<subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Component",
    "Trigger": "Gov: Business Unit --[Verify]--> Component",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Component-COND",
    "Trigger": "Gov: Business Unit --[Verify]--> Component",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Component-COND-CONST",
    "Trigger": "Gov: Business Unit --[Verify]--> Component",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Component-CONST",
    "Trigger": "Gov: Business Unit --[Verify]--> Component",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Document",
    "Trigger": "Gov: Business Unit --[Verify]--> Document",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Document-COND",
    "Trigger": "Gov: Business Unit --[Verify]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Document-COND-CONST",
    "Trigger": "Gov: Business Unit --[Verify]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Document-CONST",
    "Trigger": "Gov: Business Unit --[Verify]--> Document",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Model",
    "Trigger": "Gov: Business Unit --[Verify]--> Model",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Model-COND",
    "Trigger": "Gov: Business Unit --[Verify]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Model-COND-CONST",
    "Trigger": "Gov: Business Unit --[Verify]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Model-CONST",
    "Trigger": "Gov: Business Unit --[Verify]--> Model",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Plan",
    "Trigger": "Gov: Business Unit --[Verify]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Plan-COND",
    "Trigger": "Gov: Business Unit --[Verify]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Plan-COND-CONST",
    "Trigger": "Gov: Business Unit --[Verify]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Plan-CONST",
    "Trigger": "Gov: Business Unit --[Verify]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Process",
    "Trigger": "Gov: Business Unit --[Verify]--> Process",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Process-COND",
    "Trigger": "Gov: Business Unit --[Verify]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Process-COND-CONST",
    "Trigger": "Gov: Business Unit --[Verify]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Process-CONST",
    "Trigger": "Gov: Business Unit --[Verify]--> Process",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Report",
    "Trigger": "Gov: Business Unit --[Verify]--> Report",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Report-COND",
    "Trigger": "Gov: Business Unit --[Verify]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Report-COND-CONST",
    "Trigger": "Gov: Business Unit --[Verify]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Report-CONST",
    "Trigger": "Gov: Business Unit --[Verify]--> Report",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Safety_Goal",
    "Trigger": "Gov: Business Unit --[Verify]--> Safety Goal",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Safety_Goal-COND",
    "Trigger": "Gov: Business Unit --[Verify]--> Safety Goal",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Safety_Goal-COND-CONST",
    "Trigger": "Gov: Business Unit --[Verify]--> Safety Goal",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Safety_Goal-CONST",
    "Trigger": "Gov: Business Unit --[Verify]--> Safety Goal",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-System",
    "Trigger": "Gov: Business Unit --[Verify]--> System",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-System-COND",
    "Trigger": "Gov: Business Unit --[Verify]--> System",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-System-COND-CONST",
    "Trigger": "Gov: Business Unit --[Verify]--> System",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-System-CONST",
    "Trigger": "Gov: Business Unit --[Verify]--> System",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Test_Suite",
    "Trigger": "Gov: Business Unit --[Verify]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Test_Suite-COND",
    "Trigger": "Gov: Business Unit --[Verify]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Test_Suite-COND-CONST",
    "Trigger": "Gov: Business Unit --[Verify]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Test_Suite-CONST",
    "Trigger": "Gov: Business Unit --[Verify]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Work_Product",
    "Trigger": "Gov: Business Unit --[Verify]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Work_Product-COND",
    "Trigger": "Gov: Business Unit --[Verify]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Work_Product-COND-CONST",
    "Trigger": "Gov: Business Unit --[Verify]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Business_Unit-Work_Product-CONST",
    "Trigger": "Gov: Business Unit --[Verify]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Component",
    "Trigger": "Gov: Organization --[Verify]--> Component",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Component-COND",
    "Trigger": "Gov: Organization --[Verify]--> Component",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Component-COND-CONST",
    "Trigger": "Gov: Organization --[Verify]--> Component",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Component-CONST",
    "Trigger": "Gov: Organization --[Verify]--> Component",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Document",
    "Trigger": "Gov: Organization --[Verify]--> Document",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Document-COND",
    "Trigger": "Gov: Organization --[Verify]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Document-COND-CONST",
    "Trigger": "Gov: Organization --[Verify]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Document-CONST",
    "Trigger": "Gov: Organization --[Verify]--> Document",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Model",
    "Trigger": "Gov: Organization --[Verify]--> Model",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Model-COND",
    "Trigger": "Gov: Organization --[Verify]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Model-COND-CONST",
    "Trigger": "Gov: Organization --[Verify]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Model-CONST",
    "Trigger": "Gov: Organization --[Verify]--> Model",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Plan",
    "Trigger": "Gov: Organization --[Verify]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Plan-COND",
    "Trigger": "Gov: Organization --[Verify]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Plan-COND-CONST",
    "Trigger": "Gov: Organization --[Verify]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Plan-CONST",
    "Trigger": "Gov: Organization --[Verify]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Process",
    "Trigger": "Gov: Organization --[Verify]--> Process",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Process-COND",
    "Trigger": "Gov: Organization --[Verify]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Process-COND-CONST",
    "Trigger": "Gov: Organization --[Verify]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Process-CONST",
    "Trigger": "Gov: Organization --[Verify]--> Process",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Report",
    "Trigger": "Gov: Organization --[Verify]--> Report",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Report-COND",
    "Trigger": "Gov: Organization --[Verify]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Report-COND-CONST",
    "Trigger": "Gov: Organization --[Verify]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Report-CONST",
    "Trigger": "Gov: Organization --[Verify]--> Report",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Safety_Goal",
    "Trigger": "Gov: Organization --[Verify]--> Safety Goal",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Safety_Goal-COND",
    "Trigger": "Gov: Organization --[Verify]--> Safety Goal",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Safety_Goal-COND-CONST",
    "Trigger": "Gov: Organization --[Verify]--> Safety Goal",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Safety_Goal-CONST",
    "Trigger": "Gov: Organization --[Verify]--> Safety Goal",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-System",
    "Trigger": "Gov: Organization --[Verify]--> System",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-System-COND",
    "Trigger": "Gov: Organization --[Verify]--> System",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-System-COND-CONST",
    "Trigger": "Gov: Organization --[Verify]--> System",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-System-CONST",
    "Trigger": "Gov: Organization --[Verify]--> System",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Test_Suite",
    "Trigger": "Gov: Organization --[Verify]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Test_Suite-COND",
    "Trigger": "Gov: Organization --[Verify]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Test_Suite-COND-CONST",
    "Trigger": "Gov: Organization --[Verify]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Test_Suite-CONST",
    "Trigger": "Gov: Organization --[Verify]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Work_Product",
    "Trigger": "Gov: Organization --[Verify]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Work_Product-COND",
    "Trigger": "Gov: Organization --[Verify]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Work_Product-COND-CONST",
    "Trigger": "Gov: Organization --[Verify]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Organization-Work_Product-CONST",
    "Trigger": "Gov: Organization --[Verify]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Component",
    "Trigger": "Gov: Role --[Verify]--> Component",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Component-COND",
    "Trigger": "Gov: Role --[Verify]--> Component",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Component-COND-CONST",
    "Trigger": "Gov: Role --[Verify]--> Component",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Component-CONST",
    "Trigger": "Gov: Role --[Verify]--> Component",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Document",
    "Trigger": "Gov: Role --[Verify]--> Document",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Document-COND",
    "Trigger": "Gov: Role --[Verify]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Document-COND-CONST",
    "Trigger": "Gov: Role --[Verify]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Document-CONST",
    "Trigger": "Gov: Role --[Verify]--> Document",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Model",
    "Trigger": "Gov: Role --[Verify]--> Model",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Model-COND",
    "Trigger": "Gov: Role --[Verify]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Model-COND-CONST",
    "Trigger": "Gov: Role --[Verify]--> Model",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Model-CONST",
    "Trigger": "Gov: Role --[Verify]--> Model",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Plan",
    "Trigger": "Gov: Role --[Verify]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Plan-COND",
    "Trigger": "Gov: Role --[Verify]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Plan-COND-CONST",
    "Trigger": "Gov: Role --[Verify]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Plan-CONST",
    "Trigger": "Gov: Role --[Verify]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Process",
    "Trigger": "Gov: Role --[Verify]--> Process",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Process-COND",
    "Trigger": "Gov: Role --[Verify]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Process-COND-CONST",
    "Trigger": "Gov: Role --[Verify]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Process-CONST",
    "Trigger": "Gov: Role --[Verify]--> Process",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Report",
    "Trigger": "Gov: Role --[Verify]--> Report",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Report-COND",
    "Trigger": "Gov: Role --[Verify]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Report-COND-CONST",
    "Trigger": "Gov: Role --[Verify]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Report-CONST",
    "Trigger": "Gov: Role --[Verify]--> Report",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Safety_Goal",
    "Trigger": "Gov: Role --[Verify]--> Safety Goal",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Safety_Goal-COND",
    "Trigger": "Gov: Role --[Verify]--> Safety Goal",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Safety_Goal-COND-CONST",
    "Trigger": "Gov: Role --[Verify]--> Safety Goal",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Safety_Goal-CONST",
    "Trigger": "Gov: Role --[Verify]--> Safety Goal",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-System",
    "Trigger": "Gov: Role --[Verify]--> System",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-System-COND",
    "Trigger": "Gov: Role --[Verify]--> System",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-System-COND-CONST",
    "Trigger": "Gov: Role --[Verify]--> System",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-System-CONST",
    "Trigger": "Gov: Role --[Verify]--> System",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Test_Suite",
    "Trigger": "Gov: Role --[Verify]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Test_Suite-COND",
    "Trigger": "Gov: Role --[Verify]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Test_Suite-COND-CONST",
    "Trigger": "Gov: Role --[Verify]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Test_Suite-CONST",
    "Trigger": "Gov: Role --[Verify]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Work_Product",
    "Trigger": "Gov: Role --[Verify]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Work_Product-COND",
    "Trigger": "Gov: Role --[Verify]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Work_Product-COND-CONST",
    "Trigger": "Gov: Role --[Verify]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Role-Work_Product-CONST",
    "Trigger": "Gov: Role --[Verify]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Test_Suite-Plan",
    "Trigger": "Gov: Test Suite --[Verify]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Test_Suite-Plan-COND",
    "Trigger": "Gov: Test Suite --[Verify]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Test_Suite-Plan-COND-CONST",
    "Trigger": "Gov: Test Suite --[Verify]--> Plan",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-verify-Test_Suite-Plan-CONST",
    "Trigger": "Gov: Test Suite --[Verify]--> Plan",
    "Template": "<subject_id> (<subject_class>) shall verify the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "SA-acquisition-AI_Database-Data_acquisition",
    "Trigger": "Safety&AI: AI Database --[Acquisition]--> Data acquisition",
    "Template": "Engineering team shall acquire the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-acquisition-AI_Database-Data_acquisition-COND",
    "Trigger": "Safety&AI: AI Database --[Acquisition]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall acquire the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-acquisition-AI_Database-Data_acquisition-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Acquisition]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall acquire the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-acquisition-AI_Database-Data_acquisition-CONST",
    "Trigger": "Safety&AI: AI Database --[Acquisition]--> Data acquisition",
    "Template": "Engineering team shall acquire the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-acquisition-AI_Database-Data_acquisition-ROLE",
    "Trigger": "Safety&AI: AI Database --[Acquisition]--> Data acquisition",
    "Template": "<subject_id> (<subject_class>) shall acquire the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-acquisition-AI_Database-Data_acquisition-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Acquisition]--> Data acquisition",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall acquire the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-acquisition-AI_Database-Data_acquisition-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Acquisition]--> Data acquisition",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall acquire the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-acquisition-AI_Database-Data_acquisition-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Acquisition]--> Data acquisition",
    "Template": "<subject_id> (<subject_class>) shall acquire the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_re-training-AI_Database-ANN",
    "Trigger": "Safety&AI: AI Database --[AI re-training]--> ANN",
    "Template": "Engineering team shall retrain the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_re-training-AI_Database-ANN-COND",
    "Trigger": "Safety&AI: AI Database --[AI re-training]--> ANN",
    "Template": "When <condition>, Engineering team shall retrain the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_re-training-AI_Database-ANN-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[AI re-training]--> ANN",
    "Template": "When <condition>, Engineering team shall retrain the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_re-training-AI_Database-ANN-CONST",
    "Trigger": "Safety&AI: AI Database --[AI re-training]--> ANN",
    "Template": "Engineering team shall retrain the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_re-training-AI_Database-ANN-ROLE",
    "Trigger": "Safety&AI: AI Database --[AI re-training]--> ANN",
    "Template": "<subject_id> (<subject_class>) shall retrain the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_re-training-AI_Database-ANN-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[AI re-training]--> ANN",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall retrain the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_re-training-AI_Database-ANN-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[AI re-training]--> ANN",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall retrain the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_re-training-AI_Database-ANN-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[AI re-training]--> ANN",
    "Template": "<subject_id> (<subject_class>) shall retrain the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_training-AI_Database-ANN",
    "Trigger": "Safety&AI: AI Database --[AI training]--> ANN",
    "Template": "Engineering team shall train the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_training-AI_Database-ANN-COND",
    "Trigger": "Safety&AI: AI Database --[AI training]--> ANN",
    "Template": "When <condition>, Engineering team shall train the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_training-AI_Database-ANN-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[AI training]--> ANN",
    "Template": "When <condition>, Engineering team shall train the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_training-AI_Database-ANN-CONST",
    "Trigger": "Safety&AI: AI Database --[AI training]--> ANN",
    "Template": "Engineering team shall train the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_training-AI_Database-ANN-ROLE",
    "Trigger": "Safety&AI: AI Database --[AI training]--> ANN",
    "Template": "<subject_id> (<subject_class>) shall train the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_training-AI_Database-ANN-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[AI training]--> ANN",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall train the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_training-AI_Database-ANN-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[AI training]--> ANN",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall train the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_training-AI_Database-ANN-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[AI training]--> ANN",
    "Template": "<subject_id> (<subject_class>) shall train the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-annotation-ANN-AI_Database",
    "Trigger": "Safety&AI: ANN --[Annotation]--> AI Database",
    "Template": "Engineering team shall annotate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-annotation-ANN-AI_Database-COND",
    "Trigger": "Safety&AI: ANN --[Annotation]--> AI Database",
    "Template": "When <condition>, Engineering team shall annotate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-annotation-ANN-AI_Database-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Annotation]--> AI Database",
    "Template": "When <condition>, Engineering team shall annotate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-annotation-ANN-AI_Database-CONST",
    "Trigger": "Safety&AI: ANN --[Annotation]--> AI Database",
    "Template": "Engineering team shall annotate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-annotation-ANN-AI_Database-ROLE",
    "Trigger": "Safety&AI: ANN --[Annotation]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall annotate the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-annotation-ANN-AI_Database-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Annotation]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall annotate the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-annotation-ANN-AI_Database-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Annotation]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall annotate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-annotation-ANN-AI_Database-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Annotation]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall annotate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Document",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Document",
    "Template": "Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Document-COND",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Document",
    "Template": "When <condition>, Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Document-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Document",
    "Template": "When <condition>, Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Document-CONST",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Document",
    "Template": "Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Document-ROLE",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Document",
    "Template": "<subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Document-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Document-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Document-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Document",
    "Template": "<subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Policy",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Policy",
    "Template": "Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Policy-COND",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Policy",
    "Template": "When <condition>, Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Policy-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Policy",
    "Template": "When <condition>, Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Policy-CONST",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Policy",
    "Template": "Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Policy-ROLE",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Policy-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Policy-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Policy-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Procedure",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Procedure",
    "Template": "Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Procedure-COND",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Procedure",
    "Template": "When <condition>, Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Procedure-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Procedure",
    "Template": "When <condition>, Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Procedure-CONST",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Procedure",
    "Template": "Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Procedure-ROLE",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Procedure-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Procedure-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Procedure-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Record",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Record",
    "Template": "Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Record-COND",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Record",
    "Template": "When <condition>, Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Record-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Record",
    "Template": "When <condition>, Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Record-CONST",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Record",
    "Template": "Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Record-ROLE",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Record",
    "Template": "<subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Record-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Record-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-AI_Database-Record-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Approves]--> Record",
    "Template": "<subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Document",
    "Trigger": "Safety&AI: ANN --[Approves]--> Document",
    "Template": "Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Document-COND",
    "Trigger": "Safety&AI: ANN --[Approves]--> Document",
    "Template": "When <condition>, Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Document-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Approves]--> Document",
    "Template": "When <condition>, Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Document-CONST",
    "Trigger": "Safety&AI: ANN --[Approves]--> Document",
    "Template": "Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Document-ROLE",
    "Trigger": "Safety&AI: ANN --[Approves]--> Document",
    "Template": "<subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Document-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Approves]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Document-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Approves]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Document-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Approves]--> Document",
    "Template": "<subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Policy",
    "Trigger": "Safety&AI: ANN --[Approves]--> Policy",
    "Template": "Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Policy-COND",
    "Trigger": "Safety&AI: ANN --[Approves]--> Policy",
    "Template": "When <condition>, Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Policy-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Approves]--> Policy",
    "Template": "When <condition>, Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Policy-CONST",
    "Trigger": "Safety&AI: ANN --[Approves]--> Policy",
    "Template": "Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Policy-ROLE",
    "Trigger": "Safety&AI: ANN --[Approves]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Policy-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Approves]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Policy-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Approves]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Policy-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Approves]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Procedure",
    "Trigger": "Safety&AI: ANN --[Approves]--> Procedure",
    "Template": "Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Procedure-COND",
    "Trigger": "Safety&AI: ANN --[Approves]--> Procedure",
    "Template": "When <condition>, Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Procedure-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Approves]--> Procedure",
    "Template": "When <condition>, Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Procedure-CONST",
    "Trigger": "Safety&AI: ANN --[Approves]--> Procedure",
    "Template": "Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Procedure-ROLE",
    "Trigger": "Safety&AI: ANN --[Approves]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Procedure-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Approves]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Procedure-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Approves]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Procedure-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Approves]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Record",
    "Trigger": "Safety&AI: ANN --[Approves]--> Record",
    "Template": "Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Record-COND",
    "Trigger": "Safety&AI: ANN --[Approves]--> Record",
    "Template": "When <condition>, Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Record-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Approves]--> Record",
    "Template": "When <condition>, Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Record-CONST",
    "Trigger": "Safety&AI: ANN --[Approves]--> Record",
    "Template": "Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Record-ROLE",
    "Trigger": "Safety&AI: ANN --[Approves]--> Record",
    "Template": "<subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Record-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Approves]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Record-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Approves]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-ANN-Record-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Approves]--> Record",
    "Template": "<subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Document",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Document",
    "Template": "Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Document-COND",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Document",
    "Template": "When <condition>, Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Document-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Document",
    "Template": "When <condition>, Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Document-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Document",
    "Template": "Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Document-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Document",
    "Template": "<subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Document-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Document-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Document-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Document",
    "Template": "<subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Policy",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Policy",
    "Template": "Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Policy-COND",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Policy",
    "Template": "When <condition>, Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Policy-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Policy",
    "Template": "When <condition>, Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Policy-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Policy",
    "Template": "Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Policy-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Policy-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Policy-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Policy-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Procedure",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Procedure",
    "Template": "Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Procedure-COND",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Procedure",
    "Template": "When <condition>, Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Procedure-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Procedure",
    "Template": "When <condition>, Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Procedure-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Procedure",
    "Template": "Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Procedure-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Procedure-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Procedure-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Procedure-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Record",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Record",
    "Template": "Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Record-COND",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Record",
    "Template": "When <condition>, Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Record-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Record",
    "Template": "When <condition>, Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Record-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Record",
    "Template": "Engineering team shall approve the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Record-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Record",
    "Template": "<subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Record-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Record-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-approves-Data_acquisition-Record-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Approves]--> Record",
    "Template": "<subject_id> (<subject_class>) shall approve the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Procedure",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Procedure",
    "Template": "Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Procedure-COND",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Procedure",
    "Template": "When <condition>, Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Procedure-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Procedure",
    "Template": "When <condition>, Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Procedure-CONST",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Procedure",
    "Template": "Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Procedure-ROLE",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Procedure-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Procedure-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Procedure-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Process",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Process",
    "Template": "Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Process-COND",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Process",
    "Template": "When <condition>, Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Process-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Process",
    "Template": "When <condition>, Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Process-CONST",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Process",
    "Template": "Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Process-ROLE",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Process",
    "Template": "<subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Process-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Process-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Process-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Process",
    "Template": "<subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Record",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Record",
    "Template": "Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Record-COND",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Record",
    "Template": "When <condition>, Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Record-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Record",
    "Template": "When <condition>, Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Record-CONST",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Record",
    "Template": "Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Record-ROLE",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Record",
    "Template": "<subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Record-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Record-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Record-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Record",
    "Template": "<subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Report",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Report",
    "Template": "Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Report-COND",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Report",
    "Template": "When <condition>, Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Report-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Report",
    "Template": "When <condition>, Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Report-CONST",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Report",
    "Template": "Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Report-ROLE",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Report",
    "Template": "<subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Report-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Report-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-AI_Database-Report-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Audits]--> Report",
    "Template": "<subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Procedure",
    "Trigger": "Safety&AI: ANN --[Audits]--> Procedure",
    "Template": "Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Procedure-COND",
    "Trigger": "Safety&AI: ANN --[Audits]--> Procedure",
    "Template": "When <condition>, Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Procedure-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Audits]--> Procedure",
    "Template": "When <condition>, Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Procedure-CONST",
    "Trigger": "Safety&AI: ANN --[Audits]--> Procedure",
    "Template": "Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Procedure-ROLE",
    "Trigger": "Safety&AI: ANN --[Audits]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Procedure-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Audits]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Procedure-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Audits]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Procedure-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Audits]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Process",
    "Trigger": "Safety&AI: ANN --[Audits]--> Process",
    "Template": "Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Process-COND",
    "Trigger": "Safety&AI: ANN --[Audits]--> Process",
    "Template": "When <condition>, Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Process-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Audits]--> Process",
    "Template": "When <condition>, Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Process-CONST",
    "Trigger": "Safety&AI: ANN --[Audits]--> Process",
    "Template": "Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Process-ROLE",
    "Trigger": "Safety&AI: ANN --[Audits]--> Process",
    "Template": "<subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Process-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Audits]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Process-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Audits]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Process-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Audits]--> Process",
    "Template": "<subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Record",
    "Trigger": "Safety&AI: ANN --[Audits]--> Record",
    "Template": "Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Record-COND",
    "Trigger": "Safety&AI: ANN --[Audits]--> Record",
    "Template": "When <condition>, Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Record-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Audits]--> Record",
    "Template": "When <condition>, Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Record-CONST",
    "Trigger": "Safety&AI: ANN --[Audits]--> Record",
    "Template": "Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Record-ROLE",
    "Trigger": "Safety&AI: ANN --[Audits]--> Record",
    "Template": "<subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Record-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Audits]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Record-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Audits]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Record-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Audits]--> Record",
    "Template": "<subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Report",
    "Trigger": "Safety&AI: ANN --[Audits]--> Report",
    "Template": "Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Report-COND",
    "Trigger": "Safety&AI: ANN --[Audits]--> Report",
    "Template": "When <condition>, Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Report-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Audits]--> Report",
    "Template": "When <condition>, Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Report-CONST",
    "Trigger": "Safety&AI: ANN --[Audits]--> Report",
    "Template": "Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Report-ROLE",
    "Trigger": "Safety&AI: ANN --[Audits]--> Report",
    "Template": "<subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Report-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Audits]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Report-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Audits]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-ANN-Report-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Audits]--> Report",
    "Template": "<subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Procedure",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Procedure",
    "Template": "Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Procedure-COND",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Procedure",
    "Template": "When <condition>, Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Procedure-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Procedure",
    "Template": "When <condition>, Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Procedure-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Procedure",
    "Template": "Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Procedure-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Procedure-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Procedure-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Procedure-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Process",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Process",
    "Template": "Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Process-COND",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Process",
    "Template": "When <condition>, Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Process-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Process",
    "Template": "When <condition>, Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Process-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Process",
    "Template": "Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Process-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Process",
    "Template": "<subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Process-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Process-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Process-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Process",
    "Template": "<subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Record",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Record",
    "Template": "Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Record-COND",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Record",
    "Template": "When <condition>, Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Record-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Record",
    "Template": "When <condition>, Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Record-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Record",
    "Template": "Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Record-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Record",
    "Template": "<subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Record-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Record-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Record-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Record",
    "Template": "<subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Report",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Report",
    "Template": "Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Report-COND",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Report",
    "Template": "When <condition>, Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Report-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Report",
    "Template": "When <condition>, Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Report-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Report",
    "Template": "Engineering team shall audit the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Report-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Report",
    "Template": "<subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Report-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Report-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Report",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Data_acquisition-Report-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Audits]--> Report",
    "Template": "<subject_id> (<subject_class>) shall audit the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-augmentation-ANN-AI_Database",
    "Trigger": "Safety&AI: ANN --[Augmentation]--> AI Database",
    "Template": "Engineering team shall augment the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-augmentation-ANN-AI_Database-COND",
    "Trigger": "Safety&AI: ANN --[Augmentation]--> AI Database",
    "Template": "When <condition>, Engineering team shall augment the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-augmentation-ANN-AI_Database-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Augmentation]--> AI Database",
    "Template": "When <condition>, Engineering team shall augment the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-augmentation-ANN-AI_Database-CONST",
    "Trigger": "Safety&AI: ANN --[Augmentation]--> AI Database",
    "Template": "Engineering team shall augment the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-augmentation-ANN-AI_Database-ROLE",
    "Trigger": "Safety&AI: ANN --[Augmentation]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall augment the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-augmentation-ANN-AI_Database-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Augmentation]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall augment the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-augmentation-ANN-AI_Database-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Augmentation]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall augment the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-augmentation-ANN-AI_Database-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Augmentation]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall augment the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-AI_Database-Policy",
    "Trigger": "Safety&AI: AI Database --[Authorizes]--> Policy",
    "Template": "Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-AI_Database-Policy-COND",
    "Trigger": "Safety&AI: AI Database --[Authorizes]--> Policy",
    "Template": "When <condition>, Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-AI_Database-Policy-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Authorizes]--> Policy",
    "Template": "When <condition>, Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-AI_Database-Policy-CONST",
    "Trigger": "Safety&AI: AI Database --[Authorizes]--> Policy",
    "Template": "Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-AI_Database-Policy-ROLE",
    "Trigger": "Safety&AI: AI Database --[Authorizes]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-AI_Database-Policy-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Authorizes]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-AI_Database-Policy-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Authorizes]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-AI_Database-Policy-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Authorizes]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-AI_Database-Procedure",
    "Trigger": "Safety&AI: AI Database --[Authorizes]--> Procedure",
    "Template": "Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-AI_Database-Procedure-COND",
    "Trigger": "Safety&AI: AI Database --[Authorizes]--> Procedure",
    "Template": "When <condition>, Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-AI_Database-Procedure-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Authorizes]--> Procedure",
    "Template": "When <condition>, Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-AI_Database-Procedure-CONST",
    "Trigger": "Safety&AI: AI Database --[Authorizes]--> Procedure",
    "Template": "Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-AI_Database-Procedure-ROLE",
    "Trigger": "Safety&AI: AI Database --[Authorizes]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-AI_Database-Procedure-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Authorizes]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-AI_Database-Procedure-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Authorizes]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-AI_Database-Procedure-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Authorizes]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-AI_Database-Process",
    "Trigger": "Safety&AI: AI Database --[Authorizes]--> Process",
    "Template": "Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-AI_Database-Process-COND",
    "Trigger": "Safety&AI: AI Database --[Authorizes]--> Process",
    "Template": "When <condition>, Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-AI_Database-Process-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Authorizes]--> Process",
    "Template": "When <condition>, Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-AI_Database-Process-CONST",
    "Trigger": "Safety&AI: AI Database --[Authorizes]--> Process",
    "Template": "Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-AI_Database-Process-ROLE",
    "Trigger": "Safety&AI: AI Database --[Authorizes]--> Process",
    "Template": "<subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-AI_Database-Process-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Authorizes]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-AI_Database-Process-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Authorizes]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-AI_Database-Process-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Authorizes]--> Process",
    "Template": "<subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-ANN-Policy",
    "Trigger": "Safety&AI: ANN --[Authorizes]--> Policy",
    "Template": "Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-ANN-Policy-COND",
    "Trigger": "Safety&AI: ANN --[Authorizes]--> Policy",
    "Template": "When <condition>, Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-ANN-Policy-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Authorizes]--> Policy",
    "Template": "When <condition>, Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-ANN-Policy-CONST",
    "Trigger": "Safety&AI: ANN --[Authorizes]--> Policy",
    "Template": "Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-ANN-Policy-ROLE",
    "Trigger": "Safety&AI: ANN --[Authorizes]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-ANN-Policy-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Authorizes]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-ANN-Policy-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Authorizes]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-ANN-Policy-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Authorizes]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-ANN-Procedure",
    "Trigger": "Safety&AI: ANN --[Authorizes]--> Procedure",
    "Template": "Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-ANN-Procedure-COND",
    "Trigger": "Safety&AI: ANN --[Authorizes]--> Procedure",
    "Template": "When <condition>, Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-ANN-Procedure-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Authorizes]--> Procedure",
    "Template": "When <condition>, Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-ANN-Procedure-CONST",
    "Trigger": "Safety&AI: ANN --[Authorizes]--> Procedure",
    "Template": "Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-ANN-Procedure-ROLE",
    "Trigger": "Safety&AI: ANN --[Authorizes]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-ANN-Procedure-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Authorizes]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-ANN-Procedure-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Authorizes]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-ANN-Procedure-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Authorizes]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-ANN-Process",
    "Trigger": "Safety&AI: ANN --[Authorizes]--> Process",
    "Template": "Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-ANN-Process-COND",
    "Trigger": "Safety&AI: ANN --[Authorizes]--> Process",
    "Template": "When <condition>, Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-ANN-Process-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Authorizes]--> Process",
    "Template": "When <condition>, Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-ANN-Process-CONST",
    "Trigger": "Safety&AI: ANN --[Authorizes]--> Process",
    "Template": "Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-ANN-Process-ROLE",
    "Trigger": "Safety&AI: ANN --[Authorizes]--> Process",
    "Template": "<subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-ANN-Process-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Authorizes]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-ANN-Process-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Authorizes]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-ANN-Process-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Authorizes]--> Process",
    "Template": "<subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-Data_acquisition-Policy",
    "Trigger": "Safety&AI: Data acquisition --[Authorizes]--> Policy",
    "Template": "Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-Data_acquisition-Policy-COND",
    "Trigger": "Safety&AI: Data acquisition --[Authorizes]--> Policy",
    "Template": "When <condition>, Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-Data_acquisition-Policy-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Authorizes]--> Policy",
    "Template": "When <condition>, Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-Data_acquisition-Policy-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Authorizes]--> Policy",
    "Template": "Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-Data_acquisition-Policy-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Authorizes]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-Data_acquisition-Policy-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Authorizes]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-Data_acquisition-Policy-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Authorizes]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-Data_acquisition-Policy-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Authorizes]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-Data_acquisition-Procedure",
    "Trigger": "Safety&AI: Data acquisition --[Authorizes]--> Procedure",
    "Template": "Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-Data_acquisition-Procedure-COND",
    "Trigger": "Safety&AI: Data acquisition --[Authorizes]--> Procedure",
    "Template": "When <condition>, Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-Data_acquisition-Procedure-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Authorizes]--> Procedure",
    "Template": "When <condition>, Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-Data_acquisition-Procedure-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Authorizes]--> Procedure",
    "Template": "Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-Data_acquisition-Procedure-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Authorizes]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-Data_acquisition-Procedure-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Authorizes]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-Data_acquisition-Procedure-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Authorizes]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-Data_acquisition-Procedure-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Authorizes]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-Data_acquisition-Process",
    "Trigger": "Safety&AI: Data acquisition --[Authorizes]--> Process",
    "Template": "Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-Data_acquisition-Process-COND",
    "Trigger": "Safety&AI: Data acquisition --[Authorizes]--> Process",
    "Template": "When <condition>, Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-Data_acquisition-Process-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Authorizes]--> Process",
    "Template": "When <condition>, Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-Data_acquisition-Process-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Authorizes]--> Process",
    "Template": "Engineering team shall authorize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-Data_acquisition-Process-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Authorizes]--> Process",
    "Template": "<subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-Data_acquisition-Process-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Authorizes]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-Data_acquisition-Process-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Authorizes]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-authorizes-Data_acquisition-Process-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Authorizes]--> Process",
    "Template": "<subject_id> (<subject_class>) shall authorize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-AI_Database-Business_Unit",
    "Trigger": "Safety&AI: AI Database --[Communication Path]--> Business Unit",
    "Template": "Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-AI_Database-Business_Unit-COND",
    "Trigger": "Safety&AI: AI Database --[Communication Path]--> Business Unit",
    "Template": "When <condition>, Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-AI_Database-Business_Unit-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Communication Path]--> Business Unit",
    "Template": "When <condition>, Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-AI_Database-Business_Unit-CONST",
    "Trigger": "Safety&AI: AI Database --[Communication Path]--> Business Unit",
    "Template": "Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-AI_Database-Business_Unit-ROLE",
    "Trigger": "Safety&AI: AI Database --[Communication Path]--> Business Unit",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-AI_Database-Business_Unit-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Communication Path]--> Business Unit",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-AI_Database-Business_Unit-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Communication Path]--> Business Unit",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-AI_Database-Business_Unit-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Communication Path]--> Business Unit",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-AI_Database-Organization",
    "Trigger": "Safety&AI: AI Database --[Communication Path]--> Organization",
    "Template": "Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-AI_Database-Organization-COND",
    "Trigger": "Safety&AI: AI Database --[Communication Path]--> Organization",
    "Template": "When <condition>, Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-AI_Database-Organization-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Communication Path]--> Organization",
    "Template": "When <condition>, Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-AI_Database-Organization-CONST",
    "Trigger": "Safety&AI: AI Database --[Communication Path]--> Organization",
    "Template": "Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-AI_Database-Organization-ROLE",
    "Trigger": "Safety&AI: AI Database --[Communication Path]--> Organization",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-AI_Database-Organization-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Communication Path]--> Organization",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-AI_Database-Organization-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Communication Path]--> Organization",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-AI_Database-Organization-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Communication Path]--> Organization",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-AI_Database-Role",
    "Trigger": "Safety&AI: AI Database --[Communication Path]--> Role",
    "Template": "Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-AI_Database-Role-COND",
    "Trigger": "Safety&AI: AI Database --[Communication Path]--> Role",
    "Template": "When <condition>, Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-AI_Database-Role-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Communication Path]--> Role",
    "Template": "When <condition>, Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-AI_Database-Role-CONST",
    "Trigger": "Safety&AI: AI Database --[Communication Path]--> Role",
    "Template": "Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-AI_Database-Role-ROLE",
    "Trigger": "Safety&AI: AI Database --[Communication Path]--> Role",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-AI_Database-Role-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Communication Path]--> Role",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-AI_Database-Role-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Communication Path]--> Role",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-AI_Database-Role-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Communication Path]--> Role",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-ANN-Business_Unit",
    "Trigger": "Safety&AI: ANN --[Communication Path]--> Business Unit",
    "Template": "Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-ANN-Business_Unit-COND",
    "Trigger": "Safety&AI: ANN --[Communication Path]--> Business Unit",
    "Template": "When <condition>, Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-ANN-Business_Unit-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Communication Path]--> Business Unit",
    "Template": "When <condition>, Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-ANN-Business_Unit-CONST",
    "Trigger": "Safety&AI: ANN --[Communication Path]--> Business Unit",
    "Template": "Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-ANN-Business_Unit-ROLE",
    "Trigger": "Safety&AI: ANN --[Communication Path]--> Business Unit",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-ANN-Business_Unit-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Communication Path]--> Business Unit",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-ANN-Business_Unit-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Communication Path]--> Business Unit",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-ANN-Business_Unit-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Communication Path]--> Business Unit",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-ANN-Organization",
    "Trigger": "Safety&AI: ANN --[Communication Path]--> Organization",
    "Template": "Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-ANN-Organization-COND",
    "Trigger": "Safety&AI: ANN --[Communication Path]--> Organization",
    "Template": "When <condition>, Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-ANN-Organization-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Communication Path]--> Organization",
    "Template": "When <condition>, Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-ANN-Organization-CONST",
    "Trigger": "Safety&AI: ANN --[Communication Path]--> Organization",
    "Template": "Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-ANN-Organization-ROLE",
    "Trigger": "Safety&AI: ANN --[Communication Path]--> Organization",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-ANN-Organization-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Communication Path]--> Organization",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-ANN-Organization-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Communication Path]--> Organization",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-ANN-Organization-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Communication Path]--> Organization",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-ANN-Role",
    "Trigger": "Safety&AI: ANN --[Communication Path]--> Role",
    "Template": "Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-ANN-Role-COND",
    "Trigger": "Safety&AI: ANN --[Communication Path]--> Role",
    "Template": "When <condition>, Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-ANN-Role-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Communication Path]--> Role",
    "Template": "When <condition>, Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-ANN-Role-CONST",
    "Trigger": "Safety&AI: ANN --[Communication Path]--> Role",
    "Template": "Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-ANN-Role-ROLE",
    "Trigger": "Safety&AI: ANN --[Communication Path]--> Role",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-ANN-Role-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Communication Path]--> Role",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-ANN-Role-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Communication Path]--> Role",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-ANN-Role-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Communication Path]--> Role",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-Data_acquisition-Business_Unit",
    "Trigger": "Safety&AI: Data acquisition --[Communication Path]--> Business Unit",
    "Template": "Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-Data_acquisition-Business_Unit-COND",
    "Trigger": "Safety&AI: Data acquisition --[Communication Path]--> Business Unit",
    "Template": "When <condition>, Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-Data_acquisition-Business_Unit-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Communication Path]--> Business Unit",
    "Template": "When <condition>, Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-Data_acquisition-Business_Unit-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Communication Path]--> Business Unit",
    "Template": "Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-Data_acquisition-Business_Unit-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Communication Path]--> Business Unit",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-Data_acquisition-Business_Unit-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Communication Path]--> Business Unit",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-Data_acquisition-Business_Unit-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Communication Path]--> Business Unit",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-Data_acquisition-Business_Unit-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Communication Path]--> Business Unit",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-Data_acquisition-Organization",
    "Trigger": "Safety&AI: Data acquisition --[Communication Path]--> Organization",
    "Template": "Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-Data_acquisition-Organization-COND",
    "Trigger": "Safety&AI: Data acquisition --[Communication Path]--> Organization",
    "Template": "When <condition>, Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-Data_acquisition-Organization-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Communication Path]--> Organization",
    "Template": "When <condition>, Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-Data_acquisition-Organization-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Communication Path]--> Organization",
    "Template": "Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-Data_acquisition-Organization-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Communication Path]--> Organization",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-Data_acquisition-Organization-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Communication Path]--> Organization",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-Data_acquisition-Organization-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Communication Path]--> Organization",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-Data_acquisition-Organization-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Communication Path]--> Organization",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-Data_acquisition-Role",
    "Trigger": "Safety&AI: Data acquisition --[Communication Path]--> Role",
    "Template": "Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-Data_acquisition-Role-COND",
    "Trigger": "Safety&AI: Data acquisition --[Communication Path]--> Role",
    "Template": "When <condition>, Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-Data_acquisition-Role-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Communication Path]--> Role",
    "Template": "When <condition>, Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-Data_acquisition-Role-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Communication Path]--> Role",
    "Template": "Engineering team shall communicate with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-Data_acquisition-Role-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Communication Path]--> Role",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-Data_acquisition-Role-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Communication Path]--> Role",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-Data_acquisition-Role-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Communication Path]--> Role",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-communication_path-Data_acquisition-Role-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Communication Path]--> Role",
    "Template": "<subject_id> (<subject_class>) shall communicate with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-AI_Database-Policy",
    "Trigger": "Safety&AI: AI Database --[Complies with]--> Policy",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-AI_Database-Policy-COND",
    "Trigger": "Safety&AI: AI Database --[Complies with]--> Policy",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-AI_Database-Policy-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Complies with]--> Policy",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-AI_Database-Policy-CONST",
    "Trigger": "Safety&AI: AI Database --[Complies with]--> Policy",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-AI_Database-Policy-ROLE",
    "Trigger": "Safety&AI: AI Database --[Complies with]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-AI_Database-Policy-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Complies with]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-AI_Database-Policy-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Complies with]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-AI_Database-Policy-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Complies with]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-ANN-Policy",
    "Trigger": "Safety&AI: ANN --[Complies with]--> Policy",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-ANN-Policy-COND",
    "Trigger": "Safety&AI: ANN --[Complies with]--> Policy",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-ANN-Policy-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Complies with]--> Policy",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-ANN-Policy-CONST",
    "Trigger": "Safety&AI: ANN --[Complies with]--> Policy",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-ANN-Policy-ROLE",
    "Trigger": "Safety&AI: ANN --[Complies with]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-ANN-Policy-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Complies with]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-ANN-Policy-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Complies with]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-ANN-Policy-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Complies with]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Guideline",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Guideline",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Guideline-COND",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Guideline",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Guideline-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Guideline",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Guideline-CONST",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Guideline",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Guideline-ROLE",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Guideline",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Guideline-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Guideline",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Guideline-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Guideline",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Guideline-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Guideline",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Policy",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Policy",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Policy-COND",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Policy",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Policy-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Policy",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Policy-CONST",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Policy",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Policy-ROLE",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Policy-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Policy-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Policy-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Principle",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Principle",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Principle-COND",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Principle",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Principle-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Principle",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Principle-CONST",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Principle",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Principle-ROLE",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Principle",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Principle-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Principle",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Principle-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Principle",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Principle-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Principle",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Standard",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Standard",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Standard-COND",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Standard",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Standard-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Standard",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Standard-CONST",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Standard",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Standard-ROLE",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Standard-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Standard-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-AI_Database-Standard-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Constrained by]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Guideline",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Guideline",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Guideline-COND",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Guideline",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Guideline-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Guideline",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Guideline-CONST",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Guideline",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Guideline-ROLE",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Guideline",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Guideline-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Guideline",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Guideline-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Guideline",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Guideline-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Guideline",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Policy",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Policy",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Policy-COND",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Policy",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Policy-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Policy",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Policy-CONST",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Policy",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Policy-ROLE",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Policy-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Policy-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Policy-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Principle",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Principle",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Principle-COND",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Principle",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Principle-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Principle",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Principle-CONST",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Principle",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Principle-ROLE",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Principle",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Principle-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Principle",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Principle-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Principle",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Principle-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Principle",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Standard",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Standard",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Standard-COND",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Standard",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Standard-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Standard",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Standard-CONST",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Standard",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Standard-ROLE",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Standard-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Standard-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-ANN-Standard-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Constrained by]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Guideline",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Guideline",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Guideline-COND",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Guideline",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Guideline-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Guideline",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Guideline-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Guideline",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Guideline-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Guideline",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Guideline-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Guideline",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Guideline-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Guideline",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Guideline-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Guideline",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Policy",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Policy",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Policy-COND",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Policy",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Policy-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Policy",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Policy-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Policy",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Policy-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Policy-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Policy-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Policy-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Principle",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Principle",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Principle-COND",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Principle",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Principle-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Principle",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Principle-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Principle",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Principle-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Principle",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Principle-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Principle",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Principle-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Principle",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Principle-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Principle",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Standard",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Standard",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Standard-COND",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Standard",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Standard-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Standard",
    "Template": "When <condition>, Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Standard-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Standard",
    "Template": "Engineering team shall comply with the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Standard-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Standard-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Standard-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrained_by-Data_acquisition-Standard-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Constrained by]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall comply with the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-AI_Database-Data",
    "Trigger": "Safety&AI: AI Database --[Consumes]--> Data",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-AI_Database-Data-COND",
    "Trigger": "Safety&AI: AI Database --[Consumes]--> Data",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-AI_Database-Data-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Consumes]--> Data",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-AI_Database-Data-CONST",
    "Trigger": "Safety&AI: AI Database --[Consumes]--> Data",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-AI_Database-Data-ROLE",
    "Trigger": "Safety&AI: AI Database --[Consumes]--> Data",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-AI_Database-Data-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Consumes]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-AI_Database-Data-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Consumes]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-AI_Database-Data-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Consumes]--> Data",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-AI_Database-Record",
    "Trigger": "Safety&AI: AI Database --[Consumes]--> Record",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-AI_Database-Record-COND",
    "Trigger": "Safety&AI: AI Database --[Consumes]--> Record",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-AI_Database-Record-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Consumes]--> Record",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-AI_Database-Record-CONST",
    "Trigger": "Safety&AI: AI Database --[Consumes]--> Record",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-AI_Database-Record-ROLE",
    "Trigger": "Safety&AI: AI Database --[Consumes]--> Record",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-AI_Database-Record-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Consumes]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-AI_Database-Record-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Consumes]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-AI_Database-Record-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Consumes]--> Record",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-ANN-Data",
    "Trigger": "Safety&AI: ANN --[Consumes]--> Data",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-ANN-Data-COND",
    "Trigger": "Safety&AI: ANN --[Consumes]--> Data",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-ANN-Data-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Consumes]--> Data",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-ANN-Data-CONST",
    "Trigger": "Safety&AI: ANN --[Consumes]--> Data",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-ANN-Data-ROLE",
    "Trigger": "Safety&AI: ANN --[Consumes]--> Data",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-ANN-Data-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Consumes]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-ANN-Data-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Consumes]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-ANN-Data-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Consumes]--> Data",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-ANN-Record",
    "Trigger": "Safety&AI: ANN --[Consumes]--> Record",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-ANN-Record-COND",
    "Trigger": "Safety&AI: ANN --[Consumes]--> Record",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-ANN-Record-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Consumes]--> Record",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-ANN-Record-CONST",
    "Trigger": "Safety&AI: ANN --[Consumes]--> Record",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-ANN-Record-ROLE",
    "Trigger": "Safety&AI: ANN --[Consumes]--> Record",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-ANN-Record-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Consumes]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-ANN-Record-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Consumes]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-ANN-Record-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Consumes]--> Record",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-Data_acquisition-Data",
    "Trigger": "Safety&AI: Data acquisition --[Consumes]--> Data",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-Data_acquisition-Data-COND",
    "Trigger": "Safety&AI: Data acquisition --[Consumes]--> Data",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-Data_acquisition-Data-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Consumes]--> Data",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-Data_acquisition-Data-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Consumes]--> Data",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-Data_acquisition-Data-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Consumes]--> Data",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-Data_acquisition-Data-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Consumes]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-Data_acquisition-Data-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Consumes]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-Data_acquisition-Data-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Consumes]--> Data",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-Data_acquisition-Record",
    "Trigger": "Safety&AI: Data acquisition --[Consumes]--> Record",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-Data_acquisition-Record-COND",
    "Trigger": "Safety&AI: Data acquisition --[Consumes]--> Record",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-Data_acquisition-Record-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Consumes]--> Record",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-Data_acquisition-Record-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Consumes]--> Record",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-Data_acquisition-Record-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Consumes]--> Record",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-Data_acquisition-Record-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Consumes]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-Data_acquisition-Record-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Consumes]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-consumes-Data_acquisition-Record-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Consumes]--> Record",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-AI_Database-AI_Database",
    "Trigger": "Safety&AI: AI Database --[Curation]--> AI Database",
    "Template": "Engineering team shall curate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-AI_Database-AI_Database-COND",
    "Trigger": "Safety&AI: AI Database --[Curation]--> AI Database",
    "Template": "When <condition>, Engineering team shall curate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-AI_Database-AI_Database-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Curation]--> AI Database",
    "Template": "When <condition>, Engineering team shall curate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-AI_Database-AI_Database-CONST",
    "Trigger": "Safety&AI: AI Database --[Curation]--> AI Database",
    "Template": "Engineering team shall curate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-AI_Database-AI_Database-ROLE",
    "Trigger": "Safety&AI: AI Database --[Curation]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall curate the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-AI_Database-AI_Database-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Curation]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall curate the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-AI_Database-AI_Database-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Curation]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall curate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-AI_Database-AI_Database-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Curation]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall curate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-ANN-AI_Database",
    "Trigger": "Safety&AI: ANN --[Curation]--> AI Database",
    "Template": "Engineering team shall curate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-ANN-AI_Database-COND",
    "Trigger": "Safety&AI: ANN --[Curation]--> AI Database",
    "Template": "When <condition>, Engineering team shall curate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-ANN-AI_Database-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Curation]--> AI Database",
    "Template": "When <condition>, Engineering team shall curate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-ANN-AI_Database-CONST",
    "Trigger": "Safety&AI: ANN --[Curation]--> AI Database",
    "Template": "Engineering team shall curate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-ANN-AI_Database-ROLE",
    "Trigger": "Safety&AI: ANN --[Curation]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall curate the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-ANN-AI_Database-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Curation]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall curate the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-ANN-AI_Database-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Curation]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall curate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-ANN-AI_Database-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Curation]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall curate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-ANN-Data",
    "Trigger": "Safety&AI: ANN --[Curation]--> Data",
    "Template": "Engineering team shall curate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-ANN-Data-COND",
    "Trigger": "Safety&AI: ANN --[Curation]--> Data",
    "Template": "When <condition>, Engineering team shall curate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-ANN-Data-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Curation]--> Data",
    "Template": "When <condition>, Engineering team shall curate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-ANN-Data-CONST",
    "Trigger": "Safety&AI: ANN --[Curation]--> Data",
    "Template": "Engineering team shall curate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-ANN-Data-ROLE",
    "Trigger": "Safety&AI: ANN --[Curation]--> Data",
    "Template": "<subject_id> (<subject_class>) shall curate the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-ANN-Data-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Curation]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall curate the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-ANN-Data-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Curation]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall curate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-ANN-Data-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Curation]--> Data",
    "Template": "<subject_id> (<subject_class>) shall curate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-Data_acquisition-AI_Database",
    "Trigger": "Safety&AI: Data acquisition --[Curation]--> AI Database",
    "Template": "Engineering team shall curate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-Data_acquisition-AI_Database-COND",
    "Trigger": "Safety&AI: Data acquisition --[Curation]--> AI Database",
    "Template": "When <condition>, Engineering team shall curate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-Data_acquisition-AI_Database-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Curation]--> AI Database",
    "Template": "When <condition>, Engineering team shall curate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-Data_acquisition-AI_Database-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Curation]--> AI Database",
    "Template": "Engineering team shall curate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-Data_acquisition-AI_Database-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Curation]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall curate the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-Data_acquisition-AI_Database-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Curation]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall curate the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-Data_acquisition-AI_Database-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Curation]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall curate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-Data_acquisition-AI_Database-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Curation]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall curate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-Data_acquisition-Data",
    "Trigger": "Safety&AI: Data acquisition --[Curation]--> Data",
    "Template": "Engineering team shall curate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-Data_acquisition-Data-COND",
    "Trigger": "Safety&AI: Data acquisition --[Curation]--> Data",
    "Template": "When <condition>, Engineering team shall curate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-Data_acquisition-Data-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Curation]--> Data",
    "Template": "When <condition>, Engineering team shall curate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-Data_acquisition-Data-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Curation]--> Data",
    "Template": "Engineering team shall curate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-Data_acquisition-Data-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Curation]--> Data",
    "Template": "<subject_id> (<subject_class>) shall curate the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-Data_acquisition-Data-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Curation]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall curate the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-Data_acquisition-Data-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Curation]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall curate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-Data_acquisition-Data-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Curation]--> Data",
    "Template": "<subject_id> (<subject_class>) shall curate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-AI_Database-Document",
    "Trigger": "Safety&AI: AI Database --[Delivers]--> Document",
    "Template": "Engineering team shall deliver the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-AI_Database-Document-COND",
    "Trigger": "Safety&AI: AI Database --[Delivers]--> Document",
    "Template": "When <condition>, Engineering team shall deliver the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-AI_Database-Document-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Delivers]--> Document",
    "Template": "When <condition>, Engineering team shall deliver the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-AI_Database-Document-CONST",
    "Trigger": "Safety&AI: AI Database --[Delivers]--> Document",
    "Template": "Engineering team shall deliver the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-AI_Database-Document-ROLE",
    "Trigger": "Safety&AI: AI Database --[Delivers]--> Document",
    "Template": "<subject_id> (<subject_class>) shall deliver the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-AI_Database-Document-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Delivers]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall deliver the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-AI_Database-Document-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Delivers]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall deliver the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-AI_Database-Document-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Delivers]--> Document",
    "Template": "<subject_id> (<subject_class>) shall deliver the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-AI_Database-Record",
    "Trigger": "Safety&AI: AI Database --[Delivers]--> Record",
    "Template": "Engineering team shall deliver the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-AI_Database-Record-COND",
    "Trigger": "Safety&AI: AI Database --[Delivers]--> Record",
    "Template": "When <condition>, Engineering team shall deliver the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-AI_Database-Record-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Delivers]--> Record",
    "Template": "When <condition>, Engineering team shall deliver the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-AI_Database-Record-CONST",
    "Trigger": "Safety&AI: AI Database --[Delivers]--> Record",
    "Template": "Engineering team shall deliver the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-AI_Database-Record-ROLE",
    "Trigger": "Safety&AI: AI Database --[Delivers]--> Record",
    "Template": "<subject_id> (<subject_class>) shall deliver the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-AI_Database-Record-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Delivers]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall deliver the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-AI_Database-Record-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Delivers]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall deliver the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-AI_Database-Record-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Delivers]--> Record",
    "Template": "<subject_id> (<subject_class>) shall deliver the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-ANN-Document",
    "Trigger": "Safety&AI: ANN --[Delivers]--> Document",
    "Template": "Engineering team shall deliver the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-ANN-Document-COND",
    "Trigger": "Safety&AI: ANN --[Delivers]--> Document",
    "Template": "When <condition>, Engineering team shall deliver the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-ANN-Document-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Delivers]--> Document",
    "Template": "When <condition>, Engineering team shall deliver the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-ANN-Document-CONST",
    "Trigger": "Safety&AI: ANN --[Delivers]--> Document",
    "Template": "Engineering team shall deliver the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-ANN-Document-ROLE",
    "Trigger": "Safety&AI: ANN --[Delivers]--> Document",
    "Template": "<subject_id> (<subject_class>) shall deliver the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-ANN-Document-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Delivers]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall deliver the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-ANN-Document-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Delivers]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall deliver the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-ANN-Document-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Delivers]--> Document",
    "Template": "<subject_id> (<subject_class>) shall deliver the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-ANN-Record",
    "Trigger": "Safety&AI: ANN --[Delivers]--> Record",
    "Template": "Engineering team shall deliver the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-ANN-Record-COND",
    "Trigger": "Safety&AI: ANN --[Delivers]--> Record",
    "Template": "When <condition>, Engineering team shall deliver the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-ANN-Record-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Delivers]--> Record",
    "Template": "When <condition>, Engineering team shall deliver the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-ANN-Record-CONST",
    "Trigger": "Safety&AI: ANN --[Delivers]--> Record",
    "Template": "Engineering team shall deliver the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-ANN-Record-ROLE",
    "Trigger": "Safety&AI: ANN --[Delivers]--> Record",
    "Template": "<subject_id> (<subject_class>) shall deliver the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-ANN-Record-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Delivers]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall deliver the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-ANN-Record-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Delivers]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall deliver the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-ANN-Record-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Delivers]--> Record",
    "Template": "<subject_id> (<subject_class>) shall deliver the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-Data_acquisition-Document",
    "Trigger": "Safety&AI: Data acquisition --[Delivers]--> Document",
    "Template": "Engineering team shall deliver the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-Data_acquisition-Document-COND",
    "Trigger": "Safety&AI: Data acquisition --[Delivers]--> Document",
    "Template": "When <condition>, Engineering team shall deliver the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-Data_acquisition-Document-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Delivers]--> Document",
    "Template": "When <condition>, Engineering team shall deliver the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-Data_acquisition-Document-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Delivers]--> Document",
    "Template": "Engineering team shall deliver the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-Data_acquisition-Document-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Delivers]--> Document",
    "Template": "<subject_id> (<subject_class>) shall deliver the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-Data_acquisition-Document-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Delivers]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall deliver the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-Data_acquisition-Document-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Delivers]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall deliver the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-Data_acquisition-Document-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Delivers]--> Document",
    "Template": "<subject_id> (<subject_class>) shall deliver the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-Data_acquisition-Record",
    "Trigger": "Safety&AI: Data acquisition --[Delivers]--> Record",
    "Template": "Engineering team shall deliver the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-Data_acquisition-Record-COND",
    "Trigger": "Safety&AI: Data acquisition --[Delivers]--> Record",
    "Template": "When <condition>, Engineering team shall deliver the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-Data_acquisition-Record-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Delivers]--> Record",
    "Template": "When <condition>, Engineering team shall deliver the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-Data_acquisition-Record-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Delivers]--> Record",
    "Template": "Engineering team shall deliver the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-Data_acquisition-Record-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Delivers]--> Record",
    "Template": "<subject_id> (<subject_class>) shall deliver the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-Data_acquisition-Record-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Delivers]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall deliver the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-Data_acquisition-Record-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Delivers]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall deliver the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-delivers-Data_acquisition-Record-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Delivers]--> Record",
    "Template": "<subject_id> (<subject_class>) shall deliver the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-derived_from-AI_Database-Work_Product",
    "Trigger": "Safety&AI: AI Database --[Derived from]--> Work Product",
    "Template": "Engineering team shall be derived from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-derived_from-AI_Database-Work_Product-COND",
    "Trigger": "Safety&AI: AI Database --[Derived from]--> Work Product",
    "Template": "When <condition>, Engineering team shall be derived from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-derived_from-AI_Database-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Derived from]--> Work Product",
    "Template": "When <condition>, Engineering team shall be derived from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-derived_from-AI_Database-Work_Product-CONST",
    "Trigger": "Safety&AI: AI Database --[Derived from]--> Work Product",
    "Template": "Engineering team shall be derived from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-derived_from-AI_Database-Work_Product-ROLE",
    "Trigger": "Safety&AI: AI Database --[Derived from]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be derived from the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-derived_from-AI_Database-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Derived from]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be derived from the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-derived_from-AI_Database-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Derived from]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be derived from the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-derived_from-AI_Database-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Derived from]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be derived from the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-derived_from-ANN-Work_Product",
    "Trigger": "Safety&AI: ANN --[Derived from]--> Work Product",
    "Template": "Engineering team shall be derived from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-derived_from-ANN-Work_Product-COND",
    "Trigger": "Safety&AI: ANN --[Derived from]--> Work Product",
    "Template": "When <condition>, Engineering team shall be derived from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-derived_from-ANN-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Derived from]--> Work Product",
    "Template": "When <condition>, Engineering team shall be derived from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-derived_from-ANN-Work_Product-CONST",
    "Trigger": "Safety&AI: ANN --[Derived from]--> Work Product",
    "Template": "Engineering team shall be derived from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-derived_from-ANN-Work_Product-ROLE",
    "Trigger": "Safety&AI: ANN --[Derived from]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be derived from the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-derived_from-ANN-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Derived from]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be derived from the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-derived_from-ANN-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Derived from]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be derived from the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-derived_from-ANN-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Derived from]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be derived from the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-derived_from-Data_acquisition-Work_Product",
    "Trigger": "Safety&AI: Data acquisition --[Derived from]--> Work Product",
    "Template": "Engineering team shall be derived from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-derived_from-Data_acquisition-Work_Product-COND",
    "Trigger": "Safety&AI: Data acquisition --[Derived from]--> Work Product",
    "Template": "When <condition>, Engineering team shall be derived from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-derived_from-Data_acquisition-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Derived from]--> Work Product",
    "Template": "When <condition>, Engineering team shall be derived from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-derived_from-Data_acquisition-Work_Product-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Derived from]--> Work Product",
    "Template": "Engineering team shall be derived from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-derived_from-Data_acquisition-Work_Product-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Derived from]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be derived from the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-derived_from-Data_acquisition-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Derived from]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be derived from the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-derived_from-Data_acquisition-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Derived from]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be derived from the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-derived_from-Data_acquisition-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Derived from]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be derived from the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-AI_Database-Procedure",
    "Trigger": "Safety&AI: AI Database --[Executes]--> Procedure",
    "Template": "Engineering team shall execute the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-AI_Database-Procedure-COND",
    "Trigger": "Safety&AI: AI Database --[Executes]--> Procedure",
    "Template": "When <condition>, Engineering team shall execute the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-AI_Database-Procedure-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Executes]--> Procedure",
    "Template": "When <condition>, Engineering team shall execute the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-AI_Database-Procedure-CONST",
    "Trigger": "Safety&AI: AI Database --[Executes]--> Procedure",
    "Template": "Engineering team shall execute the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-AI_Database-Procedure-ROLE",
    "Trigger": "Safety&AI: AI Database --[Executes]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall execute the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-AI_Database-Procedure-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Executes]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall execute the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-AI_Database-Procedure-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Executes]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall execute the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-AI_Database-Procedure-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Executes]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall execute the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-AI_Database-Process",
    "Trigger": "Safety&AI: AI Database --[Executes]--> Process",
    "Template": "Engineering team shall execute the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-AI_Database-Process-COND",
    "Trigger": "Safety&AI: AI Database --[Executes]--> Process",
    "Template": "When <condition>, Engineering team shall execute the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-AI_Database-Process-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Executes]--> Process",
    "Template": "When <condition>, Engineering team shall execute the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-AI_Database-Process-CONST",
    "Trigger": "Safety&AI: AI Database --[Executes]--> Process",
    "Template": "Engineering team shall execute the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-AI_Database-Process-ROLE",
    "Trigger": "Safety&AI: AI Database --[Executes]--> Process",
    "Template": "<subject_id> (<subject_class>) shall execute the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-AI_Database-Process-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Executes]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall execute the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-AI_Database-Process-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Executes]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall execute the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-AI_Database-Process-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Executes]--> Process",
    "Template": "<subject_id> (<subject_class>) shall execute the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-ANN-Procedure",
    "Trigger": "Safety&AI: ANN --[Executes]--> Procedure",
    "Template": "Engineering team shall execute the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-ANN-Procedure-COND",
    "Trigger": "Safety&AI: ANN --[Executes]--> Procedure",
    "Template": "When <condition>, Engineering team shall execute the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-ANN-Procedure-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Executes]--> Procedure",
    "Template": "When <condition>, Engineering team shall execute the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-ANN-Procedure-CONST",
    "Trigger": "Safety&AI: ANN --[Executes]--> Procedure",
    "Template": "Engineering team shall execute the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-ANN-Procedure-ROLE",
    "Trigger": "Safety&AI: ANN --[Executes]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall execute the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-ANN-Procedure-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Executes]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall execute the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-ANN-Procedure-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Executes]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall execute the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-ANN-Procedure-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Executes]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall execute the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-ANN-Process",
    "Trigger": "Safety&AI: ANN --[Executes]--> Process",
    "Template": "Engineering team shall execute the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-ANN-Process-COND",
    "Trigger": "Safety&AI: ANN --[Executes]--> Process",
    "Template": "When <condition>, Engineering team shall execute the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-ANN-Process-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Executes]--> Process",
    "Template": "When <condition>, Engineering team shall execute the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-ANN-Process-CONST",
    "Trigger": "Safety&AI: ANN --[Executes]--> Process",
    "Template": "Engineering team shall execute the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-ANN-Process-ROLE",
    "Trigger": "Safety&AI: ANN --[Executes]--> Process",
    "Template": "<subject_id> (<subject_class>) shall execute the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-ANN-Process-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Executes]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall execute the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-ANN-Process-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Executes]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall execute the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-ANN-Process-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Executes]--> Process",
    "Template": "<subject_id> (<subject_class>) shall execute the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-Data_acquisition-Procedure",
    "Trigger": "Safety&AI: Data acquisition --[Executes]--> Procedure",
    "Template": "Engineering team shall execute the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-Data_acquisition-Procedure-COND",
    "Trigger": "Safety&AI: Data acquisition --[Executes]--> Procedure",
    "Template": "When <condition>, Engineering team shall execute the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-Data_acquisition-Procedure-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Executes]--> Procedure",
    "Template": "When <condition>, Engineering team shall execute the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-Data_acquisition-Procedure-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Executes]--> Procedure",
    "Template": "Engineering team shall execute the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-Data_acquisition-Procedure-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Executes]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall execute the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-Data_acquisition-Procedure-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Executes]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall execute the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-Data_acquisition-Procedure-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Executes]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall execute the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-Data_acquisition-Procedure-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Executes]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall execute the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-Data_acquisition-Process",
    "Trigger": "Safety&AI: Data acquisition --[Executes]--> Process",
    "Template": "Engineering team shall execute the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-Data_acquisition-Process-COND",
    "Trigger": "Safety&AI: Data acquisition --[Executes]--> Process",
    "Template": "When <condition>, Engineering team shall execute the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-Data_acquisition-Process-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Executes]--> Process",
    "Template": "When <condition>, Engineering team shall execute the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-Data_acquisition-Process-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Executes]--> Process",
    "Template": "Engineering team shall execute the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-Data_acquisition-Process-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Executes]--> Process",
    "Template": "<subject_id> (<subject_class>) shall execute the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-Data_acquisition-Process-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Executes]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall execute the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-Data_acquisition-Process-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Executes]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall execute the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-executes-Data_acquisition-Process-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Executes]--> Process",
    "Template": "<subject_id> (<subject_class>) shall execute the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-AI_Database-Policy",
    "Trigger": "Safety&AI: AI Database --[Extend]--> Policy",
    "Template": "Engineering team shall extend the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-AI_Database-Policy-COND",
    "Trigger": "Safety&AI: AI Database --[Extend]--> Policy",
    "Template": "When <condition>, Engineering team shall extend the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-AI_Database-Policy-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Extend]--> Policy",
    "Template": "When <condition>, Engineering team shall extend the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-AI_Database-Policy-CONST",
    "Trigger": "Safety&AI: AI Database --[Extend]--> Policy",
    "Template": "Engineering team shall extend the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-AI_Database-Policy-ROLE",
    "Trigger": "Safety&AI: AI Database --[Extend]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-AI_Database-Policy-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Extend]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-AI_Database-Policy-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Extend]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-AI_Database-Policy-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Extend]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-AI_Database-Standard",
    "Trigger": "Safety&AI: AI Database --[Extend]--> Standard",
    "Template": "Engineering team shall extend the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-AI_Database-Standard-COND",
    "Trigger": "Safety&AI: AI Database --[Extend]--> Standard",
    "Template": "When <condition>, Engineering team shall extend the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-AI_Database-Standard-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Extend]--> Standard",
    "Template": "When <condition>, Engineering team shall extend the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-AI_Database-Standard-CONST",
    "Trigger": "Safety&AI: AI Database --[Extend]--> Standard",
    "Template": "Engineering team shall extend the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-AI_Database-Standard-ROLE",
    "Trigger": "Safety&AI: AI Database --[Extend]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-AI_Database-Standard-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Extend]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-AI_Database-Standard-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Extend]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-AI_Database-Standard-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Extend]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-ANN-Policy",
    "Trigger": "Safety&AI: ANN --[Extend]--> Policy",
    "Template": "Engineering team shall extend the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-ANN-Policy-COND",
    "Trigger": "Safety&AI: ANN --[Extend]--> Policy",
    "Template": "When <condition>, Engineering team shall extend the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-ANN-Policy-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Extend]--> Policy",
    "Template": "When <condition>, Engineering team shall extend the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-ANN-Policy-CONST",
    "Trigger": "Safety&AI: ANN --[Extend]--> Policy",
    "Template": "Engineering team shall extend the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-ANN-Policy-ROLE",
    "Trigger": "Safety&AI: ANN --[Extend]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-ANN-Policy-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Extend]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-ANN-Policy-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Extend]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-ANN-Policy-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Extend]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-ANN-Standard",
    "Trigger": "Safety&AI: ANN --[Extend]--> Standard",
    "Template": "Engineering team shall extend the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-ANN-Standard-COND",
    "Trigger": "Safety&AI: ANN --[Extend]--> Standard",
    "Template": "When <condition>, Engineering team shall extend the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-ANN-Standard-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Extend]--> Standard",
    "Template": "When <condition>, Engineering team shall extend the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-ANN-Standard-CONST",
    "Trigger": "Safety&AI: ANN --[Extend]--> Standard",
    "Template": "Engineering team shall extend the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-ANN-Standard-ROLE",
    "Trigger": "Safety&AI: ANN --[Extend]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-ANN-Standard-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Extend]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-ANN-Standard-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Extend]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-ANN-Standard-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Extend]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-Data_acquisition-Policy",
    "Trigger": "Safety&AI: Data acquisition --[Extend]--> Policy",
    "Template": "Engineering team shall extend the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-Data_acquisition-Policy-COND",
    "Trigger": "Safety&AI: Data acquisition --[Extend]--> Policy",
    "Template": "When <condition>, Engineering team shall extend the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-Data_acquisition-Policy-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Extend]--> Policy",
    "Template": "When <condition>, Engineering team shall extend the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-Data_acquisition-Policy-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Extend]--> Policy",
    "Template": "Engineering team shall extend the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-Data_acquisition-Policy-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Extend]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-Data_acquisition-Policy-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Extend]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-Data_acquisition-Policy-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Extend]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-Data_acquisition-Policy-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Extend]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-Data_acquisition-Standard",
    "Trigger": "Safety&AI: Data acquisition --[Extend]--> Standard",
    "Template": "Engineering team shall extend the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-Data_acquisition-Standard-COND",
    "Trigger": "Safety&AI: Data acquisition --[Extend]--> Standard",
    "Template": "When <condition>, Engineering team shall extend the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-Data_acquisition-Standard-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Extend]--> Standard",
    "Template": "When <condition>, Engineering team shall extend the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-Data_acquisition-Standard-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Extend]--> Standard",
    "Template": "Engineering team shall extend the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-Data_acquisition-Standard-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Extend]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-Data_acquisition-Standard-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Extend]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-Data_acquisition-Standard-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Extend]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-extend-Data_acquisition-Standard-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Extend]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall extend the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Data_acquisition",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Data acquisition",
    "Template": "Engineering team shall collect field data from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Data_acquisition-COND",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall collect field data from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Data_acquisition-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall collect field data from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Data_acquisition-CONST",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Data acquisition",
    "Template": "Engineering team shall collect field data from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Data_acquisition-ROLE",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Data acquisition",
    "Template": "<subject_id> (<subject_class>) shall collect field data from the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Data_acquisition-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Data acquisition",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall collect field data from the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Data_acquisition-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Data acquisition",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall collect field data from the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Data_acquisition-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Data acquisition",
    "Template": "<subject_id> (<subject_class>) shall collect field data from the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Task",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Task",
    "Template": "Engineering team shall collect field data from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Task-COND",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Task",
    "Template": "When <condition>, Engineering team shall collect field data from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Task-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Task",
    "Template": "When <condition>, Engineering team shall collect field data from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Task-CONST",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Task",
    "Template": "Engineering team shall collect field data from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Task-ROLE",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Task",
    "Template": "<subject_id> (<subject_class>) shall collect field data from the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Task-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Task",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall collect field data from the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Task-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Task",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall collect field data from the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Task-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Task",
    "Template": "<subject_id> (<subject_class>) shall collect field data from the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_risk_evaluation-AI_Database-Data_acquisition",
    "Trigger": "Safety&AI: AI Database --[Field risk evaluation]--> Data acquisition",
    "Template": "Engineering team shall evaluate field risk the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_risk_evaluation-AI_Database-Data_acquisition-COND",
    "Trigger": "Safety&AI: AI Database --[Field risk evaluation]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall evaluate field risk the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_risk_evaluation-AI_Database-Data_acquisition-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Field risk evaluation]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall evaluate field risk the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_risk_evaluation-AI_Database-Data_acquisition-CONST",
    "Trigger": "Safety&AI: AI Database --[Field risk evaluation]--> Data acquisition",
    "Template": "Engineering team shall evaluate field risk the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_risk_evaluation-AI_Database-Data_acquisition-ROLE",
    "Trigger": "Safety&AI: AI Database --[Field risk evaluation]--> Data acquisition",
    "Template": "<subject_id> (<subject_class>) shall evaluate field risk the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_risk_evaluation-AI_Database-Data_acquisition-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Field risk evaluation]--> Data acquisition",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall evaluate field risk the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_risk_evaluation-AI_Database-Data_acquisition-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Field risk evaluation]--> Data acquisition",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall evaluate field risk the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_risk_evaluation-AI_Database-Data_acquisition-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Field risk evaluation]--> Data acquisition",
    "Template": "<subject_id> (<subject_class>) shall evaluate field risk the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-AI_Database",
    "Trigger": "Safety&AI: AI Database --[Flow]--> AI Database",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-AI_Database-COND",
    "Trigger": "Safety&AI: AI Database --[Flow]--> AI Database",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-AI_Database-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> AI Database",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-AI_Database-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> AI Database",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-AI_Database-ROLE",
    "Trigger": "Safety&AI: AI Database --[Flow]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-AI_Database-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Flow]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-AI_Database-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-AI_Database-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-ANN",
    "Trigger": "Safety&AI: AI Database --[Flow]--> ANN",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-ANN-COND",
    "Trigger": "Safety&AI: AI Database --[Flow]--> ANN",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-ANN-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> ANN",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-ANN-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> ANN",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-ANN-ROLE",
    "Trigger": "Safety&AI: AI Database --[Flow]--> ANN",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-ANN-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Flow]--> ANN",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-ANN-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> ANN",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-ANN-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> ANN",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Action",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Action",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Action-COND",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Action",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Action-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Action",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Action-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Action",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Action-ROLE",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Action",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Action-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Action",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Action-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Action",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Action-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Action",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Data_acquisition",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Data acquisition",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Data_acquisition-COND",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Data_acquisition-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Data_acquisition-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Data acquisition",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Data_acquisition-ROLE",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Data acquisition",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Data_acquisition-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Data acquisition",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Data_acquisition-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Data acquisition",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Data_acquisition-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Data acquisition",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Decision",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Decision",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Decision-COND",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Decision",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Decision-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Decision",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Decision-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Decision",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Decision-ROLE",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Decision",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Decision-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Decision",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Decision-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Decision",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Decision-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Decision",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Final",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Final",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Final-COND",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Final",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Final-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Final",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Final-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Final",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Final-ROLE",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Final",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Final-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Final",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Final-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Final",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Final-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Final",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Lifecycle_Phase",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Lifecycle Phase",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Lifecycle_Phase-COND",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Lifecycle_Phase-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Lifecycle_Phase-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Lifecycle Phase",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Lifecycle_Phase-ROLE",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Lifecycle Phase",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Lifecycle_Phase-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Lifecycle Phase",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Lifecycle_Phase-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Lifecycle Phase",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Lifecycle_Phase-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Lifecycle Phase",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Merge",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Merge",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Merge-COND",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Merge",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Merge-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Merge",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Merge-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Merge",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Merge-ROLE",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Merge",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Merge-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Merge",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Merge-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Merge",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-AI_Database-Merge-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Flow]--> Merge",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-AI_Database",
    "Trigger": "Safety&AI: ANN --[Flow]--> AI Database",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-AI_Database-COND",
    "Trigger": "Safety&AI: ANN --[Flow]--> AI Database",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-AI_Database-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> AI Database",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-AI_Database-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> AI Database",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-AI_Database-ROLE",
    "Trigger": "Safety&AI: ANN --[Flow]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-AI_Database-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Flow]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-AI_Database-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-AI_Database-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-ANN",
    "Trigger": "Safety&AI: ANN --[Flow]--> ANN",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-ANN-COND",
    "Trigger": "Safety&AI: ANN --[Flow]--> ANN",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-ANN-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> ANN",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-ANN-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> ANN",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-ANN-ROLE",
    "Trigger": "Safety&AI: ANN --[Flow]--> ANN",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-ANN-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Flow]--> ANN",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-ANN-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> ANN",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-ANN-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> ANN",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Action",
    "Trigger": "Safety&AI: ANN --[Flow]--> Action",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Action-COND",
    "Trigger": "Safety&AI: ANN --[Flow]--> Action",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Action-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> Action",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Action-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> Action",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Action-ROLE",
    "Trigger": "Safety&AI: ANN --[Flow]--> Action",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Action-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Flow]--> Action",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Action-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> Action",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Action-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> Action",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Data_acquisition",
    "Trigger": "Safety&AI: ANN --[Flow]--> Data acquisition",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Data_acquisition-COND",
    "Trigger": "Safety&AI: ANN --[Flow]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Data_acquisition-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Data_acquisition-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> Data acquisition",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Data_acquisition-ROLE",
    "Trigger": "Safety&AI: ANN --[Flow]--> Data acquisition",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Data_acquisition-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Flow]--> Data acquisition",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Data_acquisition-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> Data acquisition",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Data_acquisition-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> Data acquisition",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Decision",
    "Trigger": "Safety&AI: ANN --[Flow]--> Decision",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Decision-COND",
    "Trigger": "Safety&AI: ANN --[Flow]--> Decision",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Decision-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> Decision",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Decision-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> Decision",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Decision-ROLE",
    "Trigger": "Safety&AI: ANN --[Flow]--> Decision",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Decision-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Flow]--> Decision",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Decision-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> Decision",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Decision-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> Decision",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Final",
    "Trigger": "Safety&AI: ANN --[Flow]--> Final",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Final-COND",
    "Trigger": "Safety&AI: ANN --[Flow]--> Final",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Final-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> Final",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Final-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> Final",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Final-ROLE",
    "Trigger": "Safety&AI: ANN --[Flow]--> Final",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Final-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Flow]--> Final",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Final-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> Final",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Final-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> Final",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Lifecycle_Phase",
    "Trigger": "Safety&AI: ANN --[Flow]--> Lifecycle Phase",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Lifecycle_Phase-COND",
    "Trigger": "Safety&AI: ANN --[Flow]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Lifecycle_Phase-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Lifecycle_Phase-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> Lifecycle Phase",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Lifecycle_Phase-ROLE",
    "Trigger": "Safety&AI: ANN --[Flow]--> Lifecycle Phase",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Lifecycle_Phase-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Flow]--> Lifecycle Phase",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Lifecycle_Phase-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> Lifecycle Phase",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Lifecycle_Phase-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> Lifecycle Phase",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Merge",
    "Trigger": "Safety&AI: ANN --[Flow]--> Merge",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Merge-COND",
    "Trigger": "Safety&AI: ANN --[Flow]--> Merge",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Merge-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> Merge",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Merge-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> Merge",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Merge-ROLE",
    "Trigger": "Safety&AI: ANN --[Flow]--> Merge",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Merge-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Flow]--> Merge",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Merge-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> Merge",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-ANN-Merge-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Flow]--> Merge",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Action-AI_Database",
    "Trigger": "Safety&AI: Action --[Flow]--> AI Database",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Action-AI_Database-COND",
    "Trigger": "Safety&AI: Action --[Flow]--> AI Database",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Action-AI_Database-COND-CONST",
    "Trigger": "Safety&AI: Action --[Flow]--> AI Database",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Action-AI_Database-CONST",
    "Trigger": "Safety&AI: Action --[Flow]--> AI Database",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Action-AI_Database-ROLE",
    "Trigger": "Safety&AI: Action --[Flow]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Action-AI_Database-ROLE-COND",
    "Trigger": "Safety&AI: Action --[Flow]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Action-AI_Database-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Action --[Flow]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Action-AI_Database-ROLE-CONST",
    "Trigger": "Safety&AI: Action --[Flow]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Action-ANN",
    "Trigger": "Safety&AI: Action --[Flow]--> ANN",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Action-ANN-COND",
    "Trigger": "Safety&AI: Action --[Flow]--> ANN",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Action-ANN-COND-CONST",
    "Trigger": "Safety&AI: Action --[Flow]--> ANN",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Action-ANN-CONST",
    "Trigger": "Safety&AI: Action --[Flow]--> ANN",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Action-ANN-ROLE",
    "Trigger": "Safety&AI: Action --[Flow]--> ANN",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Action-ANN-ROLE-COND",
    "Trigger": "Safety&AI: Action --[Flow]--> ANN",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Action-ANN-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Action --[Flow]--> ANN",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Action-ANN-ROLE-CONST",
    "Trigger": "Safety&AI: Action --[Flow]--> ANN",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Action-Data_acquisition",
    "Trigger": "Safety&AI: Action --[Flow]--> Data acquisition",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Action-Data_acquisition-COND",
    "Trigger": "Safety&AI: Action --[Flow]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Action-Data_acquisition-COND-CONST",
    "Trigger": "Safety&AI: Action --[Flow]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Action-Data_acquisition-CONST",
    "Trigger": "Safety&AI: Action --[Flow]--> Data acquisition",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Action-Data_acquisition-ROLE",
    "Trigger": "Safety&AI: Action --[Flow]--> Data acquisition",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Action-Data_acquisition-ROLE-COND",
    "Trigger": "Safety&AI: Action --[Flow]--> Data acquisition",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Action-Data_acquisition-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Action --[Flow]--> Data acquisition",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Action-Data_acquisition-ROLE-CONST",
    "Trigger": "Safety&AI: Action --[Flow]--> Data acquisition",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-AI_Database",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> AI Database",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-AI_Database-COND",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> AI Database",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-AI_Database-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> AI Database",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-AI_Database-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> AI Database",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-AI_Database-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-AI_Database-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-AI_Database-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-AI_Database-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-ANN",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> ANN",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-ANN-COND",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> ANN",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-ANN-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> ANN",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-ANN-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> ANN",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-ANN-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> ANN",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-ANN-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> ANN",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-ANN-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> ANN",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-ANN-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> ANN",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Action",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Action",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Action-COND",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Action",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Action-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Action",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Action-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Action",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Action-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Action",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Action-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Action",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Action-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Action",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Action-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Action",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Data_acquisition",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Data acquisition",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Data_acquisition-COND",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Data_acquisition-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Data_acquisition-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Data acquisition",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Data_acquisition-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Data acquisition",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Data_acquisition-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Data acquisition",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Data_acquisition-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Data acquisition",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Data_acquisition-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Data acquisition",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Decision",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Decision",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Decision-COND",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Decision",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Decision-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Decision",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Decision-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Decision",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Decision-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Decision",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Decision-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Decision",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Decision-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Decision",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Decision-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Decision",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Final",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Final",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Final-COND",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Final",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Final-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Final",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Final-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Final",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Final-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Final",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Final-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Final",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Final-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Final",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Final-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Final",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Lifecycle_Phase",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Lifecycle Phase",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Lifecycle_Phase-COND",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Lifecycle_Phase-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Lifecycle_Phase-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Lifecycle Phase",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Lifecycle_Phase-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Lifecycle Phase",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Lifecycle_Phase-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Lifecycle Phase",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Lifecycle_Phase-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Lifecycle Phase",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Lifecycle_Phase-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Lifecycle Phase",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Merge",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Merge",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Merge-COND",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Merge",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Merge-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Merge",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Merge-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Merge",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Merge-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Merge",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Merge-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Merge",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Merge-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Merge",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Data_acquisition-Merge-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Flow]--> Merge",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Decision-AI_Database",
    "Trigger": "Safety&AI: Decision --[Flow]--> AI Database",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Decision-AI_Database-COND",
    "Trigger": "Safety&AI: Decision --[Flow]--> AI Database",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Decision-AI_Database-COND-CONST",
    "Trigger": "Safety&AI: Decision --[Flow]--> AI Database",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Decision-AI_Database-CONST",
    "Trigger": "Safety&AI: Decision --[Flow]--> AI Database",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Decision-AI_Database-ROLE",
    "Trigger": "Safety&AI: Decision --[Flow]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Decision-AI_Database-ROLE-COND",
    "Trigger": "Safety&AI: Decision --[Flow]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Decision-AI_Database-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Decision --[Flow]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Decision-AI_Database-ROLE-CONST",
    "Trigger": "Safety&AI: Decision --[Flow]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Decision-ANN",
    "Trigger": "Safety&AI: Decision --[Flow]--> ANN",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Decision-ANN-COND",
    "Trigger": "Safety&AI: Decision --[Flow]--> ANN",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Decision-ANN-COND-CONST",
    "Trigger": "Safety&AI: Decision --[Flow]--> ANN",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Decision-ANN-CONST",
    "Trigger": "Safety&AI: Decision --[Flow]--> ANN",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Decision-ANN-ROLE",
    "Trigger": "Safety&AI: Decision --[Flow]--> ANN",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Decision-ANN-ROLE-COND",
    "Trigger": "Safety&AI: Decision --[Flow]--> ANN",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Decision-ANN-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Decision --[Flow]--> ANN",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Decision-ANN-ROLE-CONST",
    "Trigger": "Safety&AI: Decision --[Flow]--> ANN",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Decision-Data_acquisition",
    "Trigger": "Safety&AI: Decision --[Flow]--> Data acquisition",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Decision-Data_acquisition-COND",
    "Trigger": "Safety&AI: Decision --[Flow]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Decision-Data_acquisition-COND-CONST",
    "Trigger": "Safety&AI: Decision --[Flow]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Decision-Data_acquisition-CONST",
    "Trigger": "Safety&AI: Decision --[Flow]--> Data acquisition",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Decision-Data_acquisition-ROLE",
    "Trigger": "Safety&AI: Decision --[Flow]--> Data acquisition",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Decision-Data_acquisition-ROLE-COND",
    "Trigger": "Safety&AI: Decision --[Flow]--> Data acquisition",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Decision-Data_acquisition-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Decision --[Flow]--> Data acquisition",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Decision-Data_acquisition-ROLE-CONST",
    "Trigger": "Safety&AI: Decision --[Flow]--> Data acquisition",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Initial-AI_Database",
    "Trigger": "Safety&AI: Initial --[Flow]--> AI Database",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Initial-AI_Database-COND",
    "Trigger": "Safety&AI: Initial --[Flow]--> AI Database",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Initial-AI_Database-COND-CONST",
    "Trigger": "Safety&AI: Initial --[Flow]--> AI Database",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Initial-AI_Database-CONST",
    "Trigger": "Safety&AI: Initial --[Flow]--> AI Database",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Initial-AI_Database-ROLE",
    "Trigger": "Safety&AI: Initial --[Flow]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Initial-AI_Database-ROLE-COND",
    "Trigger": "Safety&AI: Initial --[Flow]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Initial-AI_Database-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Initial --[Flow]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Initial-AI_Database-ROLE-CONST",
    "Trigger": "Safety&AI: Initial --[Flow]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Initial-ANN",
    "Trigger": "Safety&AI: Initial --[Flow]--> ANN",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Initial-ANN-COND",
    "Trigger": "Safety&AI: Initial --[Flow]--> ANN",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Initial-ANN-COND-CONST",
    "Trigger": "Safety&AI: Initial --[Flow]--> ANN",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Initial-ANN-CONST",
    "Trigger": "Safety&AI: Initial --[Flow]--> ANN",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Initial-ANN-ROLE",
    "Trigger": "Safety&AI: Initial --[Flow]--> ANN",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Initial-ANN-ROLE-COND",
    "Trigger": "Safety&AI: Initial --[Flow]--> ANN",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Initial-ANN-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Initial --[Flow]--> ANN",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Initial-ANN-ROLE-CONST",
    "Trigger": "Safety&AI: Initial --[Flow]--> ANN",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Initial-Data_acquisition",
    "Trigger": "Safety&AI: Initial --[Flow]--> Data acquisition",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Initial-Data_acquisition-COND",
    "Trigger": "Safety&AI: Initial --[Flow]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Initial-Data_acquisition-COND-CONST",
    "Trigger": "Safety&AI: Initial --[Flow]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Initial-Data_acquisition-CONST",
    "Trigger": "Safety&AI: Initial --[Flow]--> Data acquisition",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Initial-Data_acquisition-ROLE",
    "Trigger": "Safety&AI: Initial --[Flow]--> Data acquisition",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Initial-Data_acquisition-ROLE-COND",
    "Trigger": "Safety&AI: Initial --[Flow]--> Data acquisition",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Initial-Data_acquisition-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Initial --[Flow]--> Data acquisition",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Initial-Data_acquisition-ROLE-CONST",
    "Trigger": "Safety&AI: Initial --[Flow]--> Data acquisition",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Lifecycle_Phase-AI_Database",
    "Trigger": "Safety&AI: Lifecycle Phase --[Flow]--> AI Database",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Lifecycle_Phase-AI_Database-COND",
    "Trigger": "Safety&AI: Lifecycle Phase --[Flow]--> AI Database",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Lifecycle_Phase-AI_Database-COND-CONST",
    "Trigger": "Safety&AI: Lifecycle Phase --[Flow]--> AI Database",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Lifecycle_Phase-AI_Database-CONST",
    "Trigger": "Safety&AI: Lifecycle Phase --[Flow]--> AI Database",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Lifecycle_Phase-AI_Database-ROLE",
    "Trigger": "Safety&AI: Lifecycle Phase --[Flow]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Lifecycle_Phase-AI_Database-ROLE-COND",
    "Trigger": "Safety&AI: Lifecycle Phase --[Flow]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Lifecycle_Phase-AI_Database-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Lifecycle Phase --[Flow]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Lifecycle_Phase-AI_Database-ROLE-CONST",
    "Trigger": "Safety&AI: Lifecycle Phase --[Flow]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Lifecycle_Phase-ANN",
    "Trigger": "Safety&AI: Lifecycle Phase --[Flow]--> ANN",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Lifecycle_Phase-ANN-COND",
    "Trigger": "Safety&AI: Lifecycle Phase --[Flow]--> ANN",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Lifecycle_Phase-ANN-COND-CONST",
    "Trigger": "Safety&AI: Lifecycle Phase --[Flow]--> ANN",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Lifecycle_Phase-ANN-CONST",
    "Trigger": "Safety&AI: Lifecycle Phase --[Flow]--> ANN",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Lifecycle_Phase-ANN-ROLE",
    "Trigger": "Safety&AI: Lifecycle Phase --[Flow]--> ANN",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Lifecycle_Phase-ANN-ROLE-COND",
    "Trigger": "Safety&AI: Lifecycle Phase --[Flow]--> ANN",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Lifecycle_Phase-ANN-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Lifecycle Phase --[Flow]--> ANN",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Lifecycle_Phase-ANN-ROLE-CONST",
    "Trigger": "Safety&AI: Lifecycle Phase --[Flow]--> ANN",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Lifecycle_Phase-Data_acquisition",
    "Trigger": "Safety&AI: Lifecycle Phase --[Flow]--> Data acquisition",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Lifecycle_Phase-Data_acquisition-COND",
    "Trigger": "Safety&AI: Lifecycle Phase --[Flow]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Lifecycle_Phase-Data_acquisition-COND-CONST",
    "Trigger": "Safety&AI: Lifecycle Phase --[Flow]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Lifecycle_Phase-Data_acquisition-CONST",
    "Trigger": "Safety&AI: Lifecycle Phase --[Flow]--> Data acquisition",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Lifecycle_Phase-Data_acquisition-ROLE",
    "Trigger": "Safety&AI: Lifecycle Phase --[Flow]--> Data acquisition",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Lifecycle_Phase-Data_acquisition-ROLE-COND",
    "Trigger": "Safety&AI: Lifecycle Phase --[Flow]--> Data acquisition",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Lifecycle_Phase-Data_acquisition-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Lifecycle Phase --[Flow]--> Data acquisition",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Lifecycle_Phase-Data_acquisition-ROLE-CONST",
    "Trigger": "Safety&AI: Lifecycle Phase --[Flow]--> Data acquisition",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Merge-AI_Database",
    "Trigger": "Safety&AI: Merge --[Flow]--> AI Database",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Merge-AI_Database-COND",
    "Trigger": "Safety&AI: Merge --[Flow]--> AI Database",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Merge-AI_Database-COND-CONST",
    "Trigger": "Safety&AI: Merge --[Flow]--> AI Database",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Merge-AI_Database-CONST",
    "Trigger": "Safety&AI: Merge --[Flow]--> AI Database",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Merge-AI_Database-ROLE",
    "Trigger": "Safety&AI: Merge --[Flow]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Merge-AI_Database-ROLE-COND",
    "Trigger": "Safety&AI: Merge --[Flow]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Merge-AI_Database-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Merge --[Flow]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Merge-AI_Database-ROLE-CONST",
    "Trigger": "Safety&AI: Merge --[Flow]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Merge-ANN",
    "Trigger": "Safety&AI: Merge --[Flow]--> ANN",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Merge-ANN-COND",
    "Trigger": "Safety&AI: Merge --[Flow]--> ANN",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Merge-ANN-COND-CONST",
    "Trigger": "Safety&AI: Merge --[Flow]--> ANN",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Merge-ANN-CONST",
    "Trigger": "Safety&AI: Merge --[Flow]--> ANN",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Merge-ANN-ROLE",
    "Trigger": "Safety&AI: Merge --[Flow]--> ANN",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Merge-ANN-ROLE-COND",
    "Trigger": "Safety&AI: Merge --[Flow]--> ANN",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Merge-ANN-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Merge --[Flow]--> ANN",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Merge-ANN-ROLE-CONST",
    "Trigger": "Safety&AI: Merge --[Flow]--> ANN",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Merge-Data_acquisition",
    "Trigger": "Safety&AI: Merge --[Flow]--> Data acquisition",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Merge-Data_acquisition-COND",
    "Trigger": "Safety&AI: Merge --[Flow]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Merge-Data_acquisition-COND-CONST",
    "Trigger": "Safety&AI: Merge --[Flow]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Merge-Data_acquisition-CONST",
    "Trigger": "Safety&AI: Merge --[Flow]--> Data acquisition",
    "Template": "Engineering team shall flow the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Merge-Data_acquisition-ROLE",
    "Trigger": "Safety&AI: Merge --[Flow]--> Data acquisition",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Merge-Data_acquisition-ROLE-COND",
    "Trigger": "Safety&AI: Merge --[Flow]--> Data acquisition",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Merge-Data_acquisition-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Merge --[Flow]--> Data acquisition",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-flow-Merge-Data_acquisition-ROLE-CONST",
    "Trigger": "Safety&AI: Merge --[Flow]--> Data acquisition",
    "Template": "<subject_id> (<subject_class>) shall flow the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-AI_Database-Policy",
    "Trigger": "Safety&AI: AI Database --[Generalize]--> Policy",
    "Template": "Engineering team shall generalize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-AI_Database-Policy-COND",
    "Trigger": "Safety&AI: AI Database --[Generalize]--> Policy",
    "Template": "When <condition>, Engineering team shall generalize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-AI_Database-Policy-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Generalize]--> Policy",
    "Template": "When <condition>, Engineering team shall generalize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-AI_Database-Policy-CONST",
    "Trigger": "Safety&AI: AI Database --[Generalize]--> Policy",
    "Template": "Engineering team shall generalize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-AI_Database-Policy-ROLE",
    "Trigger": "Safety&AI: AI Database --[Generalize]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-AI_Database-Policy-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Generalize]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-AI_Database-Policy-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Generalize]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-AI_Database-Policy-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Generalize]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-AI_Database-Standard",
    "Trigger": "Safety&AI: AI Database --[Generalize]--> Standard",
    "Template": "Engineering team shall generalize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-AI_Database-Standard-COND",
    "Trigger": "Safety&AI: AI Database --[Generalize]--> Standard",
    "Template": "When <condition>, Engineering team shall generalize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-AI_Database-Standard-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Generalize]--> Standard",
    "Template": "When <condition>, Engineering team shall generalize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-AI_Database-Standard-CONST",
    "Trigger": "Safety&AI: AI Database --[Generalize]--> Standard",
    "Template": "Engineering team shall generalize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-AI_Database-Standard-ROLE",
    "Trigger": "Safety&AI: AI Database --[Generalize]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-AI_Database-Standard-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Generalize]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-AI_Database-Standard-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Generalize]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-AI_Database-Standard-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Generalize]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-ANN-Policy",
    "Trigger": "Safety&AI: ANN --[Generalize]--> Policy",
    "Template": "Engineering team shall generalize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-ANN-Policy-COND",
    "Trigger": "Safety&AI: ANN --[Generalize]--> Policy",
    "Template": "When <condition>, Engineering team shall generalize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-ANN-Policy-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Generalize]--> Policy",
    "Template": "When <condition>, Engineering team shall generalize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-ANN-Policy-CONST",
    "Trigger": "Safety&AI: ANN --[Generalize]--> Policy",
    "Template": "Engineering team shall generalize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-ANN-Policy-ROLE",
    "Trigger": "Safety&AI: ANN --[Generalize]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-ANN-Policy-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Generalize]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-ANN-Policy-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Generalize]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-ANN-Policy-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Generalize]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-ANN-Standard",
    "Trigger": "Safety&AI: ANN --[Generalize]--> Standard",
    "Template": "Engineering team shall generalize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-ANN-Standard-COND",
    "Trigger": "Safety&AI: ANN --[Generalize]--> Standard",
    "Template": "When <condition>, Engineering team shall generalize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-ANN-Standard-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Generalize]--> Standard",
    "Template": "When <condition>, Engineering team shall generalize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-ANN-Standard-CONST",
    "Trigger": "Safety&AI: ANN --[Generalize]--> Standard",
    "Template": "Engineering team shall generalize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-ANN-Standard-ROLE",
    "Trigger": "Safety&AI: ANN --[Generalize]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-ANN-Standard-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Generalize]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-ANN-Standard-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Generalize]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-ANN-Standard-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Generalize]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-Data_acquisition-Policy",
    "Trigger": "Safety&AI: Data acquisition --[Generalize]--> Policy",
    "Template": "Engineering team shall generalize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-Data_acquisition-Policy-COND",
    "Trigger": "Safety&AI: Data acquisition --[Generalize]--> Policy",
    "Template": "When <condition>, Engineering team shall generalize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-Data_acquisition-Policy-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Generalize]--> Policy",
    "Template": "When <condition>, Engineering team shall generalize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-Data_acquisition-Policy-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Generalize]--> Policy",
    "Template": "Engineering team shall generalize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-Data_acquisition-Policy-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Generalize]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-Data_acquisition-Policy-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Generalize]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-Data_acquisition-Policy-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Generalize]--> Policy",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-Data_acquisition-Policy-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Generalize]--> Policy",
    "Template": "<subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-Data_acquisition-Standard",
    "Trigger": "Safety&AI: Data acquisition --[Generalize]--> Standard",
    "Template": "Engineering team shall generalize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-Data_acquisition-Standard-COND",
    "Trigger": "Safety&AI: Data acquisition --[Generalize]--> Standard",
    "Template": "When <condition>, Engineering team shall generalize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-Data_acquisition-Standard-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Generalize]--> Standard",
    "Template": "When <condition>, Engineering team shall generalize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-Data_acquisition-Standard-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Generalize]--> Standard",
    "Template": "Engineering team shall generalize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-Data_acquisition-Standard-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Generalize]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-Data_acquisition-Standard-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Generalize]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-Data_acquisition-Standard-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Generalize]--> Standard",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-generalize-Data_acquisition-Standard-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Generalize]--> Standard",
    "Template": "<subject_id> (<subject_class>) shall generalize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ingestion-AI_Database-AI_Database",
    "Trigger": "Safety&AI: AI Database --[Ingestion]--> AI Database",
    "Template": "Engineering team shall ingest the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ingestion-AI_Database-AI_Database-COND",
    "Trigger": "Safety&AI: AI Database --[Ingestion]--> AI Database",
    "Template": "When <condition>, Engineering team shall ingest the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ingestion-AI_Database-AI_Database-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Ingestion]--> AI Database",
    "Template": "When <condition>, Engineering team shall ingest the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ingestion-AI_Database-AI_Database-CONST",
    "Trigger": "Safety&AI: AI Database --[Ingestion]--> AI Database",
    "Template": "Engineering team shall ingest the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ingestion-AI_Database-AI_Database-ROLE",
    "Trigger": "Safety&AI: AI Database --[Ingestion]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall ingest the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ingestion-AI_Database-AI_Database-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Ingestion]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall ingest the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ingestion-AI_Database-AI_Database-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Ingestion]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall ingest the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ingestion-AI_Database-AI_Database-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Ingestion]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall ingest the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-labeling-ANN-AI_Database",
    "Trigger": "Safety&AI: ANN --[Labeling]--> AI Database",
    "Template": "Engineering team shall label the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-labeling-ANN-AI_Database-COND",
    "Trigger": "Safety&AI: ANN --[Labeling]--> AI Database",
    "Template": "When <condition>, Engineering team shall label the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-labeling-ANN-AI_Database-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Labeling]--> AI Database",
    "Template": "When <condition>, Engineering team shall label the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-labeling-ANN-AI_Database-CONST",
    "Trigger": "Safety&AI: ANN --[Labeling]--> AI Database",
    "Template": "Engineering team shall label the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-labeling-ANN-AI_Database-ROLE",
    "Trigger": "Safety&AI: ANN --[Labeling]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall label the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-labeling-ANN-AI_Database-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Labeling]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall label the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-labeling-ANN-AI_Database-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Labeling]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall label the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-labeling-ANN-AI_Database-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Labeling]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall label the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-model_evaluation-ANN-AI_Database",
    "Trigger": "Safety&AI: ANN --[Model evaluation]--> AI Database",
    "Template": "Engineering team shall evaluate model the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-model_evaluation-ANN-AI_Database-COND",
    "Trigger": "Safety&AI: ANN --[Model evaluation]--> AI Database",
    "Template": "When <condition>, Engineering team shall evaluate model the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-model_evaluation-ANN-AI_Database-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Model evaluation]--> AI Database",
    "Template": "When <condition>, Engineering team shall evaluate model the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-model_evaluation-ANN-AI_Database-CONST",
    "Trigger": "Safety&AI: ANN --[Model evaluation]--> AI Database",
    "Template": "Engineering team shall evaluate model the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-model_evaluation-ANN-AI_Database-ROLE",
    "Trigger": "Safety&AI: ANN --[Model evaluation]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall evaluate model the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-model_evaluation-ANN-AI_Database-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Model evaluation]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall evaluate model the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-model_evaluation-ANN-AI_Database-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Model evaluation]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall evaluate model the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-model_evaluation-ANN-AI_Database-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Model evaluation]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall evaluate model the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitoring-ANN-Operation",
    "Trigger": "Safety&AI: ANN --[Monitoring]--> Operation",
    "Template": "Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitoring-ANN-Operation-COND",
    "Trigger": "Safety&AI: ANN --[Monitoring]--> Operation",
    "Template": "When <condition>, Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitoring-ANN-Operation-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Monitoring]--> Operation",
    "Template": "When <condition>, Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitoring-ANN-Operation-CONST",
    "Trigger": "Safety&AI: ANN --[Monitoring]--> Operation",
    "Template": "Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitoring-ANN-Operation-ROLE",
    "Trigger": "Safety&AI: ANN --[Monitoring]--> Operation",
    "Template": "<subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitoring-ANN-Operation-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Monitoring]--> Operation",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitoring-ANN-Operation-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Monitoring]--> Operation",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitoring-ANN-Operation-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Monitoring]--> Operation",
    "Template": "<subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-AI_Database-Activity",
    "Trigger": "Safety&AI: AI Database --[Monitors]--> Activity",
    "Template": "Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-AI_Database-Activity-COND",
    "Trigger": "Safety&AI: AI Database --[Monitors]--> Activity",
    "Template": "When <condition>, Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-AI_Database-Activity-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Monitors]--> Activity",
    "Template": "When <condition>, Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-AI_Database-Activity-CONST",
    "Trigger": "Safety&AI: AI Database --[Monitors]--> Activity",
    "Template": "Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-AI_Database-Activity-ROLE",
    "Trigger": "Safety&AI: AI Database --[Monitors]--> Activity",
    "Template": "<subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-AI_Database-Activity-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Monitors]--> Activity",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-AI_Database-Activity-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Monitors]--> Activity",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-AI_Database-Activity-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Monitors]--> Activity",
    "Template": "<subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-AI_Database-Metric",
    "Trigger": "Safety&AI: AI Database --[Monitors]--> Metric",
    "Template": "Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-AI_Database-Metric-COND",
    "Trigger": "Safety&AI: AI Database --[Monitors]--> Metric",
    "Template": "When <condition>, Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-AI_Database-Metric-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Monitors]--> Metric",
    "Template": "When <condition>, Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-AI_Database-Metric-CONST",
    "Trigger": "Safety&AI: AI Database --[Monitors]--> Metric",
    "Template": "Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-AI_Database-Metric-ROLE",
    "Trigger": "Safety&AI: AI Database --[Monitors]--> Metric",
    "Template": "<subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-AI_Database-Metric-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Monitors]--> Metric",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-AI_Database-Metric-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Monitors]--> Metric",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-AI_Database-Metric-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Monitors]--> Metric",
    "Template": "<subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-AI_Database-Process",
    "Trigger": "Safety&AI: AI Database --[Monitors]--> Process",
    "Template": "Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-AI_Database-Process-COND",
    "Trigger": "Safety&AI: AI Database --[Monitors]--> Process",
    "Template": "When <condition>, Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-AI_Database-Process-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Monitors]--> Process",
    "Template": "When <condition>, Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-AI_Database-Process-CONST",
    "Trigger": "Safety&AI: AI Database --[Monitors]--> Process",
    "Template": "Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-AI_Database-Process-ROLE",
    "Trigger": "Safety&AI: AI Database --[Monitors]--> Process",
    "Template": "<subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-AI_Database-Process-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Monitors]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-AI_Database-Process-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Monitors]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-AI_Database-Process-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Monitors]--> Process",
    "Template": "<subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-ANN-Activity",
    "Trigger": "Safety&AI: ANN --[Monitors]--> Activity",
    "Template": "Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-ANN-Activity-COND",
    "Trigger": "Safety&AI: ANN --[Monitors]--> Activity",
    "Template": "When <condition>, Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-ANN-Activity-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Monitors]--> Activity",
    "Template": "When <condition>, Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-ANN-Activity-CONST",
    "Trigger": "Safety&AI: ANN --[Monitors]--> Activity",
    "Template": "Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-ANN-Activity-ROLE",
    "Trigger": "Safety&AI: ANN --[Monitors]--> Activity",
    "Template": "<subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-ANN-Activity-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Monitors]--> Activity",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-ANN-Activity-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Monitors]--> Activity",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-ANN-Activity-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Monitors]--> Activity",
    "Template": "<subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-ANN-Metric",
    "Trigger": "Safety&AI: ANN --[Monitors]--> Metric",
    "Template": "Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-ANN-Metric-COND",
    "Trigger": "Safety&AI: ANN --[Monitors]--> Metric",
    "Template": "When <condition>, Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-ANN-Metric-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Monitors]--> Metric",
    "Template": "When <condition>, Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-ANN-Metric-CONST",
    "Trigger": "Safety&AI: ANN --[Monitors]--> Metric",
    "Template": "Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-ANN-Metric-ROLE",
    "Trigger": "Safety&AI: ANN --[Monitors]--> Metric",
    "Template": "<subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-ANN-Metric-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Monitors]--> Metric",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-ANN-Metric-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Monitors]--> Metric",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-ANN-Metric-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Monitors]--> Metric",
    "Template": "<subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-ANN-Process",
    "Trigger": "Safety&AI: ANN --[Monitors]--> Process",
    "Template": "Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-ANN-Process-COND",
    "Trigger": "Safety&AI: ANN --[Monitors]--> Process",
    "Template": "When <condition>, Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-ANN-Process-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Monitors]--> Process",
    "Template": "When <condition>, Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-ANN-Process-CONST",
    "Trigger": "Safety&AI: ANN --[Monitors]--> Process",
    "Template": "Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-ANN-Process-ROLE",
    "Trigger": "Safety&AI: ANN --[Monitors]--> Process",
    "Template": "<subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-ANN-Process-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Monitors]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-ANN-Process-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Monitors]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-ANN-Process-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Monitors]--> Process",
    "Template": "<subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-Data_acquisition-Activity",
    "Trigger": "Safety&AI: Data acquisition --[Monitors]--> Activity",
    "Template": "Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-Data_acquisition-Activity-COND",
    "Trigger": "Safety&AI: Data acquisition --[Monitors]--> Activity",
    "Template": "When <condition>, Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-Data_acquisition-Activity-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Monitors]--> Activity",
    "Template": "When <condition>, Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-Data_acquisition-Activity-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Monitors]--> Activity",
    "Template": "Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-Data_acquisition-Activity-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Monitors]--> Activity",
    "Template": "<subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-Data_acquisition-Activity-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Monitors]--> Activity",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-Data_acquisition-Activity-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Monitors]--> Activity",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-Data_acquisition-Activity-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Monitors]--> Activity",
    "Template": "<subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-Data_acquisition-Metric",
    "Trigger": "Safety&AI: Data acquisition --[Monitors]--> Metric",
    "Template": "Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-Data_acquisition-Metric-COND",
    "Trigger": "Safety&AI: Data acquisition --[Monitors]--> Metric",
    "Template": "When <condition>, Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-Data_acquisition-Metric-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Monitors]--> Metric",
    "Template": "When <condition>, Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-Data_acquisition-Metric-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Monitors]--> Metric",
    "Template": "Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-Data_acquisition-Metric-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Monitors]--> Metric",
    "Template": "<subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-Data_acquisition-Metric-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Monitors]--> Metric",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-Data_acquisition-Metric-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Monitors]--> Metric",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-Data_acquisition-Metric-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Monitors]--> Metric",
    "Template": "<subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-Data_acquisition-Process",
    "Trigger": "Safety&AI: Data acquisition --[Monitors]--> Process",
    "Template": "Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-Data_acquisition-Process-COND",
    "Trigger": "Safety&AI: Data acquisition --[Monitors]--> Process",
    "Template": "When <condition>, Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-Data_acquisition-Process-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Monitors]--> Process",
    "Template": "When <condition>, Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-Data_acquisition-Process-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Monitors]--> Process",
    "Template": "Engineering team shall monitor the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-Data_acquisition-Process-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Monitors]--> Process",
    "Template": "<subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-Data_acquisition-Process-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Monitors]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-Data_acquisition-Process-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Monitors]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitors-Data_acquisition-Process-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Monitors]--> Process",
    "Template": "<subject_id> (<subject_class>) shall monitor the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-AI_Database-Activity",
    "Trigger": "Safety&AI: AI Database --[Performs]--> Activity",
    "Template": "Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-AI_Database-Activity-COND",
    "Trigger": "Safety&AI: AI Database --[Performs]--> Activity",
    "Template": "When <condition>, Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-AI_Database-Activity-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Performs]--> Activity",
    "Template": "When <condition>, Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-AI_Database-Activity-CONST",
    "Trigger": "Safety&AI: AI Database --[Performs]--> Activity",
    "Template": "Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-AI_Database-Activity-ROLE",
    "Trigger": "Safety&AI: AI Database --[Performs]--> Activity",
    "Template": "<subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-AI_Database-Activity-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Performs]--> Activity",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-AI_Database-Activity-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Performs]--> Activity",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-AI_Database-Activity-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Performs]--> Activity",
    "Template": "<subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-AI_Database-Procedure",
    "Trigger": "Safety&AI: AI Database --[Performs]--> Procedure",
    "Template": "Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-AI_Database-Procedure-COND",
    "Trigger": "Safety&AI: AI Database --[Performs]--> Procedure",
    "Template": "When <condition>, Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-AI_Database-Procedure-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Performs]--> Procedure",
    "Template": "When <condition>, Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-AI_Database-Procedure-CONST",
    "Trigger": "Safety&AI: AI Database --[Performs]--> Procedure",
    "Template": "Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-AI_Database-Procedure-ROLE",
    "Trigger": "Safety&AI: AI Database --[Performs]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-AI_Database-Procedure-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Performs]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-AI_Database-Procedure-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Performs]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-AI_Database-Procedure-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Performs]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-AI_Database-Task",
    "Trigger": "Safety&AI: AI Database --[Performs]--> Task",
    "Template": "Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-AI_Database-Task-COND",
    "Trigger": "Safety&AI: AI Database --[Performs]--> Task",
    "Template": "When <condition>, Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-AI_Database-Task-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Performs]--> Task",
    "Template": "When <condition>, Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-AI_Database-Task-CONST",
    "Trigger": "Safety&AI: AI Database --[Performs]--> Task",
    "Template": "Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-AI_Database-Task-ROLE",
    "Trigger": "Safety&AI: AI Database --[Performs]--> Task",
    "Template": "<subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-AI_Database-Task-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Performs]--> Task",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-AI_Database-Task-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Performs]--> Task",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-AI_Database-Task-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Performs]--> Task",
    "Template": "<subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-ANN-Activity",
    "Trigger": "Safety&AI: ANN --[Performs]--> Activity",
    "Template": "Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-ANN-Activity-COND",
    "Trigger": "Safety&AI: ANN --[Performs]--> Activity",
    "Template": "When <condition>, Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-ANN-Activity-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Performs]--> Activity",
    "Template": "When <condition>, Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-ANN-Activity-CONST",
    "Trigger": "Safety&AI: ANN --[Performs]--> Activity",
    "Template": "Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-ANN-Activity-ROLE",
    "Trigger": "Safety&AI: ANN --[Performs]--> Activity",
    "Template": "<subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-ANN-Activity-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Performs]--> Activity",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-ANN-Activity-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Performs]--> Activity",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-ANN-Activity-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Performs]--> Activity",
    "Template": "<subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-ANN-Procedure",
    "Trigger": "Safety&AI: ANN --[Performs]--> Procedure",
    "Template": "Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-ANN-Procedure-COND",
    "Trigger": "Safety&AI: ANN --[Performs]--> Procedure",
    "Template": "When <condition>, Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-ANN-Procedure-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Performs]--> Procedure",
    "Template": "When <condition>, Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-ANN-Procedure-CONST",
    "Trigger": "Safety&AI: ANN --[Performs]--> Procedure",
    "Template": "Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-ANN-Procedure-ROLE",
    "Trigger": "Safety&AI: ANN --[Performs]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-ANN-Procedure-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Performs]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-ANN-Procedure-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Performs]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-ANN-Procedure-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Performs]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-ANN-Task",
    "Trigger": "Safety&AI: ANN --[Performs]--> Task",
    "Template": "Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-ANN-Task-COND",
    "Trigger": "Safety&AI: ANN --[Performs]--> Task",
    "Template": "When <condition>, Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-ANN-Task-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Performs]--> Task",
    "Template": "When <condition>, Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-ANN-Task-CONST",
    "Trigger": "Safety&AI: ANN --[Performs]--> Task",
    "Template": "Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-ANN-Task-ROLE",
    "Trigger": "Safety&AI: ANN --[Performs]--> Task",
    "Template": "<subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-ANN-Task-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Performs]--> Task",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-ANN-Task-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Performs]--> Task",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-ANN-Task-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Performs]--> Task",
    "Template": "<subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-Data_acquisition-Activity",
    "Trigger": "Safety&AI: Data acquisition --[Performs]--> Activity",
    "Template": "Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-Data_acquisition-Activity-COND",
    "Trigger": "Safety&AI: Data acquisition --[Performs]--> Activity",
    "Template": "When <condition>, Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-Data_acquisition-Activity-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Performs]--> Activity",
    "Template": "When <condition>, Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-Data_acquisition-Activity-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Performs]--> Activity",
    "Template": "Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-Data_acquisition-Activity-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Performs]--> Activity",
    "Template": "<subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-Data_acquisition-Activity-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Performs]--> Activity",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-Data_acquisition-Activity-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Performs]--> Activity",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-Data_acquisition-Activity-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Performs]--> Activity",
    "Template": "<subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-Data_acquisition-Procedure",
    "Trigger": "Safety&AI: Data acquisition --[Performs]--> Procedure",
    "Template": "Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-Data_acquisition-Procedure-COND",
    "Trigger": "Safety&AI: Data acquisition --[Performs]--> Procedure",
    "Template": "When <condition>, Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-Data_acquisition-Procedure-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Performs]--> Procedure",
    "Template": "When <condition>, Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-Data_acquisition-Procedure-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Performs]--> Procedure",
    "Template": "Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-Data_acquisition-Procedure-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Performs]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-Data_acquisition-Procedure-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Performs]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-Data_acquisition-Procedure-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Performs]--> Procedure",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-Data_acquisition-Procedure-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Performs]--> Procedure",
    "Template": "<subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-Data_acquisition-Task",
    "Trigger": "Safety&AI: Data acquisition --[Performs]--> Task",
    "Template": "Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-Data_acquisition-Task-COND",
    "Trigger": "Safety&AI: Data acquisition --[Performs]--> Task",
    "Template": "When <condition>, Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-Data_acquisition-Task-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Performs]--> Task",
    "Template": "When <condition>, Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-Data_acquisition-Task-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Performs]--> Task",
    "Template": "Engineering team shall perform the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-Data_acquisition-Task-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Performs]--> Task",
    "Template": "<subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-Data_acquisition-Task-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Performs]--> Task",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-Data_acquisition-Task-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Performs]--> Task",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-performs-Data_acquisition-Task-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Performs]--> Task",
    "Template": "<subject_id> (<subject_class>) shall perform the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-AI_Database-Data",
    "Trigger": "Safety&AI: AI Database --[Produces]--> Data",
    "Template": "Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-AI_Database-Data-COND",
    "Trigger": "Safety&AI: AI Database --[Produces]--> Data",
    "Template": "When <condition>, Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-AI_Database-Data-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Produces]--> Data",
    "Template": "When <condition>, Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-AI_Database-Data-CONST",
    "Trigger": "Safety&AI: AI Database --[Produces]--> Data",
    "Template": "Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-AI_Database-Data-ROLE",
    "Trigger": "Safety&AI: AI Database --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-AI_Database-Data-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-AI_Database-Data-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-AI_Database-Data-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-AI_Database-Document",
    "Trigger": "Safety&AI: AI Database --[Produces]--> Document",
    "Template": "Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-AI_Database-Document-COND",
    "Trigger": "Safety&AI: AI Database --[Produces]--> Document",
    "Template": "When <condition>, Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-AI_Database-Document-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Produces]--> Document",
    "Template": "When <condition>, Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-AI_Database-Document-CONST",
    "Trigger": "Safety&AI: AI Database --[Produces]--> Document",
    "Template": "Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-AI_Database-Document-ROLE",
    "Trigger": "Safety&AI: AI Database --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-AI_Database-Document-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-AI_Database-Document-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-AI_Database-Document-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-AI_Database-Record",
    "Trigger": "Safety&AI: AI Database --[Produces]--> Record",
    "Template": "Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-AI_Database-Record-COND",
    "Trigger": "Safety&AI: AI Database --[Produces]--> Record",
    "Template": "When <condition>, Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-AI_Database-Record-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Produces]--> Record",
    "Template": "When <condition>, Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-AI_Database-Record-CONST",
    "Trigger": "Safety&AI: AI Database --[Produces]--> Record",
    "Template": "Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-AI_Database-Record-ROLE",
    "Trigger": "Safety&AI: AI Database --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-AI_Database-Record-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-AI_Database-Record-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-AI_Database-Record-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-ANN-Data",
    "Trigger": "Safety&AI: ANN --[Produces]--> Data",
    "Template": "Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-ANN-Data-COND",
    "Trigger": "Safety&AI: ANN --[Produces]--> Data",
    "Template": "When <condition>, Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-ANN-Data-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Produces]--> Data",
    "Template": "When <condition>, Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-ANN-Data-CONST",
    "Trigger": "Safety&AI: ANN --[Produces]--> Data",
    "Template": "Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-ANN-Data-ROLE",
    "Trigger": "Safety&AI: ANN --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-ANN-Data-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-ANN-Data-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-ANN-Data-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-ANN-Document",
    "Trigger": "Safety&AI: ANN --[Produces]--> Document",
    "Template": "Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-ANN-Document-COND",
    "Trigger": "Safety&AI: ANN --[Produces]--> Document",
    "Template": "When <condition>, Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-ANN-Document-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Produces]--> Document",
    "Template": "When <condition>, Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-ANN-Document-CONST",
    "Trigger": "Safety&AI: ANN --[Produces]--> Document",
    "Template": "Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-ANN-Document-ROLE",
    "Trigger": "Safety&AI: ANN --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-ANN-Document-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-ANN-Document-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-ANN-Document-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-ANN-Record",
    "Trigger": "Safety&AI: ANN --[Produces]--> Record",
    "Template": "Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-ANN-Record-COND",
    "Trigger": "Safety&AI: ANN --[Produces]--> Record",
    "Template": "When <condition>, Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-ANN-Record-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Produces]--> Record",
    "Template": "When <condition>, Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-ANN-Record-CONST",
    "Trigger": "Safety&AI: ANN --[Produces]--> Record",
    "Template": "Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-ANN-Record-ROLE",
    "Trigger": "Safety&AI: ANN --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-ANN-Record-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-ANN-Record-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-ANN-Record-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Data_acquisition-Data",
    "Trigger": "Safety&AI: Data acquisition --[Produces]--> Data",
    "Template": "Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Data_acquisition-Data-COND",
    "Trigger": "Safety&AI: Data acquisition --[Produces]--> Data",
    "Template": "When <condition>, Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Data_acquisition-Data-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Produces]--> Data",
    "Template": "When <condition>, Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Data_acquisition-Data-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Produces]--> Data",
    "Template": "Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Data_acquisition-Data-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Data_acquisition-Data-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Data_acquisition-Data-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Data_acquisition-Data-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Data_acquisition-Document",
    "Trigger": "Safety&AI: Data acquisition --[Produces]--> Document",
    "Template": "Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Data_acquisition-Document-COND",
    "Trigger": "Safety&AI: Data acquisition --[Produces]--> Document",
    "Template": "When <condition>, Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Data_acquisition-Document-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Produces]--> Document",
    "Template": "When <condition>, Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Data_acquisition-Document-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Produces]--> Document",
    "Template": "Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Data_acquisition-Document-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Data_acquisition-Document-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Data_acquisition-Document-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Data_acquisition-Document-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Data_acquisition-Record",
    "Trigger": "Safety&AI: Data acquisition --[Produces]--> Record",
    "Template": "Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Data_acquisition-Record-COND",
    "Trigger": "Safety&AI: Data acquisition --[Produces]--> Record",
    "Template": "When <condition>, Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Data_acquisition-Record-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Produces]--> Record",
    "Template": "When <condition>, Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Data_acquisition-Record-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Produces]--> Record",
    "Template": "Engineering team shall produce the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Data_acquisition-Record-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Data_acquisition-Record-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Data_acquisition-Record-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Data_acquisition-Record-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall produce the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate-AI_Database-Work_Product",
    "Trigger": "Safety&AI: AI Database --[Propagate]--> Work Product",
    "Template": "Engineering team shall propagate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate-AI_Database-Work_Product-COND",
    "Trigger": "Safety&AI: AI Database --[Propagate]--> Work Product",
    "Template": "When <condition>, Engineering team shall propagate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate-AI_Database-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Propagate]--> Work Product",
    "Template": "When <condition>, Engineering team shall propagate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate-AI_Database-Work_Product-CONST",
    "Trigger": "Safety&AI: AI Database --[Propagate]--> Work Product",
    "Template": "Engineering team shall propagate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate-AI_Database-Work_Product-ROLE",
    "Trigger": "Safety&AI: AI Database --[Propagate]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall propagate the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate-AI_Database-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Propagate]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall propagate the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate-AI_Database-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Propagate]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall propagate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate-AI_Database-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Propagate]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall propagate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate-ANN-Work_Product",
    "Trigger": "Safety&AI: ANN --[Propagate]--> Work Product",
    "Template": "Engineering team shall propagate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate-ANN-Work_Product-COND",
    "Trigger": "Safety&AI: ANN --[Propagate]--> Work Product",
    "Template": "When <condition>, Engineering team shall propagate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate-ANN-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Propagate]--> Work Product",
    "Template": "When <condition>, Engineering team shall propagate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate-ANN-Work_Product-CONST",
    "Trigger": "Safety&AI: ANN --[Propagate]--> Work Product",
    "Template": "Engineering team shall propagate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate-ANN-Work_Product-ROLE",
    "Trigger": "Safety&AI: ANN --[Propagate]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall propagate the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate-ANN-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Propagate]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall propagate the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate-ANN-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Propagate]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall propagate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate-ANN-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Propagate]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall propagate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate-Data_acquisition-Work_Product",
    "Trigger": "Safety&AI: Data acquisition --[Propagate]--> Work Product",
    "Template": "Engineering team shall propagate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate-Data_acquisition-Work_Product-COND",
    "Trigger": "Safety&AI: Data acquisition --[Propagate]--> Work Product",
    "Template": "When <condition>, Engineering team shall propagate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate-Data_acquisition-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Propagate]--> Work Product",
    "Template": "When <condition>, Engineering team shall propagate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate-Data_acquisition-Work_Product-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Propagate]--> Work Product",
    "Template": "Engineering team shall propagate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate-Data_acquisition-Work_Product-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Propagate]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall propagate the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate-Data_acquisition-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Propagate]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall propagate the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate-Data_acquisition-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Propagate]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall propagate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate-Data_acquisition-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Propagate]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall propagate the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_approval-AI_Database-Work_Product",
    "Trigger": "Safety&AI: AI Database --[Propagate by Approval]--> Work Product",
    "Template": "Engineering team shall propagate by approval the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_approval-AI_Database-Work_Product-COND",
    "Trigger": "Safety&AI: AI Database --[Propagate by Approval]--> Work Product",
    "Template": "When <condition>, Engineering team shall propagate by approval the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_approval-AI_Database-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Propagate by Approval]--> Work Product",
    "Template": "When <condition>, Engineering team shall propagate by approval the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_approval-AI_Database-Work_Product-CONST",
    "Trigger": "Safety&AI: AI Database --[Propagate by Approval]--> Work Product",
    "Template": "Engineering team shall propagate by approval the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_approval-AI_Database-Work_Product-ROLE",
    "Trigger": "Safety&AI: AI Database --[Propagate by Approval]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall propagate by approval the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_approval-AI_Database-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Propagate by Approval]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall propagate by approval the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_approval-AI_Database-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Propagate by Approval]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall propagate by approval the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_approval-AI_Database-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Propagate by Approval]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall propagate by approval the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_approval-ANN-Work_Product",
    "Trigger": "Safety&AI: ANN --[Propagate by Approval]--> Work Product",
    "Template": "Engineering team shall propagate by approval the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_approval-ANN-Work_Product-COND",
    "Trigger": "Safety&AI: ANN --[Propagate by Approval]--> Work Product",
    "Template": "When <condition>, Engineering team shall propagate by approval the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_approval-ANN-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Propagate by Approval]--> Work Product",
    "Template": "When <condition>, Engineering team shall propagate by approval the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_approval-ANN-Work_Product-CONST",
    "Trigger": "Safety&AI: ANN --[Propagate by Approval]--> Work Product",
    "Template": "Engineering team shall propagate by approval the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_approval-ANN-Work_Product-ROLE",
    "Trigger": "Safety&AI: ANN --[Propagate by Approval]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall propagate by approval the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_approval-ANN-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Propagate by Approval]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall propagate by approval the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_approval-ANN-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Propagate by Approval]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall propagate by approval the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_approval-ANN-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Propagate by Approval]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall propagate by approval the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_approval-Data_acquisition-Work_Product",
    "Trigger": "Safety&AI: Data acquisition --[Propagate by Approval]--> Work Product",
    "Template": "Engineering team shall propagate by approval the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_approval-Data_acquisition-Work_Product-COND",
    "Trigger": "Safety&AI: Data acquisition --[Propagate by Approval]--> Work Product",
    "Template": "When <condition>, Engineering team shall propagate by approval the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_approval-Data_acquisition-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Propagate by Approval]--> Work Product",
    "Template": "When <condition>, Engineering team shall propagate by approval the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_approval-Data_acquisition-Work_Product-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Propagate by Approval]--> Work Product",
    "Template": "Engineering team shall propagate by approval the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_approval-Data_acquisition-Work_Product-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Propagate by Approval]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall propagate by approval the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_approval-Data_acquisition-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Propagate by Approval]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall propagate by approval the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_approval-Data_acquisition-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Propagate by Approval]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall propagate by approval the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_approval-Data_acquisition-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Propagate by Approval]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall propagate by approval the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_review-AI_Database-Work_Product",
    "Trigger": "Safety&AI: AI Database --[Propagate by Review]--> Work Product",
    "Template": "Engineering team shall propagate by review the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_review-AI_Database-Work_Product-COND",
    "Trigger": "Safety&AI: AI Database --[Propagate by Review]--> Work Product",
    "Template": "When <condition>, Engineering team shall propagate by review the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_review-AI_Database-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Propagate by Review]--> Work Product",
    "Template": "When <condition>, Engineering team shall propagate by review the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_review-AI_Database-Work_Product-CONST",
    "Trigger": "Safety&AI: AI Database --[Propagate by Review]--> Work Product",
    "Template": "Engineering team shall propagate by review the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_review-AI_Database-Work_Product-ROLE",
    "Trigger": "Safety&AI: AI Database --[Propagate by Review]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall propagate by review the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_review-AI_Database-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Propagate by Review]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall propagate by review the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_review-AI_Database-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Propagate by Review]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall propagate by review the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_review-AI_Database-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Propagate by Review]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall propagate by review the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_review-ANN-Work_Product",
    "Trigger": "Safety&AI: ANN --[Propagate by Review]--> Work Product",
    "Template": "Engineering team shall propagate by review the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_review-ANN-Work_Product-COND",
    "Trigger": "Safety&AI: ANN --[Propagate by Review]--> Work Product",
    "Template": "When <condition>, Engineering team shall propagate by review the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_review-ANN-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Propagate by Review]--> Work Product",
    "Template": "When <condition>, Engineering team shall propagate by review the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_review-ANN-Work_Product-CONST",
    "Trigger": "Safety&AI: ANN --[Propagate by Review]--> Work Product",
    "Template": "Engineering team shall propagate by review the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_review-ANN-Work_Product-ROLE",
    "Trigger": "Safety&AI: ANN --[Propagate by Review]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall propagate by review the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_review-ANN-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Propagate by Review]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall propagate by review the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_review-ANN-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Propagate by Review]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall propagate by review the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_review-ANN-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Propagate by Review]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall propagate by review the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_review-Data_acquisition-Work_Product",
    "Trigger": "Safety&AI: Data acquisition --[Propagate by Review]--> Work Product",
    "Template": "Engineering team shall propagate by review the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_review-Data_acquisition-Work_Product-COND",
    "Trigger": "Safety&AI: Data acquisition --[Propagate by Review]--> Work Product",
    "Template": "When <condition>, Engineering team shall propagate by review the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_review-Data_acquisition-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Propagate by Review]--> Work Product",
    "Template": "When <condition>, Engineering team shall propagate by review the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_review-Data_acquisition-Work_Product-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Propagate by Review]--> Work Product",
    "Template": "Engineering team shall propagate by review the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_review-Data_acquisition-Work_Product-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Propagate by Review]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall propagate by review the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_review-Data_acquisition-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Propagate by Review]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall propagate by review the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_review-Data_acquisition-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Propagate by Review]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall propagate by review the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-propagate_by_review-Data_acquisition-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Propagate by Review]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall propagate by review the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-re-use-AI_Database-Lifecycle_Phase",
    "Trigger": "Safety&AI: AI Database --[Re-use]--> Lifecycle Phase",
    "Template": "Engineering team shall re-use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-re-use-AI_Database-Lifecycle_Phase-COND",
    "Trigger": "Safety&AI: AI Database --[Re-use]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall re-use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-re-use-AI_Database-Lifecycle_Phase-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Re-use]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall re-use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-re-use-AI_Database-Lifecycle_Phase-CONST",
    "Trigger": "Safety&AI: AI Database --[Re-use]--> Lifecycle Phase",
    "Template": "Engineering team shall re-use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-re-use-AI_Database-Lifecycle_Phase-ROLE",
    "Trigger": "Safety&AI: AI Database --[Re-use]--> Lifecycle Phase",
    "Template": "<subject_id> (<subject_class>) shall re-use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-re-use-AI_Database-Lifecycle_Phase-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Re-use]--> Lifecycle Phase",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall re-use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-re-use-AI_Database-Lifecycle_Phase-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Re-use]--> Lifecycle Phase",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall re-use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-re-use-AI_Database-Lifecycle_Phase-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Re-use]--> Lifecycle Phase",
    "Template": "<subject_id> (<subject_class>) shall re-use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-re-use-ANN-Lifecycle_Phase",
    "Trigger": "Safety&AI: ANN --[Re-use]--> Lifecycle Phase",
    "Template": "Engineering team shall re-use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-re-use-ANN-Lifecycle_Phase-COND",
    "Trigger": "Safety&AI: ANN --[Re-use]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall re-use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-re-use-ANN-Lifecycle_Phase-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Re-use]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall re-use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-re-use-ANN-Lifecycle_Phase-CONST",
    "Trigger": "Safety&AI: ANN --[Re-use]--> Lifecycle Phase",
    "Template": "Engineering team shall re-use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-re-use-ANN-Lifecycle_Phase-ROLE",
    "Trigger": "Safety&AI: ANN --[Re-use]--> Lifecycle Phase",
    "Template": "<subject_id> (<subject_class>) shall re-use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-re-use-ANN-Lifecycle_Phase-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Re-use]--> Lifecycle Phase",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall re-use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-re-use-ANN-Lifecycle_Phase-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Re-use]--> Lifecycle Phase",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall re-use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-re-use-ANN-Lifecycle_Phase-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Re-use]--> Lifecycle Phase",
    "Template": "<subject_id> (<subject_class>) shall re-use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-re-use-Data_acquisition-Lifecycle_Phase",
    "Trigger": "Safety&AI: Data acquisition --[Re-use]--> Lifecycle Phase",
    "Template": "Engineering team shall re-use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-re-use-Data_acquisition-Lifecycle_Phase-COND",
    "Trigger": "Safety&AI: Data acquisition --[Re-use]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall re-use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-re-use-Data_acquisition-Lifecycle_Phase-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Re-use]--> Lifecycle Phase",
    "Template": "When <condition>, Engineering team shall re-use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-re-use-Data_acquisition-Lifecycle_Phase-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Re-use]--> Lifecycle Phase",
    "Template": "Engineering team shall re-use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-re-use-Data_acquisition-Lifecycle_Phase-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Re-use]--> Lifecycle Phase",
    "Template": "<subject_id> (<subject_class>) shall re-use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-re-use-Data_acquisition-Lifecycle_Phase-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Re-use]--> Lifecycle Phase",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall re-use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-re-use-Data_acquisition-Lifecycle_Phase-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Re-use]--> Lifecycle Phase",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall re-use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-re-use-Data_acquisition-Lifecycle_Phase-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Re-use]--> Lifecycle Phase",
    "Template": "<subject_id> (<subject_class>) shall re-use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-AI_Database-Activity",
    "Trigger": "Safety&AI: AI Database --[Responsible for]--> Activity",
    "Template": "Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-AI_Database-Activity-COND",
    "Trigger": "Safety&AI: AI Database --[Responsible for]--> Activity",
    "Template": "When <condition>, Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-AI_Database-Activity-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Responsible for]--> Activity",
    "Template": "When <condition>, Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-AI_Database-Activity-CONST",
    "Trigger": "Safety&AI: AI Database --[Responsible for]--> Activity",
    "Template": "Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-AI_Database-Activity-ROLE",
    "Trigger": "Safety&AI: AI Database --[Responsible for]--> Activity",
    "Template": "<subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-AI_Database-Activity-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Responsible for]--> Activity",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-AI_Database-Activity-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Responsible for]--> Activity",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-AI_Database-Activity-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Responsible for]--> Activity",
    "Template": "<subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-AI_Database-Process",
    "Trigger": "Safety&AI: AI Database --[Responsible for]--> Process",
    "Template": "Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-AI_Database-Process-COND",
    "Trigger": "Safety&AI: AI Database --[Responsible for]--> Process",
    "Template": "When <condition>, Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-AI_Database-Process-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Responsible for]--> Process",
    "Template": "When <condition>, Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-AI_Database-Process-CONST",
    "Trigger": "Safety&AI: AI Database --[Responsible for]--> Process",
    "Template": "Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-AI_Database-Process-ROLE",
    "Trigger": "Safety&AI: AI Database --[Responsible for]--> Process",
    "Template": "<subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-AI_Database-Process-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Responsible for]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-AI_Database-Process-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Responsible for]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-AI_Database-Process-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Responsible for]--> Process",
    "Template": "<subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-AI_Database-Task",
    "Trigger": "Safety&AI: AI Database --[Responsible for]--> Task",
    "Template": "Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-AI_Database-Task-COND",
    "Trigger": "Safety&AI: AI Database --[Responsible for]--> Task",
    "Template": "When <condition>, Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-AI_Database-Task-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Responsible for]--> Task",
    "Template": "When <condition>, Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-AI_Database-Task-CONST",
    "Trigger": "Safety&AI: AI Database --[Responsible for]--> Task",
    "Template": "Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-AI_Database-Task-ROLE",
    "Trigger": "Safety&AI: AI Database --[Responsible for]--> Task",
    "Template": "<subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-AI_Database-Task-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Responsible for]--> Task",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-AI_Database-Task-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Responsible for]--> Task",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-AI_Database-Task-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Responsible for]--> Task",
    "Template": "<subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-ANN-Activity",
    "Trigger": "Safety&AI: ANN --[Responsible for]--> Activity",
    "Template": "Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-ANN-Activity-COND",
    "Trigger": "Safety&AI: ANN --[Responsible for]--> Activity",
    "Template": "When <condition>, Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-ANN-Activity-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Responsible for]--> Activity",
    "Template": "When <condition>, Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-ANN-Activity-CONST",
    "Trigger": "Safety&AI: ANN --[Responsible for]--> Activity",
    "Template": "Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-ANN-Activity-ROLE",
    "Trigger": "Safety&AI: ANN --[Responsible for]--> Activity",
    "Template": "<subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-ANN-Activity-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Responsible for]--> Activity",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-ANN-Activity-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Responsible for]--> Activity",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-ANN-Activity-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Responsible for]--> Activity",
    "Template": "<subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-ANN-Process",
    "Trigger": "Safety&AI: ANN --[Responsible for]--> Process",
    "Template": "Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-ANN-Process-COND",
    "Trigger": "Safety&AI: ANN --[Responsible for]--> Process",
    "Template": "When <condition>, Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-ANN-Process-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Responsible for]--> Process",
    "Template": "When <condition>, Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-ANN-Process-CONST",
    "Trigger": "Safety&AI: ANN --[Responsible for]--> Process",
    "Template": "Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-ANN-Process-ROLE",
    "Trigger": "Safety&AI: ANN --[Responsible for]--> Process",
    "Template": "<subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-ANN-Process-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Responsible for]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-ANN-Process-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Responsible for]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-ANN-Process-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Responsible for]--> Process",
    "Template": "<subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-ANN-Task",
    "Trigger": "Safety&AI: ANN --[Responsible for]--> Task",
    "Template": "Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-ANN-Task-COND",
    "Trigger": "Safety&AI: ANN --[Responsible for]--> Task",
    "Template": "When <condition>, Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-ANN-Task-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Responsible for]--> Task",
    "Template": "When <condition>, Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-ANN-Task-CONST",
    "Trigger": "Safety&AI: ANN --[Responsible for]--> Task",
    "Template": "Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-ANN-Task-ROLE",
    "Trigger": "Safety&AI: ANN --[Responsible for]--> Task",
    "Template": "<subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-ANN-Task-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Responsible for]--> Task",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-ANN-Task-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Responsible for]--> Task",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-ANN-Task-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Responsible for]--> Task",
    "Template": "<subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Data_acquisition-Activity",
    "Trigger": "Safety&AI: Data acquisition --[Responsible for]--> Activity",
    "Template": "Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Data_acquisition-Activity-COND",
    "Trigger": "Safety&AI: Data acquisition --[Responsible for]--> Activity",
    "Template": "When <condition>, Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Data_acquisition-Activity-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Responsible for]--> Activity",
    "Template": "When <condition>, Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Data_acquisition-Activity-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Responsible for]--> Activity",
    "Template": "Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Data_acquisition-Activity-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Responsible for]--> Activity",
    "Template": "<subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Data_acquisition-Activity-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Responsible for]--> Activity",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Data_acquisition-Activity-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Responsible for]--> Activity",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Data_acquisition-Activity-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Responsible for]--> Activity",
    "Template": "<subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Data_acquisition-Process",
    "Trigger": "Safety&AI: Data acquisition --[Responsible for]--> Process",
    "Template": "Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Data_acquisition-Process-COND",
    "Trigger": "Safety&AI: Data acquisition --[Responsible for]--> Process",
    "Template": "When <condition>, Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Data_acquisition-Process-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Responsible for]--> Process",
    "Template": "When <condition>, Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Data_acquisition-Process-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Responsible for]--> Process",
    "Template": "Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Data_acquisition-Process-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Responsible for]--> Process",
    "Template": "<subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Data_acquisition-Process-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Responsible for]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Data_acquisition-Process-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Responsible for]--> Process",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Data_acquisition-Process-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Responsible for]--> Process",
    "Template": "<subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Data_acquisition-Task",
    "Trigger": "Safety&AI: Data acquisition --[Responsible for]--> Task",
    "Template": "Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Data_acquisition-Task-COND",
    "Trigger": "Safety&AI: Data acquisition --[Responsible for]--> Task",
    "Template": "When <condition>, Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Data_acquisition-Task-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Responsible for]--> Task",
    "Template": "When <condition>, Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Data_acquisition-Task-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Responsible for]--> Task",
    "Template": "Engineering team shall be responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Data_acquisition-Task-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Responsible for]--> Task",
    "Template": "<subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Data_acquisition-Task-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Responsible for]--> Task",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Data_acquisition-Task-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Responsible for]--> Task",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Data_acquisition-Task-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Responsible for]--> Task",
    "Template": "<subject_id> (<subject_class>) shall be responsible for the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-satisfied_by-AI_Database-Work_Product",
    "Trigger": "Safety&AI: AI Database --[Satisfied by]--> Work Product",
    "Template": "Engineering team shall be satisfied by the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-satisfied_by-AI_Database-Work_Product-COND",
    "Trigger": "Safety&AI: AI Database --[Satisfied by]--> Work Product",
    "Template": "When <condition>, Engineering team shall be satisfied by the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-satisfied_by-AI_Database-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Satisfied by]--> Work Product",
    "Template": "When <condition>, Engineering team shall be satisfied by the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-satisfied_by-AI_Database-Work_Product-CONST",
    "Trigger": "Safety&AI: AI Database --[Satisfied by]--> Work Product",
    "Template": "Engineering team shall be satisfied by the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-satisfied_by-AI_Database-Work_Product-ROLE",
    "Trigger": "Safety&AI: AI Database --[Satisfied by]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be satisfied by the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-satisfied_by-AI_Database-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Satisfied by]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be satisfied by the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-satisfied_by-AI_Database-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Satisfied by]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be satisfied by the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-satisfied_by-AI_Database-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Satisfied by]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be satisfied by the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-satisfied_by-ANN-Work_Product",
    "Trigger": "Safety&AI: ANN --[Satisfied by]--> Work Product",
    "Template": "Engineering team shall be satisfied by the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-satisfied_by-ANN-Work_Product-COND",
    "Trigger": "Safety&AI: ANN --[Satisfied by]--> Work Product",
    "Template": "When <condition>, Engineering team shall be satisfied by the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-satisfied_by-ANN-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Satisfied by]--> Work Product",
    "Template": "When <condition>, Engineering team shall be satisfied by the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-satisfied_by-ANN-Work_Product-CONST",
    "Trigger": "Safety&AI: ANN --[Satisfied by]--> Work Product",
    "Template": "Engineering team shall be satisfied by the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-satisfied_by-ANN-Work_Product-ROLE",
    "Trigger": "Safety&AI: ANN --[Satisfied by]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be satisfied by the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-satisfied_by-ANN-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Satisfied by]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be satisfied by the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-satisfied_by-ANN-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Satisfied by]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be satisfied by the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-satisfied_by-ANN-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Satisfied by]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be satisfied by the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-satisfied_by-Data_acquisition-Work_Product",
    "Trigger": "Safety&AI: Data acquisition --[Satisfied by]--> Work Product",
    "Template": "Engineering team shall be satisfied by the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-satisfied_by-Data_acquisition-Work_Product-COND",
    "Trigger": "Safety&AI: Data acquisition --[Satisfied by]--> Work Product",
    "Template": "When <condition>, Engineering team shall be satisfied by the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-satisfied_by-Data_acquisition-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Satisfied by]--> Work Product",
    "Template": "When <condition>, Engineering team shall be satisfied by the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-satisfied_by-Data_acquisition-Work_Product-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Satisfied by]--> Work Product",
    "Template": "Engineering team shall be satisfied by the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-satisfied_by-Data_acquisition-Work_Product-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Satisfied by]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be satisfied by the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-satisfied_by-Data_acquisition-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Satisfied by]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be satisfied by the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-satisfied_by-Data_acquisition-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Satisfied by]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be satisfied by the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-satisfied_by-Data_acquisition-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Satisfied by]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be satisfied by the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-synthesis-ANN-AI_Database",
    "Trigger": "Safety&AI: ANN --[Synthesis]--> AI Database",
    "Template": "Engineering team shall synthesize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-synthesis-ANN-AI_Database-COND",
    "Trigger": "Safety&AI: ANN --[Synthesis]--> AI Database",
    "Template": "When <condition>, Engineering team shall synthesize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-synthesis-ANN-AI_Database-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Synthesis]--> AI Database",
    "Template": "When <condition>, Engineering team shall synthesize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-synthesis-ANN-AI_Database-CONST",
    "Trigger": "Safety&AI: ANN --[Synthesis]--> AI Database",
    "Template": "Engineering team shall synthesize the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-synthesis-ANN-AI_Database-ROLE",
    "Trigger": "Safety&AI: ANN --[Synthesis]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall synthesize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-synthesis-ANN-AI_Database-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Synthesis]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall synthesize the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-synthesis-ANN-AI_Database-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Synthesis]--> AI Database",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall synthesize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-synthesis-ANN-AI_Database-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Synthesis]--> AI Database",
    "Template": "<subject_id> (<subject_class>) shall synthesize the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-trace-AI_Database-Work_Product",
    "Trigger": "Safety&AI: AI Database --[Trace]--> Work Product",
    "Template": "Engineering team shall trace to the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-trace-AI_Database-Work_Product-COND",
    "Trigger": "Safety&AI: AI Database --[Trace]--> Work Product",
    "Template": "When <condition>, Engineering team shall trace to the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-trace-AI_Database-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Trace]--> Work Product",
    "Template": "When <condition>, Engineering team shall trace to the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-trace-AI_Database-Work_Product-CONST",
    "Trigger": "Safety&AI: AI Database --[Trace]--> Work Product",
    "Template": "Engineering team shall trace to the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-trace-AI_Database-Work_Product-ROLE",
    "Trigger": "Safety&AI: AI Database --[Trace]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall trace to the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-trace-AI_Database-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Trace]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall trace to the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-trace-AI_Database-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Trace]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall trace to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-trace-AI_Database-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Trace]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall trace to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-trace-ANN-Work_Product",
    "Trigger": "Safety&AI: ANN --[Trace]--> Work Product",
    "Template": "Engineering team shall trace to the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-trace-ANN-Work_Product-COND",
    "Trigger": "Safety&AI: ANN --[Trace]--> Work Product",
    "Template": "When <condition>, Engineering team shall trace to the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-trace-ANN-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Trace]--> Work Product",
    "Template": "When <condition>, Engineering team shall trace to the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-trace-ANN-Work_Product-CONST",
    "Trigger": "Safety&AI: ANN --[Trace]--> Work Product",
    "Template": "Engineering team shall trace to the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-trace-ANN-Work_Product-ROLE",
    "Trigger": "Safety&AI: ANN --[Trace]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall trace to the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-trace-ANN-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Trace]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall trace to the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-trace-ANN-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Trace]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall trace to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-trace-ANN-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Trace]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall trace to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-trace-Data_acquisition-Work_Product",
    "Trigger": "Safety&AI: Data acquisition --[Trace]--> Work Product",
    "Template": "Engineering team shall trace to the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-trace-Data_acquisition-Work_Product-COND",
    "Trigger": "Safety&AI: Data acquisition --[Trace]--> Work Product",
    "Template": "When <condition>, Engineering team shall trace to the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-trace-Data_acquisition-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Trace]--> Work Product",
    "Template": "When <condition>, Engineering team shall trace to the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-trace-Data_acquisition-Work_Product-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Trace]--> Work Product",
    "Template": "Engineering team shall trace to the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-trace-Data_acquisition-Work_Product-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Trace]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall trace to the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-trace-Data_acquisition-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Trace]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall trace to the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-trace-Data_acquisition-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Trace]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall trace to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-trace-Data_acquisition-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Trace]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall trace to the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_approval-AI_Database-Work_Product",
    "Trigger": "Safety&AI: AI Database --[Used after Approval]--> Work Product",
    "Template": "Engineering team shall be used after approval the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_approval-AI_Database-Work_Product-COND",
    "Trigger": "Safety&AI: AI Database --[Used after Approval]--> Work Product",
    "Template": "When <condition>, Engineering team shall be used after approval the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_approval-AI_Database-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Used after Approval]--> Work Product",
    "Template": "When <condition>, Engineering team shall be used after approval the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_approval-AI_Database-Work_Product-CONST",
    "Trigger": "Safety&AI: AI Database --[Used after Approval]--> Work Product",
    "Template": "Engineering team shall be used after approval the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_approval-AI_Database-Work_Product-ROLE",
    "Trigger": "Safety&AI: AI Database --[Used after Approval]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be used after approval the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_approval-AI_Database-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Used after Approval]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be used after approval the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_approval-AI_Database-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Used after Approval]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be used after approval the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_approval-AI_Database-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Used after Approval]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be used after approval the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_approval-ANN-Work_Product",
    "Trigger": "Safety&AI: ANN --[Used after Approval]--> Work Product",
    "Template": "Engineering team shall be used after approval the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_approval-ANN-Work_Product-COND",
    "Trigger": "Safety&AI: ANN --[Used after Approval]--> Work Product",
    "Template": "When <condition>, Engineering team shall be used after approval the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_approval-ANN-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Used after Approval]--> Work Product",
    "Template": "When <condition>, Engineering team shall be used after approval the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_approval-ANN-Work_Product-CONST",
    "Trigger": "Safety&AI: ANN --[Used after Approval]--> Work Product",
    "Template": "Engineering team shall be used after approval the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_approval-ANN-Work_Product-ROLE",
    "Trigger": "Safety&AI: ANN --[Used after Approval]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be used after approval the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_approval-ANN-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Used after Approval]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be used after approval the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_approval-ANN-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Used after Approval]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be used after approval the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_approval-ANN-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Used after Approval]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be used after approval the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_approval-Data_acquisition-Work_Product",
    "Trigger": "Safety&AI: Data acquisition --[Used after Approval]--> Work Product",
    "Template": "Engineering team shall be used after approval the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_approval-Data_acquisition-Work_Product-COND",
    "Trigger": "Safety&AI: Data acquisition --[Used after Approval]--> Work Product",
    "Template": "When <condition>, Engineering team shall be used after approval the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_approval-Data_acquisition-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Used after Approval]--> Work Product",
    "Template": "When <condition>, Engineering team shall be used after approval the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_approval-Data_acquisition-Work_Product-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Used after Approval]--> Work Product",
    "Template": "Engineering team shall be used after approval the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_approval-Data_acquisition-Work_Product-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Used after Approval]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be used after approval the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_approval-Data_acquisition-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Used after Approval]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be used after approval the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_approval-Data_acquisition-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Used after Approval]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be used after approval the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_approval-Data_acquisition-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Used after Approval]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be used after approval the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_review-AI_Database-Work_Product",
    "Trigger": "Safety&AI: AI Database --[Used after Review]--> Work Product",
    "Template": "Engineering team shall be used after review the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_review-AI_Database-Work_Product-COND",
    "Trigger": "Safety&AI: AI Database --[Used after Review]--> Work Product",
    "Template": "When <condition>, Engineering team shall be used after review the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_review-AI_Database-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Used after Review]--> Work Product",
    "Template": "When <condition>, Engineering team shall be used after review the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_review-AI_Database-Work_Product-CONST",
    "Trigger": "Safety&AI: AI Database --[Used after Review]--> Work Product",
    "Template": "Engineering team shall be used after review the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_review-AI_Database-Work_Product-ROLE",
    "Trigger": "Safety&AI: AI Database --[Used after Review]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be used after review the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_review-AI_Database-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Used after Review]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be used after review the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_review-AI_Database-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Used after Review]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be used after review the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_review-AI_Database-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Used after Review]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be used after review the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_review-ANN-Work_Product",
    "Trigger": "Safety&AI: ANN --[Used after Review]--> Work Product",
    "Template": "Engineering team shall be used after review the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_review-ANN-Work_Product-COND",
    "Trigger": "Safety&AI: ANN --[Used after Review]--> Work Product",
    "Template": "When <condition>, Engineering team shall be used after review the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_review-ANN-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Used after Review]--> Work Product",
    "Template": "When <condition>, Engineering team shall be used after review the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_review-ANN-Work_Product-CONST",
    "Trigger": "Safety&AI: ANN --[Used after Review]--> Work Product",
    "Template": "Engineering team shall be used after review the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_review-ANN-Work_Product-ROLE",
    "Trigger": "Safety&AI: ANN --[Used after Review]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be used after review the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_review-ANN-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Used after Review]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be used after review the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_review-ANN-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Used after Review]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be used after review the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_review-ANN-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Used after Review]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be used after review the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_review-Data_acquisition-Work_Product",
    "Trigger": "Safety&AI: Data acquisition --[Used after Review]--> Work Product",
    "Template": "Engineering team shall be used after review the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_review-Data_acquisition-Work_Product-COND",
    "Trigger": "Safety&AI: Data acquisition --[Used after Review]--> Work Product",
    "Template": "When <condition>, Engineering team shall be used after review the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_review-Data_acquisition-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Used after Review]--> Work Product",
    "Template": "When <condition>, Engineering team shall be used after review the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_review-Data_acquisition-Work_Product-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Used after Review]--> Work Product",
    "Template": "Engineering team shall be used after review the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_review-Data_acquisition-Work_Product-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Used after Review]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be used after review the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_review-Data_acquisition-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Used after Review]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be used after review the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_review-Data_acquisition-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Used after Review]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be used after review the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_after_review-Data_acquisition-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Used after Review]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be used after review the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_by-AI_Database-Work_Product",
    "Trigger": "Safety&AI: AI Database --[Used By]--> Work Product",
    "Template": "Engineering team shall be used by the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_by-AI_Database-Work_Product-COND",
    "Trigger": "Safety&AI: AI Database --[Used By]--> Work Product",
    "Template": "When <condition>, Engineering team shall be used by the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_by-AI_Database-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Used By]--> Work Product",
    "Template": "When <condition>, Engineering team shall be used by the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_by-AI_Database-Work_Product-CONST",
    "Trigger": "Safety&AI: AI Database --[Used By]--> Work Product",
    "Template": "Engineering team shall be used by the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_by-AI_Database-Work_Product-ROLE",
    "Trigger": "Safety&AI: AI Database --[Used By]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be used by the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_by-AI_Database-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Used By]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be used by the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_by-AI_Database-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Used By]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be used by the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_by-AI_Database-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Used By]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be used by the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_by-ANN-Work_Product",
    "Trigger": "Safety&AI: ANN --[Used By]--> Work Product",
    "Template": "Engineering team shall be used by the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_by-ANN-Work_Product-COND",
    "Trigger": "Safety&AI: ANN --[Used By]--> Work Product",
    "Template": "When <condition>, Engineering team shall be used by the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_by-ANN-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Used By]--> Work Product",
    "Template": "When <condition>, Engineering team shall be used by the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_by-ANN-Work_Product-CONST",
    "Trigger": "Safety&AI: ANN --[Used By]--> Work Product",
    "Template": "Engineering team shall be used by the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_by-ANN-Work_Product-ROLE",
    "Trigger": "Safety&AI: ANN --[Used By]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be used by the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_by-ANN-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Used By]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be used by the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_by-ANN-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Used By]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be used by the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_by-ANN-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Used By]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be used by the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_by-Data_acquisition-Work_Product",
    "Trigger": "Safety&AI: Data acquisition --[Used By]--> Work Product",
    "Template": "Engineering team shall be used by the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_by-Data_acquisition-Work_Product-COND",
    "Trigger": "Safety&AI: Data acquisition --[Used By]--> Work Product",
    "Template": "When <condition>, Engineering team shall be used by the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_by-Data_acquisition-Work_Product-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Used By]--> Work Product",
    "Template": "When <condition>, Engineering team shall be used by the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_by-Data_acquisition-Work_Product-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Used By]--> Work Product",
    "Template": "Engineering team shall be used by the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_by-Data_acquisition-Work_Product-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Used By]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be used by the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_by-Data_acquisition-Work_Product-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Used By]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be used by the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_by-Data_acquisition-Work_Product-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Used By]--> Work Product",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall be used by the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-used_by-Data_acquisition-Work_Product-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Used By]--> Work Product",
    "Template": "<subject_id> (<subject_class>) shall be used by the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-AI_Database-Data",
    "Trigger": "Safety&AI: AI Database --[Uses]--> Data",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-AI_Database-Data-COND",
    "Trigger": "Safety&AI: AI Database --[Uses]--> Data",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-AI_Database-Data-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Uses]--> Data",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-AI_Database-Data-CONST",
    "Trigger": "Safety&AI: AI Database --[Uses]--> Data",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-AI_Database-Data-ROLE",
    "Trigger": "Safety&AI: AI Database --[Uses]--> Data",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-AI_Database-Data-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Uses]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-AI_Database-Data-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Uses]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-AI_Database-Data-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Uses]--> Data",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-AI_Database-Document",
    "Trigger": "Safety&AI: AI Database --[Uses]--> Document",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-AI_Database-Document-COND",
    "Trigger": "Safety&AI: AI Database --[Uses]--> Document",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-AI_Database-Document-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Uses]--> Document",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-AI_Database-Document-CONST",
    "Trigger": "Safety&AI: AI Database --[Uses]--> Document",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-AI_Database-Document-ROLE",
    "Trigger": "Safety&AI: AI Database --[Uses]--> Document",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-AI_Database-Document-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Uses]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-AI_Database-Document-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Uses]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-AI_Database-Document-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Uses]--> Document",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-AI_Database-Record",
    "Trigger": "Safety&AI: AI Database --[Uses]--> Record",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-AI_Database-Record-COND",
    "Trigger": "Safety&AI: AI Database --[Uses]--> Record",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-AI_Database-Record-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Uses]--> Record",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-AI_Database-Record-CONST",
    "Trigger": "Safety&AI: AI Database --[Uses]--> Record",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-AI_Database-Record-ROLE",
    "Trigger": "Safety&AI: AI Database --[Uses]--> Record",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-AI_Database-Record-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Uses]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-AI_Database-Record-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Uses]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-AI_Database-Record-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Uses]--> Record",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-ANN-Data",
    "Trigger": "Safety&AI: ANN --[Uses]--> Data",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-ANN-Data-COND",
    "Trigger": "Safety&AI: ANN --[Uses]--> Data",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-ANN-Data-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Uses]--> Data",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-ANN-Data-CONST",
    "Trigger": "Safety&AI: ANN --[Uses]--> Data",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-ANN-Data-ROLE",
    "Trigger": "Safety&AI: ANN --[Uses]--> Data",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-ANN-Data-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Uses]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-ANN-Data-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Uses]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-ANN-Data-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Uses]--> Data",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-ANN-Document",
    "Trigger": "Safety&AI: ANN --[Uses]--> Document",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-ANN-Document-COND",
    "Trigger": "Safety&AI: ANN --[Uses]--> Document",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-ANN-Document-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Uses]--> Document",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-ANN-Document-CONST",
    "Trigger": "Safety&AI: ANN --[Uses]--> Document",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-ANN-Document-ROLE",
    "Trigger": "Safety&AI: ANN --[Uses]--> Document",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-ANN-Document-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Uses]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-ANN-Document-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Uses]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-ANN-Document-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Uses]--> Document",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-ANN-Record",
    "Trigger": "Safety&AI: ANN --[Uses]--> Record",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-ANN-Record-COND",
    "Trigger": "Safety&AI: ANN --[Uses]--> Record",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-ANN-Record-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Uses]--> Record",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-ANN-Record-CONST",
    "Trigger": "Safety&AI: ANN --[Uses]--> Record",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-ANN-Record-ROLE",
    "Trigger": "Safety&AI: ANN --[Uses]--> Record",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-ANN-Record-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Uses]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-ANN-Record-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Uses]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-ANN-Record-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Uses]--> Record",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-Data_acquisition-Data",
    "Trigger": "Safety&AI: Data acquisition --[Uses]--> Data",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-Data_acquisition-Data-COND",
    "Trigger": "Safety&AI: Data acquisition --[Uses]--> Data",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-Data_acquisition-Data-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Uses]--> Data",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-Data_acquisition-Data-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Uses]--> Data",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-Data_acquisition-Data-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Uses]--> Data",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-Data_acquisition-Data-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Uses]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-Data_acquisition-Data-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Uses]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-Data_acquisition-Data-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Uses]--> Data",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-Data_acquisition-Document",
    "Trigger": "Safety&AI: Data acquisition --[Uses]--> Document",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-Data_acquisition-Document-COND",
    "Trigger": "Safety&AI: Data acquisition --[Uses]--> Document",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-Data_acquisition-Document-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Uses]--> Document",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-Data_acquisition-Document-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Uses]--> Document",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-Data_acquisition-Document-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Uses]--> Document",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-Data_acquisition-Document-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Uses]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-Data_acquisition-Document-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Uses]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-Data_acquisition-Document-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Uses]--> Document",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-Data_acquisition-Record",
    "Trigger": "Safety&AI: Data acquisition --[Uses]--> Record",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-Data_acquisition-Record-COND",
    "Trigger": "Safety&AI: Data acquisition --[Uses]--> Record",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-Data_acquisition-Record-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Uses]--> Record",
    "Template": "When <condition>, Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-Data_acquisition-Record-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Uses]--> Record",
    "Template": "Engineering team shall use the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-Data_acquisition-Record-ROLE",
    "Trigger": "Safety&AI: Data acquisition --[Uses]--> Record",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-Data_acquisition-Record-ROLE-COND",
    "Trigger": "Safety&AI: Data acquisition --[Uses]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-Data_acquisition-Record-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Uses]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-uses-Data_acquisition-Record-ROLE-CONST",
    "Trigger": "Safety&AI: Data acquisition --[Uses]--> Record",
    "Template": "<subject_id> (<subject_class>) shall use the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_release-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Security manager shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_release-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Security manager shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_release-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Security manager shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_release-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Security manager shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_release_business_unit_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_release_business_unit_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_release_business_unit_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_release_business_unit_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_release_organization_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_release_organization_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_release_organization_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_release_organization_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_release_role_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_release_role_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_release_role_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_release_role_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Business_Unit-Data",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Business_Unit-Data-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Business_Unit-Data-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Business_Unit-Data-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Business_Unit-Record",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Business_Unit-Record-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Business_Unit-Record-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Business_Unit-Record-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Field_Data-Data",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Field_Data-Data-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Field_Data-Data-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Field_Data-Data-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Field_Data-Record",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Field_Data-Record-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Field_Data-Record-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Field_Data-Record-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Hazard-Data",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Hazard-Data-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Hazard-Data-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Hazard-Data-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Hazard-Record",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Hazard-Record-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Hazard-Record-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Hazard-Record-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Organization-Data",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Organization-Data-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Organization-Data-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Organization-Data-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Organization-Record",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Organization-Record-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Organization-Record-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Organization-Record-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Role-Data",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Role-Data-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Role-Data-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Role-Data-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Role-Record",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Role-Record-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Role-Record-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Role-Record-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Security_Threat-Data",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Security_Threat-Data-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Security_Threat-Data-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Security_Threat-Data-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Security_Threat-Record",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Security_Threat-Record-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Security_Threat-Record-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Security_Threat-Record-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Business_Unit-Data",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Business_Unit-Data-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Business_Unit-Data-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Business_Unit-Data-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Business_Unit-Record",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Business_Unit-Record-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Business_Unit-Record-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Business_Unit-Record-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Field_Data-Data",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Field_Data-Data-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Field_Data-Data-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Field_Data-Data-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Field_Data-Record",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Field_Data-Record-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Field_Data-Record-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Field_Data-Record-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Hazard-Data",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Hazard-Data-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Hazard-Data-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Hazard-Data-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Hazard-Record",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Hazard-Record-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Hazard-Record-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Hazard-Record-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Organization-Data",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Organization-Data-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Organization-Data-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Organization-Data-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Organization-Record",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Organization-Record-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Organization-Record-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Organization-Record-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Role-Data",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Role-Data-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Role-Data-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Role-Data-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Role-Record",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Role-Record-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Role-Record-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Role-Record-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Security_Threat-Data",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Security_Threat-Data-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Security_Threat-Data-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Security_Threat-Data-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Security_Threat-Record",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Security_Threat-Record-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Security_Threat-Record-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_business_unit_subject-Security_Threat-Record-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Business_Unit-Data",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Business_Unit-Data-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Business_Unit-Data-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Business_Unit-Data-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Business_Unit-Record",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Business_Unit-Record-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Business_Unit-Record-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Business_Unit-Record-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Field_Data-Data",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Field_Data-Data-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Field_Data-Data-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Field_Data-Data-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Field_Data-Record",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Field_Data-Record-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Field_Data-Record-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Field_Data-Record-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Hazard-Data",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Hazard-Data-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Hazard-Data-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Hazard-Data-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Hazard-Record",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Hazard-Record-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Hazard-Record-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Hazard-Record-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Organization-Data",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Organization-Data-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Organization-Data-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Organization-Data-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Organization-Record",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Organization-Record-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Organization-Record-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Organization-Record-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Role-Data",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Role-Data-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Role-Data-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Role-Data-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Role-Record",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Role-Record-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Role-Record-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Role-Record-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Security_Threat-Data",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Security_Threat-Data-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Security_Threat-Data-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Security_Threat-Data-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Security_Threat-Record",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Security_Threat-Record-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Security_Threat-Record-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_organization_subject-Security_Threat-Record-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Business_Unit-Data",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Business_Unit-Data-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Business_Unit-Data-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Business_Unit-Data-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Business_Unit-Record",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Business_Unit-Record-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Business_Unit-Record-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Business_Unit-Record-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Field_Data-Data",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Field_Data-Data-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Field_Data-Data-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Field_Data-Data-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Field_Data-Record",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Field_Data-Record-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Field_Data-Record-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Field_Data-Record-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Hazard-Data",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Hazard-Data-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Hazard-Data-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Hazard-Data-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Hazard-Record",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Hazard-Record-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Hazard-Record-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Hazard-Record-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Organization-Data",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Organization-Data-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Organization-Data-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Organization-Data-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Organization-Record",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Organization-Record-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Organization-Record-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Organization-Record-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Role-Data",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Role-Data-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Role-Data-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Role-Data-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Role-Record",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Role-Record-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Role-Record-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Role-Record-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Security_Threat-Data",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Security_Threat-Data-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Security_Threat-Data-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Security_Threat-Data-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Security_Threat-Record",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Security_Threat-Record-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Security_Threat-Record-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Security_Threat-Record-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), plans the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_business_unit_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_business_unit_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_business_unit_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_business_unit_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_business_unit_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_business_unit_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_business_unit_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_business_unit_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_business_unit_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_business_unit_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_business_unit_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_business_unit_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_business_unit_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_business_unit_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_business_unit_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_business_unit_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_business_unit_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_business_unit_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_business_unit_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_business_unit_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_business_unit_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_business_unit_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_business_unit_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_business_unit_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_organization_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_organization_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_organization_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_organization_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_organization_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_organization_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_organization_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_organization_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_organization_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_organization_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_organization_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_organization_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_organization_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_organization_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_organization_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_organization_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_organization_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_organization_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_organization_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_organization_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_organization_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_organization_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_organization_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_organization_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-decommissioning_validation-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "Safety manager shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-decommissioning_validation-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Safety manager shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-decommissioning_validation-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Safety manager shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-decommissioning_validation-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "Safety manager shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-decommissioning_validation_business_unit_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-decommissioning_validation_business_unit_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-decommissioning_validation_business_unit_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-decommissioning_validation_business_unit_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-decommissioning_validation_organization_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-decommissioning_validation_organization_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-decommissioning_validation_organization_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-decommissioning_validation_organization_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-decommissioning_validation_role_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-decommissioning_validation_role_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-decommissioning_validation_role_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-decommissioning_validation_role_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-deployment_readiness-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Deployment manager shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-deployment_readiness-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Deployment manager shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-deployment_readiness-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Deployment manager shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-deployment_readiness-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Deployment manager shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-deployment_readiness_business_unit_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-deployment_readiness_business_unit_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-deployment_readiness_business_unit_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-deployment_readiness_business_unit_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-deployment_readiness_organization_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-deployment_readiness_organization_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-deployment_readiness_organization_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-deployment_readiness_organization_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-deployment_readiness_role_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-deployment_readiness_role_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-deployment_readiness_role_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-deployment_readiness_role_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-functional_safety_release-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Release manager shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-functional_safety_release-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Release manager shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-functional_safety_release-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Release manager shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-functional_safety_release-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Release manager shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-functional_safety_release_business_unit_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-functional_safety_release_business_unit_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-functional_safety_release_business_unit_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-functional_safety_release_business_unit_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-functional_safety_release_organization_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-functional_safety_release_organization_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-functional_safety_release_organization_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-functional_safety_release_organization_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-functional_safety_release_role_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-functional_safety_release_role_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-functional_safety_release_role_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-functional_safety_release_role_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-governance_oversight-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "Governance board shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-governance_oversight-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Governance board shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-governance_oversight-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Governance board shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-governance_oversight-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "Governance board shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-governance_oversight_business_unit_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-governance_oversight_business_unit_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-governance_oversight_business_unit_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-governance_oversight_business_unit_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-governance_oversight_organization_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-governance_oversight_organization_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-governance_oversight_organization_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-governance_oversight_organization_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-governance_oversight_role_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-governance_oversight_role_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-governance_oversight_role_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-governance_oversight_role_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_business_unit_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_business_unit_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_business_unit_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_business_unit_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_business_unit_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_business_unit_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_business_unit_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_business_unit_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_business_unit_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_business_unit_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_business_unit_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_business_unit_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_business_unit_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_business_unit_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_business_unit_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_business_unit_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_business_unit_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_business_unit_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_business_unit_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_business_unit_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_business_unit_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_business_unit_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_business_unit_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_business_unit_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_organization_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_organization_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_organization_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_organization_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_organization_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_organization_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_organization_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_organization_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_organization_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_organization_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_organization_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_organization_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_organization_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_organization_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_organization_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_organization_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_organization_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_organization_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_organization_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_organization_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_organization_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_organization_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_organization_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_organization_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_business_unit_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_business_unit_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_business_unit_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_business_unit_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_business_unit_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_business_unit_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_business_unit_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_business_unit_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_business_unit_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_business_unit_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_business_unit_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_business_unit_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_business_unit_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_business_unit_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_business_unit_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_business_unit_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_business_unit_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_business_unit_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_business_unit_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_business_unit_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_business_unit_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_business_unit_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_business_unit_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_business_unit_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_organization_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_organization_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_organization_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_organization_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_organization_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_organization_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_organization_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_organization_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_organization_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_organization_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_organization_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_organization_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_organization_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_organization_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_organization_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_organization_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_organization_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_organization_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_organization_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_organization_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_organization_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_organization_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_organization_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_organization_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), develops the <object3_id> (<object3_class>), verify the <object4_id> (<object4_class>), and produces the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_triage-Safety_Issue-Test_Suite",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite",
    "Template": "Safety manager shall triage the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and develops the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_triage-Safety_Issue-Test_Suite-COND",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite",
    "Template": "When <condition>, Safety manager shall triage the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and develops the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_triage-Safety_Issue-Test_Suite-COND-CONST",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite",
    "Template": "When <condition>, Safety manager shall triage the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and develops the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_triage-Safety_Issue-Test_Suite-CONST",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite",
    "Template": "Safety manager shall triage the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and develops the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_triage_business_unit_subject-Safety_Issue-Test_Suite",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>), and develops the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_triage_business_unit_subject-Safety_Issue-Test_Suite-COND",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>), and develops the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_triage_business_unit_subject-Safety_Issue-Test_Suite-COND-CONST",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>), and develops the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_triage_business_unit_subject-Safety_Issue-Test_Suite-CONST",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>), and develops the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_triage_organization_subject-Safety_Issue-Test_Suite",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>), and develops the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_triage_organization_subject-Safety_Issue-Test_Suite-COND",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>), and develops the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_triage_organization_subject-Safety_Issue-Test_Suite-COND-CONST",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>), and develops the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_triage_organization_subject-Safety_Issue-Test_Suite-CONST",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>), and develops the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_triage_role_subject-Safety_Issue-Test_Suite",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>), and develops the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_triage_role_subject-Safety_Issue-Test_Suite-COND",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>), and develops the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_triage_role_subject-Safety_Issue-Test_Suite-COND-CONST",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>), and develops the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_triage_role_subject-Safety_Issue-Test_Suite-CONST",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite",
    "Template": "<subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>), and develops the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_validation-Safety_Issue-Document",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "Safety manager shall triage the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_validation-Safety_Issue-Document-COND",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Safety manager shall triage the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_validation-Safety_Issue-Document-COND-CONST",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Safety manager shall triage the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_validation-Safety_Issue-Document-CONST",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "Safety manager shall triage the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_validation_business_unit_subject-Safety_Issue-Document",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_validation_business_unit_subject-Safety_Issue-Document-COND",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_validation_business_unit_subject-Safety_Issue-Document-COND-CONST",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_validation_business_unit_subject-Safety_Issue-Document-CONST",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_validation_organization_subject-Safety_Issue-Document",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_validation_organization_subject-Safety_Issue-Document-COND",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_validation_organization_subject-Safety_Issue-Document-COND-CONST",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_validation_organization_subject-Safety_Issue-Document-CONST",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_validation_role_subject-Safety_Issue-Document",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_validation_role_subject-Safety_Issue-Document-COND",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_validation_role_subject-Safety_Issue-Document-COND-CONST",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_validation_role_subject-Safety_Issue-Document-CONST",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall triage the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-lifecycle_governance_review-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "Lifecycle manager shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-lifecycle_governance_review-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Lifecycle manager shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-lifecycle_governance_review-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Lifecycle manager shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-lifecycle_governance_review-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "Lifecycle manager shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-lifecycle_governance_review_business_unit_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-lifecycle_governance_review_business_unit_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-lifecycle_governance_review_business_unit_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-lifecycle_governance_review_business_unit_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-lifecycle_governance_review_organization_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-lifecycle_governance_review_organization_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-lifecycle_governance_review_organization_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-lifecycle_governance_review_organization_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-lifecycle_governance_review_role_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-lifecycle_governance_review_role_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-lifecycle_governance_review_role_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-lifecycle_governance_review_role_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-maintenance_validation-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "Operations team shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-maintenance_validation-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Operations team shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-maintenance_validation-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Operations team shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-maintenance_validation-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "Operations team shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-maintenance_validation_business_unit_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-maintenance_validation_business_unit_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-maintenance_validation_business_unit_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-maintenance_validation_business_unit_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-maintenance_validation_organization_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-maintenance_validation_organization_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-maintenance_validation_organization_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-maintenance_validation_organization_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-maintenance_validation_role_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-maintenance_validation_role_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-maintenance_validation_role_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-maintenance_validation_role_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation-Model-Document",
    "Trigger": "Sequence: Model --[Validate]--> Test Suite --[Produces]--> Document",
    "Template": "Validation team shall validate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation-Model-Document-COND",
    "Trigger": "Sequence: Model --[Validate]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall validate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation-Model-Document-COND-CONST",
    "Trigger": "Sequence: Model --[Validate]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall validate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation-Model-Document-CONST",
    "Trigger": "Sequence: Model --[Validate]--> Test Suite --[Produces]--> Document",
    "Template": "Validation team shall validate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation-Plan-Document",
    "Trigger": "Sequence: Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "Validation team shall validate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall validate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall validate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "Validation team shall validate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation-Test_Suite-Document",
    "Trigger": "Sequence: Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "Validation team shall validate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation-Test_Suite-Document-COND",
    "Trigger": "Sequence: Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall validate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation-Test_Suite-Document-COND-CONST",
    "Trigger": "Sequence: Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall validate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation-Test_Suite-Document-CONST",
    "Trigger": "Sequence: Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "Validation team shall validate the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_business_unit_subject-Model-Document",
    "Trigger": "Sequence: Model --[Validate]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_business_unit_subject-Model-Document-COND",
    "Trigger": "Sequence: Model --[Validate]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_business_unit_subject-Model-Document-COND-CONST",
    "Trigger": "Sequence: Model --[Validate]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_business_unit_subject-Model-Document-CONST",
    "Trigger": "Sequence: Model --[Validate]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_business_unit_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_business_unit_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_business_unit_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_business_unit_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_business_unit_subject-Test_Suite-Document",
    "Trigger": "Sequence: Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_business_unit_subject-Test_Suite-Document-COND",
    "Trigger": "Sequence: Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_business_unit_subject-Test_Suite-Document-COND-CONST",
    "Trigger": "Sequence: Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_business_unit_subject-Test_Suite-Document-CONST",
    "Trigger": "Sequence: Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_organization_subject-Model-Document",
    "Trigger": "Sequence: Model --[Validate]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_organization_subject-Model-Document-COND",
    "Trigger": "Sequence: Model --[Validate]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_organization_subject-Model-Document-COND-CONST",
    "Trigger": "Sequence: Model --[Validate]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_organization_subject-Model-Document-CONST",
    "Trigger": "Sequence: Model --[Validate]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_organization_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_organization_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_organization_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_organization_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_organization_subject-Test_Suite-Document",
    "Trigger": "Sequence: Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_organization_subject-Test_Suite-Document-COND",
    "Trigger": "Sequence: Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_organization_subject-Test_Suite-Document-COND-CONST",
    "Trigger": "Sequence: Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_organization_subject-Test_Suite-Document-CONST",
    "Trigger": "Sequence: Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_role_subject-Model-Document",
    "Trigger": "Sequence: Model --[Validate]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_role_subject-Model-Document-COND",
    "Trigger": "Sequence: Model --[Validate]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_role_subject-Model-Document-COND-CONST",
    "Trigger": "Sequence: Model --[Validate]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_role_subject-Model-Document-CONST",
    "Trigger": "Sequence: Model --[Validate]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_role_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_role_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_role_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_role_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_role_subject-Test_Suite-Document",
    "Trigger": "Sequence: Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_role_subject-Test_Suite-Document-COND",
    "Trigger": "Sequence: Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_role_subject-Test_Suite-Document-COND-CONST",
    "Trigger": "Sequence: Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_role_subject-Test_Suite-Document-CONST",
    "Trigger": "Sequence: Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall validate the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-AI_Database-Data",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-AI_Database-Data-COND",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-AI_Database-Data-COND-CONST",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-AI_Database-Data-CONST",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-AI_Database-Document",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-AI_Database-Document-COND",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-AI_Database-Document-COND-CONST",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-AI_Database-Document-CONST",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-AI_Database-Record",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-AI_Database-Record-COND",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-AI_Database-Record-COND-CONST",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-AI_Database-Record-CONST",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-ANN-Data",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-ANN-Data-COND",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-ANN-Data-COND-CONST",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-ANN-Data-CONST",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-ANN-Document",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-ANN-Document-COND",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-ANN-Document-COND-CONST",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-ANN-Document-CONST",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-ANN-Record",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-ANN-Record-COND",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-ANN-Record-COND-CONST",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-ANN-Record-CONST",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Data_acquisition-Data",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Data_acquisition-Data-COND",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Data_acquisition-Data-COND-CONST",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Data_acquisition-Data-CONST",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Data_acquisition-Document",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Data_acquisition-Document-COND",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Data_acquisition-Document-COND-CONST",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Data_acquisition-Document-CONST",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Data_acquisition-Record",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Data_acquisition-Record-COND",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Data_acquisition-Record-COND-CONST",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Data_acquisition-Record-CONST",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Role-Data",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Role-Data-COND",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Role-Data-COND-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Role-Data-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Role-Document",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Role-Document-COND",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Role-Record",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Role-Record-COND",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Role-Record-COND-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Role-Record-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "Governance board shall responsible for the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-AI_Database-Data",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-AI_Database-Data-COND",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-AI_Database-Data-COND-CONST",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-AI_Database-Data-CONST",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-AI_Database-Document",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-AI_Database-Document-COND",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-AI_Database-Document-COND-CONST",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-AI_Database-Document-CONST",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-AI_Database-Record",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-AI_Database-Record-COND",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-AI_Database-Record-COND-CONST",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-AI_Database-Record-CONST",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-ANN-Data",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-ANN-Data-COND",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-ANN-Data-COND-CONST",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-ANN-Data-CONST",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-ANN-Document",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-ANN-Document-COND",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-ANN-Document-COND-CONST",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-ANN-Document-CONST",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-ANN-Record",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-ANN-Record-COND",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-ANN-Record-COND-CONST",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-ANN-Record-CONST",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-Data_acquisition-Data",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-Data_acquisition-Data-COND",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-Data_acquisition-Data-COND-CONST",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-Data_acquisition-Data-CONST",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-Data_acquisition-Document",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-Data_acquisition-Document-COND",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-Data_acquisition-Document-COND-CONST",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-Data_acquisition-Document-CONST",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-Data_acquisition-Record",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-Data_acquisition-Record-COND",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-Data_acquisition-Record-COND-CONST",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-Data_acquisition-Record-CONST",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-Role-Data",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-Role-Data-COND",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-Role-Data-COND-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-Role-Data-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-Role-Document",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-Role-Record",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-Role-Record-COND",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-Role-Record-COND-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_business_unit_subject-Role-Record-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-AI_Database-Data",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-AI_Database-Data-COND",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-AI_Database-Data-COND-CONST",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-AI_Database-Data-CONST",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-AI_Database-Document",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-AI_Database-Document-COND",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-AI_Database-Document-COND-CONST",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-AI_Database-Document-CONST",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-AI_Database-Record",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-AI_Database-Record-COND",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-AI_Database-Record-COND-CONST",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-AI_Database-Record-CONST",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-ANN-Data",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-ANN-Data-COND",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-ANN-Data-COND-CONST",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-ANN-Data-CONST",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-ANN-Document",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-ANN-Document-COND",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-ANN-Document-COND-CONST",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-ANN-Document-CONST",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-ANN-Record",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-ANN-Record-COND",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-ANN-Record-COND-CONST",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-ANN-Record-CONST",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-Data_acquisition-Data",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-Data_acquisition-Data-COND",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-Data_acquisition-Data-COND-CONST",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-Data_acquisition-Data-CONST",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-Data_acquisition-Document",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-Data_acquisition-Document-COND",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-Data_acquisition-Document-COND-CONST",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-Data_acquisition-Document-CONST",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-Data_acquisition-Record",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-Data_acquisition-Record-COND",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-Data_acquisition-Record-COND-CONST",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-Data_acquisition-Record-CONST",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-Role-Data",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-Role-Data-COND",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-Role-Data-COND-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-Role-Data-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-Role-Document",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-Role-Record",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-Role-Record-COND",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-Role-Record-COND-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_organization_subject-Role-Record-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-AI_Database-Data",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-AI_Database-Data-COND",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-AI_Database-Data-COND-CONST",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-AI_Database-Data-CONST",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-AI_Database-Document",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-AI_Database-Document-COND",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-AI_Database-Document-COND-CONST",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-AI_Database-Document-CONST",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-AI_Database-Record",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-AI_Database-Record-COND",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-AI_Database-Record-COND-CONST",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-AI_Database-Record-CONST",
    "Trigger": "Sequence: AI Database --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-ANN-Data",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-ANN-Data-COND",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-ANN-Data-COND-CONST",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-ANN-Data-CONST",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-ANN-Document",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-ANN-Document-COND",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-ANN-Document-COND-CONST",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-ANN-Document-CONST",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-ANN-Record",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-ANN-Record-COND",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-ANN-Record-COND-CONST",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-ANN-Record-CONST",
    "Trigger": "Sequence: ANN --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Data_acquisition-Data",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Data_acquisition-Data-COND",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Data_acquisition-Data-COND-CONST",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Data_acquisition-Data-CONST",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Data_acquisition-Document",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Data_acquisition-Document-COND",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Data_acquisition-Document-COND-CONST",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Data_acquisition-Document-CONST",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Data_acquisition-Record",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Data_acquisition-Record-COND",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Data_acquisition-Record-COND-CONST",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Data_acquisition-Record-CONST",
    "Trigger": "Sequence: Data acquisition --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Role-Data",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Role-Data-COND",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Role-Data-COND-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Role-Data-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Role-Document",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Role-Record",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Role-Record-COND",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Role-Record-COND-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Role-Record-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall responsible for the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance-Policy-Data",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Data",
    "Template": "Governance team shall constrains the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance-Policy-Data-COND",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Data",
    "Template": "When <condition>, Governance team shall constrains the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance-Policy-Data-COND-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Data",
    "Template": "When <condition>, Governance team shall constrains the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance-Policy-Data-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Data",
    "Template": "Governance team shall constrains the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance-Policy-Document",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Document",
    "Template": "Governance team shall constrains the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance-Policy-Document-COND",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Governance team shall constrains the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance-Policy-Document-COND-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Governance team shall constrains the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance-Policy-Document-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Document",
    "Template": "Governance team shall constrains the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance-Policy-Record",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Record",
    "Template": "Governance team shall constrains the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance-Policy-Record-COND",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Record",
    "Template": "When <condition>, Governance team shall constrains the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance-Policy-Record-COND-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Record",
    "Template": "When <condition>, Governance team shall constrains the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance-Policy-Record-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Record",
    "Template": "Governance team shall constrains the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_business_unit_subject-Policy-Data",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_business_unit_subject-Policy-Data-COND",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_business_unit_subject-Policy-Data-COND-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_business_unit_subject-Policy-Data-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_business_unit_subject-Policy-Document",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_business_unit_subject-Policy-Document-COND",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_business_unit_subject-Policy-Document-COND-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_business_unit_subject-Policy-Document-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_business_unit_subject-Policy-Record",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_business_unit_subject-Policy-Record-COND",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_business_unit_subject-Policy-Record-COND-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_business_unit_subject-Policy-Record-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_organization_subject-Policy-Data",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_organization_subject-Policy-Data-COND",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_organization_subject-Policy-Data-COND-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_organization_subject-Policy-Data-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_organization_subject-Policy-Document",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_organization_subject-Policy-Document-COND",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_organization_subject-Policy-Document-COND-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_organization_subject-Policy-Document-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_organization_subject-Policy-Record",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_organization_subject-Policy-Record-COND",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_organization_subject-Policy-Record-COND-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_organization_subject-Policy-Record-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_role_subject-Policy-Data",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_role_subject-Policy-Data-COND",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_role_subject-Policy-Data-COND-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Data",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_role_subject-Policy-Data-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Data",
    "Template": "<subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_role_subject-Policy-Document",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_role_subject-Policy-Document-COND",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_role_subject-Policy-Document-COND-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_role_subject-Policy-Document-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_role_subject-Policy-Record",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_role_subject-Policy-Record-COND",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_role_subject-Policy-Record-COND-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Record",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_role_subject-Policy-Record-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Record",
    "Template": "<subject_id> (<subject_class>) shall constrains the <object1_id> (<object1_class>), and produces the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-post_deployment_monitoring-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Operations team shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-post_deployment_monitoring-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Operations team shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-post_deployment_monitoring-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Operations team shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-post_deployment_monitoring-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Operations team shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-post_deployment_monitoring_business_unit_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-post_deployment_monitoring_business_unit_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-post_deployment_monitoring_business_unit_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-post_deployment_monitoring_business_unit_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-post_deployment_monitoring_organization_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-post_deployment_monitoring_organization_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-post_deployment_monitoring_organization_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-post_deployment_monitoring_organization_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-post_deployment_monitoring_role_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-post_deployment_monitoring_role_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-post_deployment_monitoring_role_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-post_deployment_monitoring_role_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-product_lifecycle_safety-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Safety manager shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-product_lifecycle_safety-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Safety manager shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-product_lifecycle_safety-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Safety manager shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-product_lifecycle_safety-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Safety manager shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-product_lifecycle_safety_business_unit_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-product_lifecycle_safety_business_unit_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-product_lifecycle_safety_business_unit_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-product_lifecycle_safety_business_unit_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-product_lifecycle_safety_organization_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-product_lifecycle_safety_organization_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-product_lifecycle_safety_organization_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-product_lifecycle_safety_organization_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-product_lifecycle_safety_role_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-product_lifecycle_safety_role_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-product_lifecycle_safety_role_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-product_lifecycle_safety_role_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Prototype team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Prototype team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Prototype team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Prototype team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Prototype team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Prototype team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Prototype team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Prototype team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Prototype team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Prototype team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Prototype team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Prototype team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Prototype team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Prototype team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Prototype team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Prototype team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Prototype team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Prototype team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Prototype team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Prototype team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Prototype team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Prototype team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Prototype team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Prototype team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_business_unit_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_business_unit_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_business_unit_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_business_unit_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_business_unit_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_business_unit_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_business_unit_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_business_unit_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_business_unit_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_business_unit_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_business_unit_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_business_unit_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_business_unit_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_business_unit_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_business_unit_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_business_unit_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_business_unit_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_business_unit_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_business_unit_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_business_unit_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_business_unit_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_business_unit_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_business_unit_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_business_unit_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_organization_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_organization_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_organization_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_organization_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_organization_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_organization_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_organization_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_organization_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_organization_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_organization_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_organization_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_organization_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_organization_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_organization_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_organization_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_organization_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_organization_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_organization_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_organization_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_organization_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_organization_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_organization_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_organization_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_organization_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_role_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_role_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_role_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_role_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_role_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_role_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_role_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_role_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_role_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_role_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_role_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_role_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_role_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_role_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_role_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_role_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_role_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_role_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_role_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_role_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_role_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_role_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_role_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-prototype_evaluation_role_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Test team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Test team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Test team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Test team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Test team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Test team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Test team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Test team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Test team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Test team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Test team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Test team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Test team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Test team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Test team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Test team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Test team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Test team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Test team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Test team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Test team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Test team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Test team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Test team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_business_unit_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_business_unit_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_business_unit_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_business_unit_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_business_unit_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_business_unit_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_business_unit_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_business_unit_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_business_unit_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_business_unit_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_business_unit_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_business_unit_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_business_unit_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_business_unit_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_business_unit_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_business_unit_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_business_unit_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_business_unit_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_business_unit_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_business_unit_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_business_unit_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_business_unit_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_business_unit_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_business_unit_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_organization_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_organization_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_organization_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_organization_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_organization_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_organization_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_organization_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_organization_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_organization_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_organization_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_organization_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_organization_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_organization_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_organization_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_organization_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_organization_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_organization_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_organization_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_organization_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_organization_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_organization_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_organization_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_organization_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_organization_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_audit-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "Auditor shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_audit-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Auditor shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_audit-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Auditor shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_audit-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "Auditor shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_audit_business_unit_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_audit_business_unit_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_audit_business_unit_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_audit_business_unit_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_audit_organization_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_audit_organization_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_audit_organization_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_audit_organization_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_audit_role_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_audit_role_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_audit_role_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_audit_role_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall mitigates the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall mitigates the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall mitigates the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall mitigates the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification-Organization-Document",
    "Trigger": "Sequence: Organization --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall mitigates the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall mitigates the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall mitigates the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall mitigates the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification-Risk_Assessment-Document",
    "Trigger": "Sequence: Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall mitigates the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification-Risk_Assessment-Document-COND",
    "Trigger": "Sequence: Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall mitigates the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification-Risk_Assessment-Document-COND-CONST",
    "Trigger": "Sequence: Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall mitigates the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification-Risk_Assessment-Document-CONST",
    "Trigger": "Sequence: Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall mitigates the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification-Role-Document",
    "Trigger": "Sequence: Role --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall mitigates the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification-Role-Document-COND",
    "Trigger": "Sequence: Role --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall mitigates the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall mitigates the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall mitigates the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_business_unit_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_business_unit_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_business_unit_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_business_unit_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_business_unit_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_business_unit_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_business_unit_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_business_unit_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_business_unit_subject-Risk_Assessment-Document",
    "Trigger": "Sequence: Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_business_unit_subject-Risk_Assessment-Document-COND",
    "Trigger": "Sequence: Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_business_unit_subject-Risk_Assessment-Document-COND-CONST",
    "Trigger": "Sequence: Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_business_unit_subject-Risk_Assessment-Document-CONST",
    "Trigger": "Sequence: Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_business_unit_subject-Role-Document",
    "Trigger": "Sequence: Role --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_business_unit_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_business_unit_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_business_unit_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_organization_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_organization_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_organization_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_organization_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_organization_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_organization_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_organization_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_organization_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_organization_subject-Risk_Assessment-Document",
    "Trigger": "Sequence: Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_organization_subject-Risk_Assessment-Document-COND",
    "Trigger": "Sequence: Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_organization_subject-Risk_Assessment-Document-COND-CONST",
    "Trigger": "Sequence: Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_organization_subject-Risk_Assessment-Document-CONST",
    "Trigger": "Sequence: Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_organization_subject-Role-Document",
    "Trigger": "Sequence: Role --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_organization_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_organization_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_organization_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_role_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_role_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_role_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_role_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_role_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_role_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_role_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_role_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_role_subject-Risk_Assessment-Document",
    "Trigger": "Sequence: Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_role_subject-Risk_Assessment-Document-COND",
    "Trigger": "Sequence: Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_role_subject-Risk_Assessment-Document-COND-CONST",
    "Trigger": "Sequence: Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_role_subject-Risk_Assessment-Document-CONST",
    "Trigger": "Sequence: Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_role_subject-Role-Document",
    "Trigger": "Sequence: Role --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_role_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_role_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_role_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Mitigates]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall mitigates the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-security_audit-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "Security auditor shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-security_audit-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Security auditor shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-security_audit-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Security auditor shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-security_audit-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "Security auditor shall plans the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-security_audit_business_unit_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-security_audit_business_unit_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-security_audit_business_unit_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-security_audit_business_unit_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-security_audit_organization_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-security_audit_organization_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-security_audit_organization_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-security_audit_organization_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-security_audit_role_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-security_audit_role_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-security_audit_role_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-security_audit_role_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall plans the <object1_id> (<object1_class>), audits the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_business_unit_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_business_unit_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_business_unit_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_business_unit_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_business_unit_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_business_unit_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_business_unit_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_business_unit_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_business_unit_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_business_unit_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_business_unit_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_business_unit_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_business_unit_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_business_unit_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_business_unit_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_business_unit_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_business_unit_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_business_unit_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_business_unit_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_business_unit_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_business_unit_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_business_unit_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_business_unit_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_business_unit_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_organization_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_organization_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_organization_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_organization_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_organization_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_organization_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_organization_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_organization_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_organization_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_organization_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_organization_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_organization_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_organization_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_organization_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_organization_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_organization_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_organization_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_organization_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_organization_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_organization_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_organization_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_organization_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_organization_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_organization_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), and produces the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Validation team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_business_unit_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_business_unit_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_business_unit_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_business_unit_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_business_unit_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_business_unit_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_business_unit_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_business_unit_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_business_unit_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_business_unit_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_business_unit_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_business_unit_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_business_unit_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_business_unit_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_business_unit_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_business_unit_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_business_unit_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_business_unit_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_business_unit_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_business_unit_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_business_unit_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_business_unit_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_business_unit_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_business_unit_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_organization_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_organization_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_organization_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_organization_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_organization_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_organization_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_organization_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_organization_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_organization_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_organization_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_organization_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_organization_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_organization_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_organization_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_organization_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_organization_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_organization_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_organization_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_organization_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_organization_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_organization_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_organization_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_organization_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_organization_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Field Data --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), develops the <object2_id> (<object2_class>), verify the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "Cybersecurity team shall assesses the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_business_unit_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_business_unit_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_business_unit_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_business_unit_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_business_unit_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_business_unit_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_business_unit_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_business_unit_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_business_unit_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_business_unit_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_business_unit_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_business_unit_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_business_unit_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_business_unit_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_business_unit_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_business_unit_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_business_unit_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_business_unit_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_business_unit_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_business_unit_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_business_unit_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_business_unit_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_business_unit_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_business_unit_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_organization_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_organization_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_organization_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_organization_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_organization_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_organization_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_organization_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_organization_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_organization_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_organization_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_organization_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_organization_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_organization_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_organization_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_organization_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_organization_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_organization_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_organization_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_organization_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_organization_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_organization_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_organization_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_organization_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_organization_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Business_Unit-Document",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Business_Unit-Document-COND",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Business_Unit-Document-COND-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Business_Unit-Document-CONST",
    "Trigger": "Sequence: Business Unit --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Organization-Document",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Organization-Document-COND",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Organization-Document-COND-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Organization-Document-CONST",
    "Trigger": "Sequence: Organization --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Role-Document",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>).",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<subject_id> (<subject_class>) shall assesses the <object1_id> (<object1_class>), mitigates the <object2_id> (<object2_class>), validate the <object3_id> (<object3_class>), and produces the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<subject_id>",
      "<subject_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  }
]
