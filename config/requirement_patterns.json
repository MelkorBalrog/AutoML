[
  {
    "Pattern ID": "GOV-approves-Role-Document",
    "Trigger": "Gov: Role --[Approves]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"approve\")> '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Document-COND",
    "Trigger": "Gov: Role --[Approves]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"approve\")> '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Document-COND-CONST",
    "Trigger": "Gov: Role --[Approves]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"approve\")> '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Document-CONST",
    "Trigger": "Gov: Role --[Approves]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"approve\")> '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Policy",
    "Trigger": "Gov: Role --[Approves]--> Policy",
    "Template": "<object0_id> (<object0_class>) shall <action (\"approve\")> '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Policy-COND",
    "Trigger": "Gov: Role --[Approves]--> Policy",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"approve\")> '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Policy-COND-CONST",
    "Trigger": "Gov: Role --[Approves]--> Policy",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"approve\")> '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Policy-CONST",
    "Trigger": "Gov: Role --[Approves]--> Policy",
    "Template": "<object0_id> (<object0_class>) shall <action (\"approve\")> '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Procedure",
    "Trigger": "Gov: Role --[Approves]--> Procedure",
    "Template": "<object0_id> (<object0_class>) shall <action (\"approve\")> '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Procedure-COND",
    "Trigger": "Gov: Role --[Approves]--> Procedure",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"approve\")> '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Procedure-COND-CONST",
    "Trigger": "Gov: Role --[Approves]--> Procedure",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"approve\")> '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Procedure-CONST",
    "Trigger": "Gov: Role --[Approves]--> Procedure",
    "Template": "<object0_id> (<object0_class>) shall <action (\"approve\")> '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Record",
    "Trigger": "Gov: Role --[Approves]--> Record",
    "Template": "<object0_id> (<object0_class>) shall <action (\"approve\")> '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Record-COND",
    "Trigger": "Gov: Role --[Approves]--> Record",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"approve\")> '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Record-COND-CONST",
    "Trigger": "Gov: Role --[Approves]--> Record",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"approve\")> '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-approves-Role-Record-CONST",
    "Trigger": "Gov: Role --[Approves]--> Record",
    "Template": "<object0_id> (<object0_class>) shall <action (\"approve\")> '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Role-Procedure",
    "Trigger": "Gov: Role --[Audits]--> Procedure",
    "Template": "<object0_id> (<object0_class>) shall <action (\"audits\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Role-Procedure-COND",
    "Trigger": "Gov: Role --[Audits]--> Procedure",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"audits\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Role-Procedure-COND-CONST",
    "Trigger": "Gov: Role --[Audits]--> Procedure",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"audits\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Role-Procedure-CONST",
    "Trigger": "Gov: Role --[Audits]--> Procedure",
    "Template": "<object0_id> (<object0_class>) shall <action (\"audits\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Role-Process",
    "Trigger": "Gov: Role --[Audits]--> Process",
    "Template": "<object0_id> (<object0_class>) shall <action (\"audits\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Role-Process-COND",
    "Trigger": "Gov: Role --[Audits]--> Process",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"audits\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Role-Process-COND-CONST",
    "Trigger": "Gov: Role --[Audits]--> Process",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"audits\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Role-Process-CONST",
    "Trigger": "Gov: Role --[Audits]--> Process",
    "Template": "<object0_id> (<object0_class>) shall <action (\"audits\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Role-Record",
    "Trigger": "Gov: Role --[Audits]--> Record",
    "Template": "<object0_id> (<object0_class>) shall <action (\"audits\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Role-Record-COND",
    "Trigger": "Gov: Role --[Audits]--> Record",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"audits\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Role-Record-COND-CONST",
    "Trigger": "Gov: Role --[Audits]--> Record",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"audits\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-audits-Role-Record-CONST",
    "Trigger": "Gov: Role --[Audits]--> Record",
    "Template": "<object0_id> (<object0_class>) shall <action (\"audits\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Policy",
    "Trigger": "Gov: Organization --[Authorizes]--> Policy",
    "Template": "<object0_id> (<object0_class>) shall <action (\"authorizes\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Policy-COND",
    "Trigger": "Gov: Organization --[Authorizes]--> Policy",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"authorizes\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Policy-COND-CONST",
    "Trigger": "Gov: Organization --[Authorizes]--> Policy",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"authorizes\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Policy-CONST",
    "Trigger": "Gov: Organization --[Authorizes]--> Policy",
    "Template": "<object0_id> (<object0_class>) shall <action (\"authorizes\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Procedure",
    "Trigger": "Gov: Organization --[Authorizes]--> Procedure",
    "Template": "<object0_id> (<object0_class>) shall <action (\"authorizes\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Procedure-COND",
    "Trigger": "Gov: Organization --[Authorizes]--> Procedure",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"authorizes\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Procedure-COND-CONST",
    "Trigger": "Gov: Organization --[Authorizes]--> Procedure",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"authorizes\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Procedure-CONST",
    "Trigger": "Gov: Organization --[Authorizes]--> Procedure",
    "Template": "<object0_id> (<object0_class>) shall <action (\"authorizes\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Process",
    "Trigger": "Gov: Organization --[Authorizes]--> Process",
    "Template": "<object0_id> (<object0_class>) shall <action (\"authorizes\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Process-COND",
    "Trigger": "Gov: Organization --[Authorizes]--> Process",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"authorizes\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Process-COND-CONST",
    "Trigger": "Gov: Organization --[Authorizes]--> Process",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"authorizes\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Organization-Process-CONST",
    "Trigger": "Gov: Organization --[Authorizes]--> Process",
    "Template": "<object0_id> (<object0_class>) shall <action (\"authorizes\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Policy",
    "Trigger": "Gov: Role --[Authorizes]--> Policy",
    "Template": "<object0_id> (<object0_class>) shall <action (\"authorizes\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Policy-COND",
    "Trigger": "Gov: Role --[Authorizes]--> Policy",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"authorizes\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Policy-COND-CONST",
    "Trigger": "Gov: Role --[Authorizes]--> Policy",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"authorizes\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Policy-CONST",
    "Trigger": "Gov: Role --[Authorizes]--> Policy",
    "Template": "<object0_id> (<object0_class>) shall <action (\"authorizes\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Procedure",
    "Trigger": "Gov: Role --[Authorizes]--> Procedure",
    "Template": "<object0_id> (<object0_class>) shall <action (\"authorizes\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Procedure-COND",
    "Trigger": "Gov: Role --[Authorizes]--> Procedure",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"authorizes\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Procedure-COND-CONST",
    "Trigger": "Gov: Role --[Authorizes]--> Procedure",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"authorizes\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-authorizes-Role-Procedure-CONST",
    "Trigger": "Gov: Role --[Authorizes]--> Procedure",
    "Template": "<object0_id> (<object0_class>) shall <action (\"authorizes\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Business_Unit-Business_Unit",
    "Trigger": "Gov: Business Unit --[Communication Path]--> Business Unit",
    "Template": "<object0_id> (<object0_class>) shall <action (\"communicate with\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Business_Unit-Business_Unit-COND",
    "Trigger": "Gov: Business Unit --[Communication Path]--> Business Unit",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"communicate with\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Business_Unit-Business_Unit-COND-CONST",
    "Trigger": "Gov: Business Unit --[Communication Path]--> Business Unit",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"communicate with\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Business_Unit-Business_Unit-CONST",
    "Trigger": "Gov: Business Unit --[Communication Path]--> Business Unit",
    "Template": "<object0_id> (<object0_class>) shall <action (\"communicate with\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Organization-Business_Unit",
    "Trigger": "Gov: Organization --[Communication Path]--> Business Unit",
    "Template": "<object0_id> (<object0_class>) shall <action (\"communicate with\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Organization-Business_Unit-COND",
    "Trigger": "Gov: Organization --[Communication Path]--> Business Unit",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"communicate with\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Organization-Business_Unit-COND-CONST",
    "Trigger": "Gov: Organization --[Communication Path]--> Business Unit",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"communicate with\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Organization-Business_Unit-CONST",
    "Trigger": "Gov: Organization --[Communication Path]--> Business Unit",
    "Template": "<object0_id> (<object0_class>) shall <action (\"communicate with\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Organization-Organization",
    "Trigger": "Gov: Organization --[Communication Path]--> Organization",
    "Template": "<object0_id> (<object0_class>) shall <action (\"communicate with\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Organization-Organization-COND",
    "Trigger": "Gov: Organization --[Communication Path]--> Organization",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"communicate with\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Organization-Organization-COND-CONST",
    "Trigger": "Gov: Organization --[Communication Path]--> Organization",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"communicate with\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Organization-Organization-CONST",
    "Trigger": "Gov: Organization --[Communication Path]--> Organization",
    "Template": "<object0_id> (<object0_class>) shall <action (\"communicate with\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Business_Unit",
    "Trigger": "Gov: Role --[Communication Path]--> Business Unit",
    "Template": "<object0_id> (<object0_class>) shall <action (\"communicate with\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Business_Unit-COND",
    "Trigger": "Gov: Role --[Communication Path]--> Business Unit",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"communicate with\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Business_Unit-COND-CONST",
    "Trigger": "Gov: Role --[Communication Path]--> Business Unit",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"communicate with\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Business_Unit-CONST",
    "Trigger": "Gov: Role --[Communication Path]--> Business Unit",
    "Template": "<object0_id> (<object0_class>) shall <action (\"communicate with\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Organization",
    "Trigger": "Gov: Role --[Communication Path]--> Organization",
    "Template": "<object0_id> (<object0_class>) shall <action (\"communicate with\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Organization-COND",
    "Trigger": "Gov: Role --[Communication Path]--> Organization",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"communicate with\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Organization-COND-CONST",
    "Trigger": "Gov: Role --[Communication Path]--> Organization",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"communicate with\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Organization-CONST",
    "Trigger": "Gov: Role --[Communication Path]--> Organization",
    "Template": "<object0_id> (<object0_class>) shall <action (\"communicate with\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Role",
    "Trigger": "Gov: Role --[Communication Path]--> Role",
    "Template": "<object0_id> (<object0_class>) shall <action (\"communicate with\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Role-COND",
    "Trigger": "Gov: Role --[Communication Path]--> Role",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"communicate with\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Role-COND-CONST",
    "Trigger": "Gov: Role --[Communication Path]--> Role",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"communicate with\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-communication_path-Role-Role-CONST",
    "Trigger": "Gov: Role --[Communication Path]--> Role",
    "Template": "<object0_id> (<object0_class>) shall <action (\"communicate with\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Guideline",
    "Trigger": "Gov: Procedure --[Constrained by]--> Guideline",
    "Template": "<object0_id> (<object0_class>) shall <action (\"comply with\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Guideline-COND",
    "Trigger": "Gov: Procedure --[Constrained by]--> Guideline",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"comply with\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Guideline-COND-CONST",
    "Trigger": "Gov: Procedure --[Constrained by]--> Guideline",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"comply with\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Guideline-CONST",
    "Trigger": "Gov: Procedure --[Constrained by]--> Guideline",
    "Template": "<object0_id> (<object0_class>) shall <action (\"comply with\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Policy",
    "Trigger": "Gov: Procedure --[Constrained by]--> Policy",
    "Template": "<object0_id> (<object0_class>) shall <action (\"comply with\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Policy-COND",
    "Trigger": "Gov: Procedure --[Constrained by]--> Policy",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"comply with\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Policy-COND-CONST",
    "Trigger": "Gov: Procedure --[Constrained by]--> Policy",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"comply with\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Policy-CONST",
    "Trigger": "Gov: Procedure --[Constrained by]--> Policy",
    "Template": "<object0_id> (<object0_class>) shall <action (\"comply with\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Principle",
    "Trigger": "Gov: Procedure --[Constrained by]--> Principle",
    "Template": "<object0_id> (<object0_class>) shall <action (\"comply with\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Principle-COND",
    "Trigger": "Gov: Procedure --[Constrained by]--> Principle",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"comply with\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Principle-COND-CONST",
    "Trigger": "Gov: Procedure --[Constrained by]--> Principle",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"comply with\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Principle-CONST",
    "Trigger": "Gov: Procedure --[Constrained by]--> Principle",
    "Template": "<object0_id> (<object0_class>) shall <action (\"comply with\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Standard",
    "Trigger": "Gov: Procedure --[Constrained by]--> Standard",
    "Template": "<object0_id> (<object0_class>) shall <action (\"comply with\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Standard-COND",
    "Trigger": "Gov: Procedure --[Constrained by]--> Standard",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"comply with\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Standard-COND-CONST",
    "Trigger": "Gov: Procedure --[Constrained by]--> Standard",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"comply with\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-constrained_by-Procedure-Standard-CONST",
    "Trigger": "Gov: Procedure --[Constrained by]--> Standard",
    "Template": "<object0_id> (<object0_class>) shall <action (\"comply with\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-consumes-Process-Data",
    "Trigger": "Gov: Process --[Consumes]--> Data",
    "Template": "<object0_id> (<object0_class>) shall <action (\"consumes\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-consumes-Process-Data-COND",
    "Trigger": "Gov: Process --[Consumes]--> Data",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"consumes\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-consumes-Process-Data-COND-CONST",
    "Trigger": "Gov: Process --[Consumes]--> Data",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"consumes\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-consumes-Process-Data-CONST",
    "Trigger": "Gov: Process --[Consumes]--> Data",
    "Template": "<object0_id> (<object0_class>) shall <action (\"consumes\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-consumes-Process-Record",
    "Trigger": "Gov: Process --[Consumes]--> Record",
    "Template": "<object0_id> (<object0_class>) shall <action (\"consumes\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-consumes-Process-Record-COND",
    "Trigger": "Gov: Process --[Consumes]--> Record",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"consumes\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-consumes-Process-Record-COND-CONST",
    "Trigger": "Gov: Process --[Consumes]--> Record",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"consumes\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-consumes-Process-Record-CONST",
    "Trigger": "Gov: Process --[Consumes]--> Record",
    "Template": "<object0_id> (<object0_class>) shall <action (\"consumes\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-curation-Process-Data",
    "Trigger": "Gov: Process --[Curation]--> Data",
    "Template": "<object0_id> (<object0_class>) shall <action (\"curation\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-curation-Process-Data-COND",
    "Trigger": "Gov: Process --[Curation]--> Data",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"curation\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-curation-Process-Data-COND-CONST",
    "Trigger": "Gov: Process --[Curation]--> Data",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"curation\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-curation-Process-Data-CONST",
    "Trigger": "Gov: Process --[Curation]--> Data",
    "Template": "<object0_id> (<object0_class>) shall <action (\"curation\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-delivers-Process-Document",
    "Trigger": "Gov: Process --[Delivers]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"delivers\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-delivers-Process-Document-COND",
    "Trigger": "Gov: Process --[Delivers]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"delivers\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-delivers-Process-Document-COND-CONST",
    "Trigger": "Gov: Process --[Delivers]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"delivers\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-delivers-Process-Document-CONST",
    "Trigger": "Gov: Process --[Delivers]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"delivers\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-delivers-Process-Record",
    "Trigger": "Gov: Process --[Delivers]--> Record",
    "Template": "<object0_id> (<object0_class>) shall <action (\"delivers\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-delivers-Process-Record-COND",
    "Trigger": "Gov: Process --[Delivers]--> Record",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"delivers\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-delivers-Process-Record-COND-CONST",
    "Trigger": "Gov: Process --[Delivers]--> Record",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"delivers\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-delivers-Process-Record-CONST",
    "Trigger": "Gov: Process --[Delivers]--> Record",
    "Template": "<object0_id> (<object0_class>) shall <action (\"delivers\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-derived_from-Work_Product-Work_Product",
    "Trigger": "Gov: Work Product --[Derived from]--> Work Product",
    "Template": "<object0_id> (<object0_class>) shall <action (\"be derived from\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-derived_from-Work_Product-Work_Product-COND",
    "Trigger": "Gov: Work Product --[Derived from]--> Work Product",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"be derived from\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-derived_from-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Gov: Work Product --[Derived from]--> Work Product",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"be derived from\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-derived_from-Work_Product-Work_Product-CONST",
    "Trigger": "Gov: Work Product --[Derived from]--> Work Product",
    "Template": "<object0_id> (<object0_class>) shall <action (\"be derived from\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-executes-Role-Procedure",
    "Trigger": "Gov: Role --[Executes]--> Procedure",
    "Template": "<object0_id> (<object0_class>) shall <action (\"executes\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-executes-Role-Procedure-COND",
    "Trigger": "Gov: Role --[Executes]--> Procedure",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"executes\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-executes-Role-Procedure-COND-CONST",
    "Trigger": "Gov: Role --[Executes]--> Procedure",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"executes\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-executes-Role-Procedure-CONST",
    "Trigger": "Gov: Role --[Executes]--> Procedure",
    "Template": "<object0_id> (<object0_class>) shall <action (\"executes\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-executes-Role-Process",
    "Trigger": "Gov: Role --[Executes]--> Process",
    "Template": "<object0_id> (<object0_class>) shall <action (\"executes\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-executes-Role-Process-COND",
    "Trigger": "Gov: Role --[Executes]--> Process",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"executes\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-executes-Role-Process-COND-CONST",
    "Trigger": "Gov: Role --[Executes]--> Process",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"executes\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-executes-Role-Process-CONST",
    "Trigger": "Gov: Role --[Executes]--> Process",
    "Template": "<object0_id> (<object0_class>) shall <action (\"executes\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-extend-Policy-Policy",
    "Trigger": "Gov: Policy --[Extend]--> Policy",
    "Template": "<object0_id> (<object0_class>) shall <action (\"extend\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-extend-Policy-Policy-COND",
    "Trigger": "Gov: Policy --[Extend]--> Policy",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"extend\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-extend-Policy-Policy-COND-CONST",
    "Trigger": "Gov: Policy --[Extend]--> Policy",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"extend\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-extend-Policy-Policy-CONST",
    "Trigger": "Gov: Policy --[Extend]--> Policy",
    "Template": "<object0_id> (<object0_class>) shall <action (\"extend\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-extend-Standard-Standard",
    "Trigger": "Gov: Standard --[Extend]--> Standard",
    "Template": "<object0_id> (<object0_class>) shall <action (\"extend\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-extend-Standard-Standard-COND",
    "Trigger": "Gov: Standard --[Extend]--> Standard",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"extend\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-extend-Standard-Standard-COND-CONST",
    "Trigger": "Gov: Standard --[Extend]--> Standard",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"extend\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-extend-Standard-Standard-CONST",
    "Trigger": "Gov: Standard --[Extend]--> Standard",
    "Template": "<object0_id> (<object0_class>) shall <action (\"extend\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-AI_Database",
    "Trigger": "Gov: Action --[Flow]--> AI Database",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-AI_Database-COND",
    "Trigger": "Gov: Action --[Flow]--> AI Database",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-AI_Database-COND-CONST",
    "Trigger": "Gov: Action --[Flow]--> AI Database",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-AI_Database-CONST",
    "Trigger": "Gov: Action --[Flow]--> AI Database",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-ANN",
    "Trigger": "Gov: Action --[Flow]--> ANN",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-ANN-COND",
    "Trigger": "Gov: Action --[Flow]--> ANN",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-ANN-COND-CONST",
    "Trigger": "Gov: Action --[Flow]--> ANN",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-ANN-CONST",
    "Trigger": "Gov: Action --[Flow]--> ANN",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Action",
    "Trigger": "Gov: Action --[Flow]--> Action",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Action-COND",
    "Trigger": "Gov: Action --[Flow]--> Action",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Action-COND-CONST",
    "Trigger": "Gov: Action --[Flow]--> Action",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Action-CONST",
    "Trigger": "Gov: Action --[Flow]--> Action",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Data_acquisition",
    "Trigger": "Gov: Action --[Flow]--> Data acquisition",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Data_acquisition-COND",
    "Trigger": "Gov: Action --[Flow]--> Data acquisition",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Data_acquisition-COND-CONST",
    "Trigger": "Gov: Action --[Flow]--> Data acquisition",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Data_acquisition-CONST",
    "Trigger": "Gov: Action --[Flow]--> Data acquisition",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Decision",
    "Trigger": "Gov: Action --[Flow]--> Decision",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Decision-COND",
    "Trigger": "Gov: Action --[Flow]--> Decision",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Decision-COND-CONST",
    "Trigger": "Gov: Action --[Flow]--> Decision",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Decision-CONST",
    "Trigger": "Gov: Action --[Flow]--> Decision",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Final",
    "Trigger": "Gov: Action --[Flow]--> Final",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Final-COND",
    "Trigger": "Gov: Action --[Flow]--> Final",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Final-COND-CONST",
    "Trigger": "Gov: Action --[Flow]--> Final",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Final-CONST",
    "Trigger": "Gov: Action --[Flow]--> Final",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Merge",
    "Trigger": "Gov: Action --[Flow]--> Merge",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Merge-COND",
    "Trigger": "Gov: Action --[Flow]--> Merge",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Merge-COND-CONST",
    "Trigger": "Gov: Action --[Flow]--> Merge",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Action-Merge-CONST",
    "Trigger": "Gov: Action --[Flow]--> Merge",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-AI_Database",
    "Trigger": "Gov: Decision --[Flow]--> AI Database",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-AI_Database-COND",
    "Trigger": "Gov: Decision --[Flow]--> AI Database",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-AI_Database-COND-CONST",
    "Trigger": "Gov: Decision --[Flow]--> AI Database",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-AI_Database-CONST",
    "Trigger": "Gov: Decision --[Flow]--> AI Database",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-ANN",
    "Trigger": "Gov: Decision --[Flow]--> ANN",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-ANN-COND",
    "Trigger": "Gov: Decision --[Flow]--> ANN",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-ANN-COND-CONST",
    "Trigger": "Gov: Decision --[Flow]--> ANN",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-ANN-CONST",
    "Trigger": "Gov: Decision --[Flow]--> ANN",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Action",
    "Trigger": "Gov: Decision --[Flow]--> Action",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Action-COND",
    "Trigger": "Gov: Decision --[Flow]--> Action",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Action-COND-CONST",
    "Trigger": "Gov: Decision --[Flow]--> Action",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Action-CONST",
    "Trigger": "Gov: Decision --[Flow]--> Action",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Data_acquisition",
    "Trigger": "Gov: Decision --[Flow]--> Data acquisition",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Data_acquisition-COND",
    "Trigger": "Gov: Decision --[Flow]--> Data acquisition",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Data_acquisition-COND-CONST",
    "Trigger": "Gov: Decision --[Flow]--> Data acquisition",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Data_acquisition-CONST",
    "Trigger": "Gov: Decision --[Flow]--> Data acquisition",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Decision",
    "Trigger": "Gov: Decision --[Flow]--> Decision",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Decision-COND",
    "Trigger": "Gov: Decision --[Flow]--> Decision",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Decision-COND-CONST",
    "Trigger": "Gov: Decision --[Flow]--> Decision",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Decision-CONST",
    "Trigger": "Gov: Decision --[Flow]--> Decision",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Final",
    "Trigger": "Gov: Decision --[Flow]--> Final",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Final-COND",
    "Trigger": "Gov: Decision --[Flow]--> Final",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Final-COND-CONST",
    "Trigger": "Gov: Decision --[Flow]--> Final",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Final-CONST",
    "Trigger": "Gov: Decision --[Flow]--> Final",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Lifecycle_Phase",
    "Trigger": "Gov: Decision --[Flow]--> Lifecycle Phase",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Lifecycle_Phase-COND",
    "Trigger": "Gov: Decision --[Flow]--> Lifecycle Phase",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Lifecycle_Phase-COND-CONST",
    "Trigger": "Gov: Decision --[Flow]--> Lifecycle Phase",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Lifecycle_Phase-CONST",
    "Trigger": "Gov: Decision --[Flow]--> Lifecycle Phase",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Merge",
    "Trigger": "Gov: Decision --[Flow]--> Merge",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Merge-COND",
    "Trigger": "Gov: Decision --[Flow]--> Merge",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Merge-COND-CONST",
    "Trigger": "Gov: Decision --[Flow]--> Merge",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Decision-Merge-CONST",
    "Trigger": "Gov: Decision --[Flow]--> Merge",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-AI_Database",
    "Trigger": "Gov: Initial --[Flow]--> AI Database",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-AI_Database-COND",
    "Trigger": "Gov: Initial --[Flow]--> AI Database",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-AI_Database-COND-CONST",
    "Trigger": "Gov: Initial --[Flow]--> AI Database",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-AI_Database-CONST",
    "Trigger": "Gov: Initial --[Flow]--> AI Database",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-ANN",
    "Trigger": "Gov: Initial --[Flow]--> ANN",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-ANN-COND",
    "Trigger": "Gov: Initial --[Flow]--> ANN",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-ANN-COND-CONST",
    "Trigger": "Gov: Initial --[Flow]--> ANN",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-ANN-CONST",
    "Trigger": "Gov: Initial --[Flow]--> ANN",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Action",
    "Trigger": "Gov: Initial --[Flow]--> Action",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Action-COND",
    "Trigger": "Gov: Initial --[Flow]--> Action",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Action-COND-CONST",
    "Trigger": "Gov: Initial --[Flow]--> Action",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Action-CONST",
    "Trigger": "Gov: Initial --[Flow]--> Action",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Data_acquisition",
    "Trigger": "Gov: Initial --[Flow]--> Data acquisition",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Data_acquisition-COND",
    "Trigger": "Gov: Initial --[Flow]--> Data acquisition",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Data_acquisition-COND-CONST",
    "Trigger": "Gov: Initial --[Flow]--> Data acquisition",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Data_acquisition-CONST",
    "Trigger": "Gov: Initial --[Flow]--> Data acquisition",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Decision",
    "Trigger": "Gov: Initial --[Flow]--> Decision",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Decision-COND",
    "Trigger": "Gov: Initial --[Flow]--> Decision",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Decision-COND-CONST",
    "Trigger": "Gov: Initial --[Flow]--> Decision",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Decision-CONST",
    "Trigger": "Gov: Initial --[Flow]--> Decision",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Merge",
    "Trigger": "Gov: Initial --[Flow]--> Merge",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Merge-COND",
    "Trigger": "Gov: Initial --[Flow]--> Merge",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Merge-COND-CONST",
    "Trigger": "Gov: Initial --[Flow]--> Merge",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Initial-Merge-CONST",
    "Trigger": "Gov: Initial --[Flow]--> Merge",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-AI_Database",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> AI Database",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-AI_Database-COND",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> AI Database",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-AI_Database-COND-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> AI Database",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-AI_Database-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> AI Database",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-ANN",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> ANN",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-ANN-COND",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> ANN",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-ANN-COND-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> ANN",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-ANN-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> ANN",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Action",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Action",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Action-COND",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Action",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Action-COND-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Action",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Action-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Action",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Data_acquisition",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Data acquisition",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Data_acquisition-COND",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Data acquisition",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Data_acquisition-COND-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Data acquisition",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Data_acquisition-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Data acquisition",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Decision",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Decision",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Decision-COND",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Decision",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Decision-COND-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Decision",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Decision-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Decision",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Final",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Final",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Final-COND",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Final",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Final-COND-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Final",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Final-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Final",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Merge",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Merge",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Merge-COND",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Merge",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Merge-COND-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Merge",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Lifecycle_Phase-Merge-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Flow]--> Merge",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-AI_Database",
    "Trigger": "Gov: Merge --[Flow]--> AI Database",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-AI_Database-COND",
    "Trigger": "Gov: Merge --[Flow]--> AI Database",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-AI_Database-COND-CONST",
    "Trigger": "Gov: Merge --[Flow]--> AI Database",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-AI_Database-CONST",
    "Trigger": "Gov: Merge --[Flow]--> AI Database",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-ANN",
    "Trigger": "Gov: Merge --[Flow]--> ANN",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-ANN-COND",
    "Trigger": "Gov: Merge --[Flow]--> ANN",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-ANN-COND-CONST",
    "Trigger": "Gov: Merge --[Flow]--> ANN",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-ANN-CONST",
    "Trigger": "Gov: Merge --[Flow]--> ANN",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Action",
    "Trigger": "Gov: Merge --[Flow]--> Action",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Action-COND",
    "Trigger": "Gov: Merge --[Flow]--> Action",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Action-COND-CONST",
    "Trigger": "Gov: Merge --[Flow]--> Action",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Action-CONST",
    "Trigger": "Gov: Merge --[Flow]--> Action",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Data_acquisition",
    "Trigger": "Gov: Merge --[Flow]--> Data acquisition",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Data_acquisition-COND",
    "Trigger": "Gov: Merge --[Flow]--> Data acquisition",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Data_acquisition-COND-CONST",
    "Trigger": "Gov: Merge --[Flow]--> Data acquisition",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Data_acquisition-CONST",
    "Trigger": "Gov: Merge --[Flow]--> Data acquisition",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Decision",
    "Trigger": "Gov: Merge --[Flow]--> Decision",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Decision-COND",
    "Trigger": "Gov: Merge --[Flow]--> Decision",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Decision-COND-CONST",
    "Trigger": "Gov: Merge --[Flow]--> Decision",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Decision-CONST",
    "Trigger": "Gov: Merge --[Flow]--> Decision",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Merge",
    "Trigger": "Gov: Merge --[Flow]--> Merge",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Merge-COND",
    "Trigger": "Gov: Merge --[Flow]--> Merge",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Merge-COND-CONST",
    "Trigger": "Gov: Merge --[Flow]--> Merge",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-flow-Merge-Merge-CONST",
    "Trigger": "Gov: Merge --[Flow]--> Merge",
    "Template": "<object0_id> (<object0_class>) shall <action (\"flow to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-generalize-Policy-Policy",
    "Trigger": "Gov: Policy --[Generalize]--> Policy",
    "Template": "<object0_id> (<object0_class>) shall <action (\"generalize\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-generalize-Policy-Policy-COND",
    "Trigger": "Gov: Policy --[Generalize]--> Policy",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"generalize\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-generalize-Policy-Policy-COND-CONST",
    "Trigger": "Gov: Policy --[Generalize]--> Policy",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"generalize\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-generalize-Policy-Policy-CONST",
    "Trigger": "Gov: Policy --[Generalize]--> Policy",
    "Template": "<object0_id> (<object0_class>) shall <action (\"generalize\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-generalize-Standard-Standard",
    "Trigger": "Gov: Standard --[Generalize]--> Standard",
    "Template": "<object0_id> (<object0_class>) shall <action (\"generalize\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-generalize-Standard-Standard-COND",
    "Trigger": "Gov: Standard --[Generalize]--> Standard",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"generalize\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-generalize-Standard-Standard-COND-CONST",
    "Trigger": "Gov: Standard --[Generalize]--> Standard",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"generalize\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-generalize-Standard-Standard-CONST",
    "Trigger": "Gov: Standard --[Generalize]--> Standard",
    "Template": "<object0_id> (<object0_class>) shall <action (\"generalize\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Activity",
    "Trigger": "Gov: Role --[Monitors]--> Activity",
    "Template": "<object0_id> (<object0_class>) shall <action (\"monitors\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Activity-COND",
    "Trigger": "Gov: Role --[Monitors]--> Activity",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"monitors\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Activity-COND-CONST",
    "Trigger": "Gov: Role --[Monitors]--> Activity",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"monitors\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Activity-CONST",
    "Trigger": "Gov: Role --[Monitors]--> Activity",
    "Template": "<object0_id> (<object0_class>) shall <action (\"monitors\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Metric",
    "Trigger": "Gov: Role --[Monitors]--> Metric",
    "Template": "<object0_id> (<object0_class>) shall <action (\"monitors\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Metric-COND",
    "Trigger": "Gov: Role --[Monitors]--> Metric",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"monitors\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Metric-COND-CONST",
    "Trigger": "Gov: Role --[Monitors]--> Metric",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"monitors\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Metric-CONST",
    "Trigger": "Gov: Role --[Monitors]--> Metric",
    "Template": "<object0_id> (<object0_class>) shall <action (\"monitors\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Process",
    "Trigger": "Gov: Role --[Monitors]--> Process",
    "Template": "<object0_id> (<object0_class>) shall <action (\"monitors\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Process-COND",
    "Trigger": "Gov: Role --[Monitors]--> Process",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"monitors\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Process-COND-CONST",
    "Trigger": "Gov: Role --[Monitors]--> Process",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"monitors\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-monitors-Role-Process-CONST",
    "Trigger": "Gov: Role --[Monitors]--> Process",
    "Template": "<object0_id> (<object0_class>) shall <action (\"monitors\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-performs-Role-Activity",
    "Trigger": "Gov: Role --[Performs]--> Activity",
    "Template": "<object0_id> (<object0_class>) shall <action (\"perform\")> '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-performs-Role-Activity-COND",
    "Trigger": "Gov: Role --[Performs]--> Activity",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"perform\")> '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-performs-Role-Activity-COND-CONST",
    "Trigger": "Gov: Role --[Performs]--> Activity",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"perform\")> '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-performs-Role-Activity-CONST",
    "Trigger": "Gov: Role --[Performs]--> Activity",
    "Template": "<object0_id> (<object0_class>) shall <action (\"perform\")> '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-performs-Role-Procedure",
    "Trigger": "Gov: Role --[Performs]--> Procedure",
    "Template": "<object0_id> (<object0_class>) shall <action (\"perform\")> '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-performs-Role-Procedure-COND",
    "Trigger": "Gov: Role --[Performs]--> Procedure",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"perform\")> '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-performs-Role-Procedure-COND-CONST",
    "Trigger": "Gov: Role --[Performs]--> Procedure",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"perform\")> '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-performs-Role-Procedure-CONST",
    "Trigger": "Gov: Role --[Performs]--> Procedure",
    "Template": "<object0_id> (<object0_class>) shall <action (\"perform\")> '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-performs-Role-Task",
    "Trigger": "Gov: Role --[Performs]--> Task",
    "Template": "<object0_id> (<object0_class>) shall <action (\"perform\")> '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-performs-Role-Task-COND",
    "Trigger": "Gov: Role --[Performs]--> Task",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"perform\")> '<object1_id> (<object1_class>)'.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-performs-Role-Task-COND-CONST",
    "Trigger": "Gov: Role --[Performs]--> Task",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"perform\")> '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-performs-Role-Task-CONST",
    "Trigger": "Gov: Role --[Performs]--> Task",
    "Template": "<object0_id> (<object0_class>) shall <action (\"perform\")> '<object1_id> (<object1_class>)' constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Process-Data",
    "Trigger": "Gov: Process --[Produces]--> Data",
    "Template": "<object0_id> (<object0_class>) shall <action (\"produces\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Process-Data-COND",
    "Trigger": "Gov: Process --[Produces]--> Data",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"produces\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Process-Data-COND-CONST",
    "Trigger": "Gov: Process --[Produces]--> Data",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"produces\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Process-Data-CONST",
    "Trigger": "Gov: Process --[Produces]--> Data",
    "Template": "<object0_id> (<object0_class>) shall <action (\"produces\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Process-Document",
    "Trigger": "Gov: Process --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"produces\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Process-Document-COND",
    "Trigger": "Gov: Process --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"produces\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Process-Document-COND-CONST",
    "Trigger": "Gov: Process --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"produces\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Process-Document-CONST",
    "Trigger": "Gov: Process --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"produces\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Process-Record",
    "Trigger": "Gov: Process --[Produces]--> Record",
    "Template": "<object0_id> (<object0_class>) shall <action (\"produces\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Process-Record-COND",
    "Trigger": "Gov: Process --[Produces]--> Record",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"produces\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Process-Record-COND-CONST",
    "Trigger": "Gov: Process --[Produces]--> Record",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"produces\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-produces-Process-Record-CONST",
    "Trigger": "Gov: Process --[Produces]--> Record",
    "Template": "<object0_id> (<object0_class>) shall <action (\"produces\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-propagate-Work_Product-Work_Product",
    "Trigger": "Gov: Work Product --[Propagate]--> Work Product",
    "Template": "<object0_id> (<object0_class>) shall <action (\"propagate\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-propagate-Work_Product-Work_Product-COND",
    "Trigger": "Gov: Work Product --[Propagate]--> Work Product",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"propagate\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-propagate-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Gov: Work Product --[Propagate]--> Work Product",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"propagate\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-propagate-Work_Product-Work_Product-CONST",
    "Trigger": "Gov: Work Product --[Propagate]--> Work Product",
    "Template": "<object0_id> (<object0_class>) shall <action (\"propagate\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-propagate_by_approval-Work_Product-Work_Product",
    "Trigger": "Gov: Work Product --[Propagate by Approval]--> Work Product",
    "Template": "<object0_id> (<object0_class>) shall <action (\"propagate by approval\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-propagate_by_approval-Work_Product-Work_Product-COND",
    "Trigger": "Gov: Work Product --[Propagate by Approval]--> Work Product",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"propagate by approval\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-propagate_by_approval-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Gov: Work Product --[Propagate by Approval]--> Work Product",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"propagate by approval\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-propagate_by_approval-Work_Product-Work_Product-CONST",
    "Trigger": "Gov: Work Product --[Propagate by Approval]--> Work Product",
    "Template": "<object0_id> (<object0_class>) shall <action (\"propagate by approval\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-propagate_by_review-Work_Product-Work_Product",
    "Trigger": "Gov: Work Product --[Propagate by Review]--> Work Product",
    "Template": "<object0_id> (<object0_class>) shall <action (\"propagate by review\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-propagate_by_review-Work_Product-Work_Product-COND",
    "Trigger": "Gov: Work Product --[Propagate by Review]--> Work Product",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"propagate by review\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-propagate_by_review-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Gov: Work Product --[Propagate by Review]--> Work Product",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"propagate by review\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-propagate_by_review-Work_Product-Work_Product-CONST",
    "Trigger": "Gov: Work Product --[Propagate by Review]--> Work Product",
    "Template": "<object0_id> (<object0_class>) shall <action (\"propagate by review\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-re-use-Lifecycle_Phase-Lifecycle_Phase",
    "Trigger": "Gov: Lifecycle Phase --[Re-use]--> Lifecycle Phase",
    "Template": "<object0_id> (<object0_class>) shall <action (\"re-use\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-re-use-Lifecycle_Phase-Lifecycle_Phase-COND",
    "Trigger": "Gov: Lifecycle Phase --[Re-use]--> Lifecycle Phase",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"re-use\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-re-use-Lifecycle_Phase-Lifecycle_Phase-COND-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Re-use]--> Lifecycle Phase",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"re-use\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-re-use-Lifecycle_Phase-Lifecycle_Phase-CONST",
    "Trigger": "Gov: Lifecycle Phase --[Re-use]--> Lifecycle Phase",
    "Template": "<object0_id> (<object0_class>) shall <action (\"re-use\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-re-use-Work_Product-Lifecycle_Phase",
    "Trigger": "Gov: Work Product --[Re-use]--> Lifecycle Phase",
    "Template": "<object0_id> (<object0_class>) shall <action (\"re-use\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-re-use-Work_Product-Lifecycle_Phase-COND",
    "Trigger": "Gov: Work Product --[Re-use]--> Lifecycle Phase",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"re-use\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-re-use-Work_Product-Lifecycle_Phase-COND-CONST",
    "Trigger": "Gov: Work Product --[Re-use]--> Lifecycle Phase",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"re-use\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-re-use-Work_Product-Lifecycle_Phase-CONST",
    "Trigger": "Gov: Work Product --[Re-use]--> Lifecycle Phase",
    "Template": "<object0_id> (<object0_class>) shall <action (\"re-use\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Activity",
    "Trigger": "Gov: Role --[Responsible for]--> Activity",
    "Template": "<object0_id> (<object0_class>) shall <action (\"responsible for\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Activity-COND",
    "Trigger": "Gov: Role --[Responsible for]--> Activity",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"responsible for\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Activity-COND-CONST",
    "Trigger": "Gov: Role --[Responsible for]--> Activity",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"responsible for\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Activity-CONST",
    "Trigger": "Gov: Role --[Responsible for]--> Activity",
    "Template": "<object0_id> (<object0_class>) shall <action (\"responsible for\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Process",
    "Trigger": "Gov: Role --[Responsible for]--> Process",
    "Template": "<object0_id> (<object0_class>) shall <action (\"responsible for\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Process-COND",
    "Trigger": "Gov: Role --[Responsible for]--> Process",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"responsible for\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Process-COND-CONST",
    "Trigger": "Gov: Role --[Responsible for]--> Process",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"responsible for\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Process-CONST",
    "Trigger": "Gov: Role --[Responsible for]--> Process",
    "Template": "<object0_id> (<object0_class>) shall <action (\"responsible for\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Task",
    "Trigger": "Gov: Role --[Responsible for]--> Task",
    "Template": "<object0_id> (<object0_class>) shall <action (\"responsible for\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Task-COND",
    "Trigger": "Gov: Role --[Responsible for]--> Task",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"responsible for\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Task-COND-CONST",
    "Trigger": "Gov: Role --[Responsible for]--> Task",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"responsible for\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-responsible_for-Role-Task-CONST",
    "Trigger": "Gov: Role --[Responsible for]--> Task",
    "Template": "<object0_id> (<object0_class>) shall <action (\"responsible for\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-satisfied_by-Work_Product-Work_Product",
    "Trigger": "Gov: Work Product --[Satisfied by]--> Work Product",
    "Template": "<object0_id> (<object0_class>) shall <action (\"be satisfied by\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-satisfied_by-Work_Product-Work_Product-COND",
    "Trigger": "Gov: Work Product --[Satisfied by]--> Work Product",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"be satisfied by\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-satisfied_by-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Gov: Work Product --[Satisfied by]--> Work Product",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"be satisfied by\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-satisfied_by-Work_Product-Work_Product-CONST",
    "Trigger": "Gov: Work Product --[Satisfied by]--> Work Product",
    "Template": "<object0_id> (<object0_class>) shall <action (\"be satisfied by\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-trace-Work_Product-Work_Product",
    "Trigger": "Gov: Work Product --[Trace]--> Work Product",
    "Template": "<object0_id> (<object0_class>) shall <action (\"trace to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-trace-Work_Product-Work_Product-COND",
    "Trigger": "Gov: Work Product --[Trace]--> Work Product",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"trace to\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-trace-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Gov: Work Product --[Trace]--> Work Product",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"trace to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-trace-Work_Product-Work_Product-CONST",
    "Trigger": "Gov: Work Product --[Trace]--> Work Product",
    "Template": "<object0_id> (<object0_class>) shall <action (\"trace to\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-used_after_approval-Work_Product-Work_Product",
    "Trigger": "Gov: Work Product --[Used after Approval]--> Work Product",
    "Template": "<object0_id> (<object0_class>) shall <action (\"be used after approval\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-used_after_approval-Work_Product-Work_Product-COND",
    "Trigger": "Gov: Work Product --[Used after Approval]--> Work Product",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"be used after approval\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-used_after_approval-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Gov: Work Product --[Used after Approval]--> Work Product",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"be used after approval\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-used_after_approval-Work_Product-Work_Product-CONST",
    "Trigger": "Gov: Work Product --[Used after Approval]--> Work Product",
    "Template": "<object0_id> (<object0_class>) shall <action (\"be used after approval\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-used_after_review-Work_Product-Work_Product",
    "Trigger": "Gov: Work Product --[Used after Review]--> Work Product",
    "Template": "<object0_id> (<object0_class>) shall <action (\"be used after review\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-used_after_review-Work_Product-Work_Product-COND",
    "Trigger": "Gov: Work Product --[Used after Review]--> Work Product",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"be used after review\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-used_after_review-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Gov: Work Product --[Used after Review]--> Work Product",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"be used after review\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-used_after_review-Work_Product-Work_Product-CONST",
    "Trigger": "Gov: Work Product --[Used after Review]--> Work Product",
    "Template": "<object0_id> (<object0_class>) shall <action (\"be used after review\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-used_by-Work_Product-Work_Product",
    "Trigger": "Gov: Work Product --[Used By]--> Work Product",
    "Template": "<object0_id> (<object0_class>) shall <action (\"be used by\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-used_by-Work_Product-Work_Product-COND",
    "Trigger": "Gov: Work Product --[Used By]--> Work Product",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"be used by\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-used_by-Work_Product-Work_Product-COND-CONST",
    "Trigger": "Gov: Work Product --[Used By]--> Work Product",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"be used by\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-used_by-Work_Product-Work_Product-CONST",
    "Trigger": "Gov: Work Product --[Used By]--> Work Product",
    "Template": "<object0_id> (<object0_class>) shall <action (\"be used by\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Data",
    "Trigger": "Gov: Role --[Uses]--> Data",
    "Template": "<object0_id> (<object0_class>) shall <action (\"uses\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Data-COND",
    "Trigger": "Gov: Role --[Uses]--> Data",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"uses\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Data-COND-CONST",
    "Trigger": "Gov: Role --[Uses]--> Data",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"uses\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Data-CONST",
    "Trigger": "Gov: Role --[Uses]--> Data",
    "Template": "<object0_id> (<object0_class>) shall <action (\"uses\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Document",
    "Trigger": "Gov: Role --[Uses]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"uses\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Document-COND",
    "Trigger": "Gov: Role --[Uses]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"uses\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Document-COND-CONST",
    "Trigger": "Gov: Role --[Uses]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"uses\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Document-CONST",
    "Trigger": "Gov: Role --[Uses]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"uses\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Record",
    "Trigger": "Gov: Role --[Uses]--> Record",
    "Template": "<object0_id> (<object0_class>) shall <action (\"uses\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Record-COND",
    "Trigger": "Gov: Role --[Uses]--> Record",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"uses\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Record-COND-CONST",
    "Trigger": "Gov: Role --[Uses]--> Record",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"uses\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "GOV-uses-Role-Record-CONST",
    "Trigger": "Gov: Role --[Uses]--> Record",
    "Template": "<object0_id> (<object0_class>) shall <action (\"uses\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<owner>",
      "<due_date>",
      "<evidence_ref>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Governance)."
  },
  {
    "Pattern ID": "SA-acquisition-AI_Database-Data_acquisition",
    "Trigger": "Safety&AI: AI Database --[Acquisition]--> Data acquisition",
    "Template": "Engineering team shall <action (\"acquire\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-acquisition-AI_Database-Data_acquisition-COND",
    "Trigger": "Safety&AI: AI Database --[Acquisition]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall <action (\"acquire\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-acquisition-AI_Database-Data_acquisition-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Acquisition]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall <action (\"acquire\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-acquisition-AI_Database-Data_acquisition-CONST",
    "Trigger": "Safety&AI: AI Database --[Acquisition]--> Data acquisition",
    "Template": "Engineering team shall <action (\"acquire\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-acquisition-AI_Database-Data_acquisition-ROLE",
    "Trigger": "Safety&AI: AI Database --[Acquisition]--> Data acquisition",
    "Template": "<object0_id> (<object0_class>) shall <action (\"acquire\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-acquisition-AI_Database-Data_acquisition-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Acquisition]--> Data acquisition",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"acquire\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-acquisition-AI_Database-Data_acquisition-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Acquisition]--> Data acquisition",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"acquire\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-acquisition-AI_Database-Data_acquisition-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Acquisition]--> Data acquisition",
    "Template": "<object0_id> (<object0_class>) shall <action (\"acquire\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_re-training-AI_Database-ANN",
    "Trigger": "Safety&AI: AI Database --[AI re-training]--> ANN",
    "Template": "Engineering team shall <action (\"retrain\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_re-training-AI_Database-ANN-COND",
    "Trigger": "Safety&AI: AI Database --[AI re-training]--> ANN",
    "Template": "When <condition>, Engineering team shall <action (\"retrain\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_re-training-AI_Database-ANN-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[AI re-training]--> ANN",
    "Template": "When <condition>, Engineering team shall <action (\"retrain\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_re-training-AI_Database-ANN-CONST",
    "Trigger": "Safety&AI: AI Database --[AI re-training]--> ANN",
    "Template": "Engineering team shall <action (\"retrain\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_re-training-AI_Database-ANN-ROLE",
    "Trigger": "Safety&AI: AI Database --[AI re-training]--> ANN",
    "Template": "<object0_id> (<object0_class>) shall <action (\"retrain\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_re-training-AI_Database-ANN-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[AI re-training]--> ANN",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"retrain\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_re-training-AI_Database-ANN-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[AI re-training]--> ANN",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"retrain\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_re-training-AI_Database-ANN-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[AI re-training]--> ANN",
    "Template": "<object0_id> (<object0_class>) shall <action (\"retrain\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_training-AI_Database-ANN",
    "Trigger": "Safety&AI: AI Database --[AI training]--> ANN",
    "Template": "Engineering team shall <action (\"train\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_training-AI_Database-ANN-COND",
    "Trigger": "Safety&AI: AI Database --[AI training]--> ANN",
    "Template": "When <condition>, Engineering team shall <action (\"train\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_training-AI_Database-ANN-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[AI training]--> ANN",
    "Template": "When <condition>, Engineering team shall <action (\"train\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_training-AI_Database-ANN-CONST",
    "Trigger": "Safety&AI: AI Database --[AI training]--> ANN",
    "Template": "Engineering team shall <action (\"train\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_training-AI_Database-ANN-ROLE",
    "Trigger": "Safety&AI: AI Database --[AI training]--> ANN",
    "Template": "<object0_id> (<object0_class>) shall <action (\"train\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_training-AI_Database-ANN-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[AI training]--> ANN",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"train\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_training-AI_Database-ANN-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[AI training]--> ANN",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"train\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ai_training-AI_Database-ANN-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[AI training]--> ANN",
    "Template": "<object0_id> (<object0_class>) shall <action (\"train\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-annotation-ANN-AI_Database",
    "Trigger": "Safety&AI: ANN --[Annotation]--> AI Database",
    "Template": "Engineering team shall <action (\"annotate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-annotation-ANN-AI_Database-COND",
    "Trigger": "Safety&AI: ANN --[Annotation]--> AI Database",
    "Template": "When <condition>, Engineering team shall <action (\"annotate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-annotation-ANN-AI_Database-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Annotation]--> AI Database",
    "Template": "When <condition>, Engineering team shall <action (\"annotate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-annotation-ANN-AI_Database-CONST",
    "Trigger": "Safety&AI: ANN --[Annotation]--> AI Database",
    "Template": "Engineering team shall <action (\"annotate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-annotation-ANN-AI_Database-ROLE",
    "Trigger": "Safety&AI: ANN --[Annotation]--> AI Database",
    "Template": "<object0_id> (<object0_class>) shall <action (\"annotate\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-annotation-ANN-AI_Database-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Annotation]--> AI Database",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"annotate\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-annotation-ANN-AI_Database-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Annotation]--> AI Database",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"annotate\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-annotation-ANN-AI_Database-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Annotation]--> AI Database",
    "Template": "<object0_id> (<object0_class>) shall <action (\"annotate\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-assesses-Field_Data-Risk_Assessment",
    "Trigger": "Safety&AI: Field Data --[Assesses]--> Risk Assessment",
    "Template": "Engineering team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-assesses-Field_Data-Risk_Assessment-COND",
    "Trigger": "Safety&AI: Field Data --[Assesses]--> Risk Assessment",
    "Template": "When <condition>, Engineering team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-assesses-Field_Data-Risk_Assessment-COND-CONST",
    "Trigger": "Safety&AI: Field Data --[Assesses]--> Risk Assessment",
    "Template": "When <condition>, Engineering team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-assesses-Field_Data-Risk_Assessment-CONST",
    "Trigger": "Safety&AI: Field Data --[Assesses]--> Risk Assessment",
    "Template": "Engineering team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-assesses-Field_Data-Risk_Assessment-ROLE",
    "Trigger": "Safety&AI: Field Data --[Assesses]--> Risk Assessment",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-assesses-Field_Data-Risk_Assessment-ROLE-COND",
    "Trigger": "Safety&AI: Field Data --[Assesses]--> Risk Assessment",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-assesses-Field_Data-Risk_Assessment-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Field Data --[Assesses]--> Risk Assessment",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-assesses-Field_Data-Risk_Assessment-ROLE-CONST",
    "Trigger": "Safety&AI: Field Data --[Assesses]--> Risk Assessment",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-assesses-Hazard-Risk_Assessment",
    "Trigger": "Safety&AI: Hazard --[Assesses]--> Risk Assessment",
    "Template": "Engineering team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-assesses-Hazard-Risk_Assessment-COND",
    "Trigger": "Safety&AI: Hazard --[Assesses]--> Risk Assessment",
    "Template": "When <condition>, Engineering team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-assesses-Hazard-Risk_Assessment-COND-CONST",
    "Trigger": "Safety&AI: Hazard --[Assesses]--> Risk Assessment",
    "Template": "When <condition>, Engineering team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-assesses-Hazard-Risk_Assessment-CONST",
    "Trigger": "Safety&AI: Hazard --[Assesses]--> Risk Assessment",
    "Template": "Engineering team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-assesses-Hazard-Risk_Assessment-ROLE",
    "Trigger": "Safety&AI: Hazard --[Assesses]--> Risk Assessment",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-assesses-Hazard-Risk_Assessment-ROLE-COND",
    "Trigger": "Safety&AI: Hazard --[Assesses]--> Risk Assessment",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-assesses-Hazard-Risk_Assessment-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Hazard --[Assesses]--> Risk Assessment",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-assesses-Hazard-Risk_Assessment-ROLE-CONST",
    "Trigger": "Safety&AI: Hazard --[Assesses]--> Risk Assessment",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-assesses-Security_Threat-Risk_Assessment",
    "Trigger": "Safety&AI: Security Threat --[Assesses]--> Risk Assessment",
    "Template": "Engineering team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-assesses-Security_Threat-Risk_Assessment-COND",
    "Trigger": "Safety&AI: Security Threat --[Assesses]--> Risk Assessment",
    "Template": "When <condition>, Engineering team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-assesses-Security_Threat-Risk_Assessment-COND-CONST",
    "Trigger": "Safety&AI: Security Threat --[Assesses]--> Risk Assessment",
    "Template": "When <condition>, Engineering team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-assesses-Security_Threat-Risk_Assessment-CONST",
    "Trigger": "Safety&AI: Security Threat --[Assesses]--> Risk Assessment",
    "Template": "Engineering team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-assesses-Security_Threat-Risk_Assessment-ROLE",
    "Trigger": "Safety&AI: Security Threat --[Assesses]--> Risk Assessment",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-assesses-Security_Threat-Risk_Assessment-ROLE-COND",
    "Trigger": "Safety&AI: Security Threat --[Assesses]--> Risk Assessment",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-assesses-Security_Threat-Risk_Assessment-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Security Threat --[Assesses]--> Risk Assessment",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-assesses-Security_Threat-Risk_Assessment-ROLE-CONST",
    "Trigger": "Safety&AI: Security Threat --[Assesses]--> Risk Assessment",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Process-Report",
    "Trigger": "Safety&AI: Process --[Audits]--> Report",
    "Template": "Engineering team shall <action (\"audit\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Process-Report-COND",
    "Trigger": "Safety&AI: Process --[Audits]--> Report",
    "Template": "When <condition>, Engineering team shall <action (\"audit\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Process-Report-COND-CONST",
    "Trigger": "Safety&AI: Process --[Audits]--> Report",
    "Template": "When <condition>, Engineering team shall <action (\"audit\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Process-Report-CONST",
    "Trigger": "Safety&AI: Process --[Audits]--> Report",
    "Template": "Engineering team shall <action (\"audit\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Process-Report-ROLE",
    "Trigger": "Safety&AI: Process --[Audits]--> Report",
    "Template": "<object0_id> (<object0_class>) shall <action (\"audit\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Process-Report-ROLE-COND",
    "Trigger": "Safety&AI: Process --[Audits]--> Report",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"audit\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Process-Report-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Process --[Audits]--> Report",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"audit\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-audits-Process-Report-ROLE-CONST",
    "Trigger": "Safety&AI: Process --[Audits]--> Report",
    "Template": "<object0_id> (<object0_class>) shall <action (\"audit\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-augmentation-ANN-AI_Database",
    "Trigger": "Safety&AI: ANN --[Augmentation]--> AI Database",
    "Template": "Engineering team shall <action (\"augment\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-augmentation-ANN-AI_Database-COND",
    "Trigger": "Safety&AI: ANN --[Augmentation]--> AI Database",
    "Template": "When <condition>, Engineering team shall <action (\"augment\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-augmentation-ANN-AI_Database-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Augmentation]--> AI Database",
    "Template": "When <condition>, Engineering team shall <action (\"augment\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-augmentation-ANN-AI_Database-CONST",
    "Trigger": "Safety&AI: ANN --[Augmentation]--> AI Database",
    "Template": "Engineering team shall <action (\"augment\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-augmentation-ANN-AI_Database-ROLE",
    "Trigger": "Safety&AI: ANN --[Augmentation]--> AI Database",
    "Template": "<object0_id> (<object0_class>) shall <action (\"augment\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-augmentation-ANN-AI_Database-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Augmentation]--> AI Database",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"augment\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-augmentation-ANN-AI_Database-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Augmentation]--> AI Database",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"augment\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-augmentation-ANN-AI_Database-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Augmentation]--> AI Database",
    "Template": "<object0_id> (<object0_class>) shall <action (\"augment\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-AI_Database-Policy",
    "Trigger": "Safety&AI: AI Database --[Complies with]--> Policy",
    "Template": "Engineering team shall <action (\"comply with\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-AI_Database-Policy-COND",
    "Trigger": "Safety&AI: AI Database --[Complies with]--> Policy",
    "Template": "When <condition>, Engineering team shall <action (\"comply with\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-AI_Database-Policy-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Complies with]--> Policy",
    "Template": "When <condition>, Engineering team shall <action (\"comply with\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-AI_Database-Policy-CONST",
    "Trigger": "Safety&AI: AI Database --[Complies with]--> Policy",
    "Template": "Engineering team shall <action (\"comply with\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-AI_Database-Policy-ROLE",
    "Trigger": "Safety&AI: AI Database --[Complies with]--> Policy",
    "Template": "<object0_id> (<object0_class>) shall <action (\"comply with\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-AI_Database-Policy-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Complies with]--> Policy",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"comply with\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-AI_Database-Policy-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Complies with]--> Policy",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"comply with\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-AI_Database-Policy-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Complies with]--> Policy",
    "Template": "<object0_id> (<object0_class>) shall <action (\"comply with\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-ANN-Policy",
    "Trigger": "Safety&AI: ANN --[Complies with]--> Policy",
    "Template": "Engineering team shall <action (\"comply with\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-ANN-Policy-COND",
    "Trigger": "Safety&AI: ANN --[Complies with]--> Policy",
    "Template": "When <condition>, Engineering team shall <action (\"comply with\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-ANN-Policy-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Complies with]--> Policy",
    "Template": "When <condition>, Engineering team shall <action (\"comply with\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-ANN-Policy-CONST",
    "Trigger": "Safety&AI: ANN --[Complies with]--> Policy",
    "Template": "Engineering team shall <action (\"comply with\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-ANN-Policy-ROLE",
    "Trigger": "Safety&AI: ANN --[Complies with]--> Policy",
    "Template": "<object0_id> (<object0_class>) shall <action (\"comply with\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-ANN-Policy-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Complies with]--> Policy",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"comply with\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-ANN-Policy-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Complies with]--> Policy",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"comply with\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-complies_with-ANN-Policy-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Complies with]--> Policy",
    "Template": "<object0_id> (<object0_class>) shall <action (\"comply with\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrains-Policy-Process",
    "Trigger": "Safety&AI: Policy --[Constrains]--> Process",
    "Template": "Engineering team shall <action (\"constrain\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrains-Policy-Process-COND",
    "Trigger": "Safety&AI: Policy --[Constrains]--> Process",
    "Template": "When <condition>, Engineering team shall <action (\"constrain\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrains-Policy-Process-COND-CONST",
    "Trigger": "Safety&AI: Policy --[Constrains]--> Process",
    "Template": "When <condition>, Engineering team shall <action (\"constrain\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrains-Policy-Process-CONST",
    "Trigger": "Safety&AI: Policy --[Constrains]--> Process",
    "Template": "Engineering team shall <action (\"constrain\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrains-Policy-Process-ROLE",
    "Trigger": "Safety&AI: Policy --[Constrains]--> Process",
    "Template": "<object0_id> (<object0_class>) shall <action (\"constrain\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrains-Policy-Process-ROLE-COND",
    "Trigger": "Safety&AI: Policy --[Constrains]--> Process",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"constrain\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrains-Policy-Process-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Policy --[Constrains]--> Process",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"constrain\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-constrains-Policy-Process-ROLE-CONST",
    "Trigger": "Safety&AI: Policy --[Constrains]--> Process",
    "Template": "<object0_id> (<object0_class>) shall <action (\"constrain\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-AI_Database-AI_Database",
    "Trigger": "Safety&AI: AI Database --[Curation]--> AI Database",
    "Template": "Engineering team shall <action (\"curate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-AI_Database-AI_Database-COND",
    "Trigger": "Safety&AI: AI Database --[Curation]--> AI Database",
    "Template": "When <condition>, Engineering team shall <action (\"curate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-AI_Database-AI_Database-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Curation]--> AI Database",
    "Template": "When <condition>, Engineering team shall <action (\"curate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-AI_Database-AI_Database-CONST",
    "Trigger": "Safety&AI: AI Database --[Curation]--> AI Database",
    "Template": "Engineering team shall <action (\"curate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-AI_Database-AI_Database-ROLE",
    "Trigger": "Safety&AI: AI Database --[Curation]--> AI Database",
    "Template": "<object0_id> (<object0_class>) shall <action (\"curate\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-AI_Database-AI_Database-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Curation]--> AI Database",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"curate\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-AI_Database-AI_Database-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Curation]--> AI Database",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"curate\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-curation-AI_Database-AI_Database-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Curation]--> AI Database",
    "Template": "<object0_id> (<object0_class>) shall <action (\"curate\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Field_Data-Test_Suite",
    "Trigger": "Safety&AI: Field Data --[Develops]--> Test Suite",
    "Template": "Engineering team shall <action (\"develops\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Field_Data-Test_Suite-COND",
    "Trigger": "Safety&AI: Field Data --[Develops]--> Test Suite",
    "Template": "When <condition>, Engineering team shall <action (\"develops\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Field_Data-Test_Suite-COND-CONST",
    "Trigger": "Safety&AI: Field Data --[Develops]--> Test Suite",
    "Template": "When <condition>, Engineering team shall <action (\"develops\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Field_Data-Test_Suite-CONST",
    "Trigger": "Safety&AI: Field Data --[Develops]--> Test Suite",
    "Template": "Engineering team shall <action (\"develops\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Field_Data-Test_Suite-ROLE",
    "Trigger": "Safety&AI: Field Data --[Develops]--> Test Suite",
    "Template": "<object0_id> (<object0_class>) shall <action (\"develops\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Field_Data-Test_Suite-ROLE-COND",
    "Trigger": "Safety&AI: Field Data --[Develops]--> Test Suite",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"develops\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Field_Data-Test_Suite-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Field Data --[Develops]--> Test Suite",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"develops\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Field_Data-Test_Suite-ROLE-CONST",
    "Trigger": "Safety&AI: Field Data --[Develops]--> Test Suite",
    "Template": "<object0_id> (<object0_class>) shall <action (\"develops\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Plan-Test_Suite",
    "Trigger": "Safety&AI: Plan --[Develops]--> Test Suite",
    "Template": "Engineering team shall <action (\"develops\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Plan-Test_Suite-COND",
    "Trigger": "Safety&AI: Plan --[Develops]--> Test Suite",
    "Template": "When <condition>, Engineering team shall <action (\"develops\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Plan-Test_Suite-COND-CONST",
    "Trigger": "Safety&AI: Plan --[Develops]--> Test Suite",
    "Template": "When <condition>, Engineering team shall <action (\"develops\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Plan-Test_Suite-CONST",
    "Trigger": "Safety&AI: Plan --[Develops]--> Test Suite",
    "Template": "Engineering team shall <action (\"develops\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Plan-Test_Suite-ROLE",
    "Trigger": "Safety&AI: Plan --[Develops]--> Test Suite",
    "Template": "<object0_id> (<object0_class>) shall <action (\"develops\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Plan-Test_Suite-ROLE-COND",
    "Trigger": "Safety&AI: Plan --[Develops]--> Test Suite",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"develops\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Plan-Test_Suite-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Plan --[Develops]--> Test Suite",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"develops\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Plan-Test_Suite-ROLE-CONST",
    "Trigger": "Safety&AI: Plan --[Develops]--> Test Suite",
    "Template": "<object0_id> (<object0_class>) shall <action (\"develops\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Process-Test_Suite",
    "Trigger": "Safety&AI: Process --[Develops]--> Test Suite",
    "Template": "Engineering team shall <action (\"develops\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Process-Test_Suite-COND",
    "Trigger": "Safety&AI: Process --[Develops]--> Test Suite",
    "Template": "When <condition>, Engineering team shall <action (\"develops\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Process-Test_Suite-COND-CONST",
    "Trigger": "Safety&AI: Process --[Develops]--> Test Suite",
    "Template": "When <condition>, Engineering team shall <action (\"develops\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Process-Test_Suite-CONST",
    "Trigger": "Safety&AI: Process --[Develops]--> Test Suite",
    "Template": "Engineering team shall <action (\"develops\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Process-Test_Suite-ROLE",
    "Trigger": "Safety&AI: Process --[Develops]--> Test Suite",
    "Template": "<object0_id> (<object0_class>) shall <action (\"develops\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Process-Test_Suite-ROLE-COND",
    "Trigger": "Safety&AI: Process --[Develops]--> Test Suite",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"develops\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Process-Test_Suite-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Process --[Develops]--> Test Suite",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"develops\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Process-Test_Suite-ROLE-CONST",
    "Trigger": "Safety&AI: Process --[Develops]--> Test Suite",
    "Template": "<object0_id> (<object0_class>) shall <action (\"develops\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Risk_Assessment-Test_Suite",
    "Trigger": "Safety&AI: Risk Assessment --[Develops]--> Test Suite",
    "Template": "Engineering team shall <action (\"develops\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Risk_Assessment-Test_Suite-COND",
    "Trigger": "Safety&AI: Risk Assessment --[Develops]--> Test Suite",
    "Template": "When <condition>, Engineering team shall <action (\"develops\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Risk_Assessment-Test_Suite-COND-CONST",
    "Trigger": "Safety&AI: Risk Assessment --[Develops]--> Test Suite",
    "Template": "When <condition>, Engineering team shall <action (\"develops\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Risk_Assessment-Test_Suite-CONST",
    "Trigger": "Safety&AI: Risk Assessment --[Develops]--> Test Suite",
    "Template": "Engineering team shall <action (\"develops\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Risk_Assessment-Test_Suite-ROLE",
    "Trigger": "Safety&AI: Risk Assessment --[Develops]--> Test Suite",
    "Template": "<object0_id> (<object0_class>) shall <action (\"develops\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Risk_Assessment-Test_Suite-ROLE-COND",
    "Trigger": "Safety&AI: Risk Assessment --[Develops]--> Test Suite",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"develops\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Risk_Assessment-Test_Suite-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Risk Assessment --[Develops]--> Test Suite",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"develops\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Risk_Assessment-Test_Suite-ROLE-CONST",
    "Trigger": "Safety&AI: Risk Assessment --[Develops]--> Test Suite",
    "Template": "<object0_id> (<object0_class>) shall <action (\"develops\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Safety_Goal-Test_Suite",
    "Trigger": "Safety&AI: Safety Goal --[Develops]--> Test Suite",
    "Template": "Engineering team shall <action (\"develops\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Safety_Goal-Test_Suite-COND",
    "Trigger": "Safety&AI: Safety Goal --[Develops]--> Test Suite",
    "Template": "When <condition>, Engineering team shall <action (\"develops\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Safety_Goal-Test_Suite-COND-CONST",
    "Trigger": "Safety&AI: Safety Goal --[Develops]--> Test Suite",
    "Template": "When <condition>, Engineering team shall <action (\"develops\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Safety_Goal-Test_Suite-CONST",
    "Trigger": "Safety&AI: Safety Goal --[Develops]--> Test Suite",
    "Template": "Engineering team shall <action (\"develops\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Safety_Goal-Test_Suite-ROLE",
    "Trigger": "Safety&AI: Safety Goal --[Develops]--> Test Suite",
    "Template": "<object0_id> (<object0_class>) shall <action (\"develops\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Safety_Goal-Test_Suite-ROLE-COND",
    "Trigger": "Safety&AI: Safety Goal --[Develops]--> Test Suite",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"develops\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Safety_Goal-Test_Suite-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Safety Goal --[Develops]--> Test Suite",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"develops\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-develops-Safety_Goal-Test_Suite-ROLE-CONST",
    "Trigger": "Safety&AI: Safety Goal --[Develops]--> Test Suite",
    "Template": "<object0_id> (<object0_class>) shall <action (\"develops\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Data_acquisition",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Data acquisition",
    "Template": "Engineering team shall <action (\"collect field data\")> from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Data_acquisition-COND",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall <action (\"collect field data\")> from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Data_acquisition-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall <action (\"collect field data\")> from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Data_acquisition-CONST",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Data acquisition",
    "Template": "Engineering team shall <action (\"collect field data\")> from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Data_acquisition-ROLE",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Data acquisition",
    "Template": "<object0_id> (<object0_class>) shall <action (\"collect field data\")> from the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Data_acquisition-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Data acquisition",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"collect field data\")> from the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Data_acquisition-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Data acquisition",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"collect field data\")> from the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Data_acquisition-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Data acquisition",
    "Template": "<object0_id> (<object0_class>) shall <action (\"collect field data\")> from the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Task",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Task",
    "Template": "Engineering team shall <action (\"collect field data\")> from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Task-COND",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Task",
    "Template": "When <condition>, Engineering team shall <action (\"collect field data\")> from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Task-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Task",
    "Template": "When <condition>, Engineering team shall <action (\"collect field data\")> from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Task-CONST",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Task",
    "Template": "Engineering team shall <action (\"collect field data\")> from the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Task-ROLE",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Task",
    "Template": "<object0_id> (<object0_class>) shall <action (\"collect field data\")> from the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Task-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Task",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"collect field data\")> from the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Task-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Task",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"collect field data\")> from the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_data_collection-AI_Database-Task-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Field data collection]--> Task",
    "Template": "<object0_id> (<object0_class>) shall <action (\"collect field data\")> from the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_risk_evaluation-AI_Database-Data_acquisition",
    "Trigger": "Safety&AI: AI Database --[Field risk evaluation]--> Data acquisition",
    "Template": "Engineering team shall <action (\"evaluate field risk\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_risk_evaluation-AI_Database-Data_acquisition-COND",
    "Trigger": "Safety&AI: AI Database --[Field risk evaluation]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall <action (\"evaluate field risk\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_risk_evaluation-AI_Database-Data_acquisition-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Field risk evaluation]--> Data acquisition",
    "Template": "When <condition>, Engineering team shall <action (\"evaluate field risk\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_risk_evaluation-AI_Database-Data_acquisition-CONST",
    "Trigger": "Safety&AI: AI Database --[Field risk evaluation]--> Data acquisition",
    "Template": "Engineering team shall <action (\"evaluate field risk\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_risk_evaluation-AI_Database-Data_acquisition-ROLE",
    "Trigger": "Safety&AI: AI Database --[Field risk evaluation]--> Data acquisition",
    "Template": "<object0_id> (<object0_class>) shall <action (\"evaluate field risk\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_risk_evaluation-AI_Database-Data_acquisition-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Field risk evaluation]--> Data acquisition",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"evaluate field risk\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_risk_evaluation-AI_Database-Data_acquisition-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Field risk evaluation]--> Data acquisition",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"evaluate field risk\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-field_risk_evaluation-AI_Database-Data_acquisition-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Field risk evaluation]--> Data acquisition",
    "Template": "<object0_id> (<object0_class>) shall <action (\"evaluate field risk\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ingestion-AI_Database-AI_Database",
    "Trigger": "Safety&AI: AI Database --[Ingestion]--> AI Database",
    "Template": "Engineering team shall <action (\"ingest\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ingestion-AI_Database-AI_Database-COND",
    "Trigger": "Safety&AI: AI Database --[Ingestion]--> AI Database",
    "Template": "When <condition>, Engineering team shall <action (\"ingest\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ingestion-AI_Database-AI_Database-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Ingestion]--> AI Database",
    "Template": "When <condition>, Engineering team shall <action (\"ingest\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ingestion-AI_Database-AI_Database-CONST",
    "Trigger": "Safety&AI: AI Database --[Ingestion]--> AI Database",
    "Template": "Engineering team shall <action (\"ingest\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ingestion-AI_Database-AI_Database-ROLE",
    "Trigger": "Safety&AI: AI Database --[Ingestion]--> AI Database",
    "Template": "<object0_id> (<object0_class>) shall <action (\"ingest\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ingestion-AI_Database-AI_Database-ROLE-COND",
    "Trigger": "Safety&AI: AI Database --[Ingestion]--> AI Database",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"ingest\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ingestion-AI_Database-AI_Database-ROLE-COND-CONST",
    "Trigger": "Safety&AI: AI Database --[Ingestion]--> AI Database",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"ingest\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-ingestion-AI_Database-AI_Database-ROLE-CONST",
    "Trigger": "Safety&AI: AI Database --[Ingestion]--> AI Database",
    "Template": "<object0_id> (<object0_class>) shall <action (\"ingest\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-labeling-ANN-AI_Database",
    "Trigger": "Safety&AI: ANN --[Labeling]--> AI Database",
    "Template": "Engineering team shall <action (\"label\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-labeling-ANN-AI_Database-COND",
    "Trigger": "Safety&AI: ANN --[Labeling]--> AI Database",
    "Template": "When <condition>, Engineering team shall <action (\"label\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-labeling-ANN-AI_Database-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Labeling]--> AI Database",
    "Template": "When <condition>, Engineering team shall <action (\"label\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-labeling-ANN-AI_Database-CONST",
    "Trigger": "Safety&AI: ANN --[Labeling]--> AI Database",
    "Template": "Engineering team shall <action (\"label\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-labeling-ANN-AI_Database-ROLE",
    "Trigger": "Safety&AI: ANN --[Labeling]--> AI Database",
    "Template": "<object0_id> (<object0_class>) shall <action (\"label\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-labeling-ANN-AI_Database-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Labeling]--> AI Database",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"label\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-labeling-ANN-AI_Database-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Labeling]--> AI Database",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"label\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-labeling-ANN-AI_Database-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Labeling]--> AI Database",
    "Template": "<object0_id> (<object0_class>) shall <action (\"label\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-mitigates-Risk_Assessment-Plan",
    "Trigger": "Safety&AI: Risk Assessment --[Mitigates]--> Plan",
    "Template": "Engineering team shall <action (\"mitigates\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-mitigates-Risk_Assessment-Plan-COND",
    "Trigger": "Safety&AI: Risk Assessment --[Mitigates]--> Plan",
    "Template": "When <condition>, Engineering team shall <action (\"mitigates\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-mitigates-Risk_Assessment-Plan-COND-CONST",
    "Trigger": "Safety&AI: Risk Assessment --[Mitigates]--> Plan",
    "Template": "When <condition>, Engineering team shall <action (\"mitigates\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-mitigates-Risk_Assessment-Plan-CONST",
    "Trigger": "Safety&AI: Risk Assessment --[Mitigates]--> Plan",
    "Template": "Engineering team shall <action (\"mitigates\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-mitigates-Risk_Assessment-Plan-ROLE",
    "Trigger": "Safety&AI: Risk Assessment --[Mitigates]--> Plan",
    "Template": "<object0_id> (<object0_class>) shall <action (\"mitigates\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-mitigates-Risk_Assessment-Plan-ROLE-COND",
    "Trigger": "Safety&AI: Risk Assessment --[Mitigates]--> Plan",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"mitigates\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-mitigates-Risk_Assessment-Plan-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Risk Assessment --[Mitigates]--> Plan",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"mitigates\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-mitigates-Risk_Assessment-Plan-ROLE-CONST",
    "Trigger": "Safety&AI: Risk Assessment --[Mitigates]--> Plan",
    "Template": "<object0_id> (<object0_class>) shall <action (\"mitigates\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-mitigates-Risk_Assessment-Safety_Goal",
    "Trigger": "Safety&AI: Risk Assessment --[Mitigates]--> Safety Goal",
    "Template": "Engineering team shall <action (\"mitigates\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-mitigates-Risk_Assessment-Safety_Goal-COND",
    "Trigger": "Safety&AI: Risk Assessment --[Mitigates]--> Safety Goal",
    "Template": "When <condition>, Engineering team shall <action (\"mitigates\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-mitigates-Risk_Assessment-Safety_Goal-COND-CONST",
    "Trigger": "Safety&AI: Risk Assessment --[Mitigates]--> Safety Goal",
    "Template": "When <condition>, Engineering team shall <action (\"mitigates\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-mitigates-Risk_Assessment-Safety_Goal-CONST",
    "Trigger": "Safety&AI: Risk Assessment --[Mitigates]--> Safety Goal",
    "Template": "Engineering team shall <action (\"mitigates\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-mitigates-Risk_Assessment-Safety_Goal-ROLE",
    "Trigger": "Safety&AI: Risk Assessment --[Mitigates]--> Safety Goal",
    "Template": "<object0_id> (<object0_class>) shall <action (\"mitigates\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-mitigates-Risk_Assessment-Safety_Goal-ROLE-COND",
    "Trigger": "Safety&AI: Risk Assessment --[Mitigates]--> Safety Goal",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"mitigates\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-mitigates-Risk_Assessment-Safety_Goal-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Risk Assessment --[Mitigates]--> Safety Goal",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"mitigates\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-mitigates-Risk_Assessment-Safety_Goal-ROLE-CONST",
    "Trigger": "Safety&AI: Risk Assessment --[Mitigates]--> Safety Goal",
    "Template": "<object0_id> (<object0_class>) shall <action (\"mitigates\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-model_evaluation-ANN-AI_Database",
    "Trigger": "Safety&AI: ANN --[Model evaluation]--> AI Database",
    "Template": "Engineering team shall <action (\"evaluate model\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-model_evaluation-ANN-AI_Database-COND",
    "Trigger": "Safety&AI: ANN --[Model evaluation]--> AI Database",
    "Template": "When <condition>, Engineering team shall <action (\"evaluate model\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-model_evaluation-ANN-AI_Database-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Model evaluation]--> AI Database",
    "Template": "When <condition>, Engineering team shall <action (\"evaluate model\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-model_evaluation-ANN-AI_Database-CONST",
    "Trigger": "Safety&AI: ANN --[Model evaluation]--> AI Database",
    "Template": "Engineering team shall <action (\"evaluate model\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-model_evaluation-ANN-AI_Database-ROLE",
    "Trigger": "Safety&AI: ANN --[Model evaluation]--> AI Database",
    "Template": "<object0_id> (<object0_class>) shall <action (\"evaluate model\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-model_evaluation-ANN-AI_Database-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Model evaluation]--> AI Database",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"evaluate model\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-model_evaluation-ANN-AI_Database-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Model evaluation]--> AI Database",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"evaluate model\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-model_evaluation-ANN-AI_Database-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Model evaluation]--> AI Database",
    "Template": "<object0_id> (<object0_class>) shall <action (\"evaluate model\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitoring-ANN-Operation",
    "Trigger": "Safety&AI: ANN --[Monitoring]--> Operation",
    "Template": "Engineering team shall <action (\"monitor\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitoring-ANN-Operation-COND",
    "Trigger": "Safety&AI: ANN --[Monitoring]--> Operation",
    "Template": "When <condition>, Engineering team shall <action (\"monitor\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitoring-ANN-Operation-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Monitoring]--> Operation",
    "Template": "When <condition>, Engineering team shall <action (\"monitor\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitoring-ANN-Operation-CONST",
    "Trigger": "Safety&AI: ANN --[Monitoring]--> Operation",
    "Template": "Engineering team shall <action (\"monitor\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitoring-ANN-Operation-ROLE",
    "Trigger": "Safety&AI: ANN --[Monitoring]--> Operation",
    "Template": "<object0_id> (<object0_class>) shall <action (\"monitor\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitoring-ANN-Operation-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Monitoring]--> Operation",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"monitor\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitoring-ANN-Operation-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Monitoring]--> Operation",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"monitor\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-monitoring-ANN-Operation-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Monitoring]--> Operation",
    "Template": "<object0_id> (<object0_class>) shall <action (\"monitor\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-plans-Plan-Process",
    "Trigger": "Safety&AI: Plan --[Plans]--> Process",
    "Template": "Engineering team shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-plans-Plan-Process-COND",
    "Trigger": "Safety&AI: Plan --[Plans]--> Process",
    "Template": "When <condition>, Engineering team shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-plans-Plan-Process-COND-CONST",
    "Trigger": "Safety&AI: Plan --[Plans]--> Process",
    "Template": "When <condition>, Engineering team shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-plans-Plan-Process-CONST",
    "Trigger": "Safety&AI: Plan --[Plans]--> Process",
    "Template": "Engineering team shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-plans-Plan-Process-ROLE",
    "Trigger": "Safety&AI: Plan --[Plans]--> Process",
    "Template": "<object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-plans-Plan-Process-ROLE-COND",
    "Trigger": "Safety&AI: Plan --[Plans]--> Process",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-plans-Plan-Process-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Plan --[Plans]--> Process",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-plans-Plan-Process-ROLE-CONST",
    "Trigger": "Safety&AI: Plan --[Plans]--> Process",
    "Template": "<object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Plan-Document",
    "Trigger": "Safety&AI: Plan --[Produces]--> Document",
    "Template": "Engineering team shall <action (\"produce\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Plan-Document-COND",
    "Trigger": "Safety&AI: Plan --[Produces]--> Document",
    "Template": "When <condition>, Engineering team shall <action (\"produce\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Plan-Document-COND-CONST",
    "Trigger": "Safety&AI: Plan --[Produces]--> Document",
    "Template": "When <condition>, Engineering team shall <action (\"produce\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Plan-Document-CONST",
    "Trigger": "Safety&AI: Plan --[Produces]--> Document",
    "Template": "Engineering team shall <action (\"produce\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Plan-Document-ROLE",
    "Trigger": "Safety&AI: Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"produce\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Plan-Document-ROLE-COND",
    "Trigger": "Safety&AI: Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"produce\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Plan-Document-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"produce\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Plan-Document-ROLE-CONST",
    "Trigger": "Safety&AI: Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"produce\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Process-Document",
    "Trigger": "Safety&AI: Process --[Produces]--> Document",
    "Template": "Engineering team shall <action (\"produce\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Process-Document-COND",
    "Trigger": "Safety&AI: Process --[Produces]--> Document",
    "Template": "When <condition>, Engineering team shall <action (\"produce\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Process-Document-COND-CONST",
    "Trigger": "Safety&AI: Process --[Produces]--> Document",
    "Template": "When <condition>, Engineering team shall <action (\"produce\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Process-Document-CONST",
    "Trigger": "Safety&AI: Process --[Produces]--> Document",
    "Template": "Engineering team shall <action (\"produce\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Process-Document-ROLE",
    "Trigger": "Safety&AI: Process --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"produce\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Process-Document-ROLE-COND",
    "Trigger": "Safety&AI: Process --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"produce\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Process-Document-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Process --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"produce\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Process-Document-ROLE-CONST",
    "Trigger": "Safety&AI: Process --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"produce\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Report-Document",
    "Trigger": "Safety&AI: Report --[Produces]--> Document",
    "Template": "Engineering team shall <action (\"produce\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Report-Document-COND",
    "Trigger": "Safety&AI: Report --[Produces]--> Document",
    "Template": "When <condition>, Engineering team shall <action (\"produce\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Report-Document-COND-CONST",
    "Trigger": "Safety&AI: Report --[Produces]--> Document",
    "Template": "When <condition>, Engineering team shall <action (\"produce\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Report-Document-CONST",
    "Trigger": "Safety&AI: Report --[Produces]--> Document",
    "Template": "Engineering team shall <action (\"produce\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Report-Document-ROLE",
    "Trigger": "Safety&AI: Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"produce\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Report-Document-ROLE-COND",
    "Trigger": "Safety&AI: Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"produce\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Report-Document-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"produce\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Report-Document-ROLE-CONST",
    "Trigger": "Safety&AI: Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"produce\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Safety_Security_Case-Document",
    "Trigger": "Safety&AI: Safety & Security Case --[Produces]--> Document",
    "Template": "Engineering team shall <action (\"produce\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Safety_Security_Case-Document-COND",
    "Trigger": "Safety&AI: Safety & Security Case --[Produces]--> Document",
    "Template": "When <condition>, Engineering team shall <action (\"produce\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Safety_Security_Case-Document-COND-CONST",
    "Trigger": "Safety&AI: Safety & Security Case --[Produces]--> Document",
    "Template": "When <condition>, Engineering team shall <action (\"produce\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Safety_Security_Case-Document-CONST",
    "Trigger": "Safety&AI: Safety & Security Case --[Produces]--> Document",
    "Template": "Engineering team shall <action (\"produce\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Safety_Security_Case-Document-ROLE",
    "Trigger": "Safety&AI: Safety & Security Case --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"produce\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Safety_Security_Case-Document-ROLE-COND",
    "Trigger": "Safety&AI: Safety & Security Case --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"produce\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Safety_Security_Case-Document-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Safety & Security Case --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"produce\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Safety_Security_Case-Document-ROLE-CONST",
    "Trigger": "Safety&AI: Safety & Security Case --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"produce\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Test_Suite-Document",
    "Trigger": "Safety&AI: Test Suite --[Produces]--> Document",
    "Template": "Engineering team shall <action (\"produce\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Test_Suite-Document-COND",
    "Trigger": "Safety&AI: Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Engineering team shall <action (\"produce\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Test_Suite-Document-COND-CONST",
    "Trigger": "Safety&AI: Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Engineering team shall <action (\"produce\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Test_Suite-Document-CONST",
    "Trigger": "Safety&AI: Test Suite --[Produces]--> Document",
    "Template": "Engineering team shall <action (\"produce\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Test_Suite-Document-ROLE",
    "Trigger": "Safety&AI: Test Suite --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"produce\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Test_Suite-Document-ROLE-COND",
    "Trigger": "Safety&AI: Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"produce\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Test_Suite-Document-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"produce\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-produces-Test_Suite-Document-ROLE-CONST",
    "Trigger": "Safety&AI: Test Suite --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"produce\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Role-Activity",
    "Trigger": "Safety&AI: Role --[Responsible for]--> Activity",
    "Template": "Engineering team shall <action (\"be responsible for\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Role-Activity-COND",
    "Trigger": "Safety&AI: Role --[Responsible for]--> Activity",
    "Template": "When <condition>, Engineering team shall <action (\"be responsible for\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Role-Activity-COND-CONST",
    "Trigger": "Safety&AI: Role --[Responsible for]--> Activity",
    "Template": "When <condition>, Engineering team shall <action (\"be responsible for\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Role-Activity-CONST",
    "Trigger": "Safety&AI: Role --[Responsible for]--> Activity",
    "Template": "Engineering team shall <action (\"be responsible for\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Role-Activity-ROLE",
    "Trigger": "Safety&AI: Role --[Responsible for]--> Activity",
    "Template": "<object0_id> (<object0_class>) shall <action (\"be responsible for\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Role-Activity-ROLE-COND",
    "Trigger": "Safety&AI: Role --[Responsible for]--> Activity",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"be responsible for\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Role-Activity-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Role --[Responsible for]--> Activity",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"be responsible for\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Role-Activity-ROLE-CONST",
    "Trigger": "Safety&AI: Role --[Responsible for]--> Activity",
    "Template": "<object0_id> (<object0_class>) shall <action (\"be responsible for\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Role-Process",
    "Trigger": "Safety&AI: Role --[Responsible for]--> Process",
    "Template": "Engineering team shall <action (\"be responsible for\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Role-Process-COND",
    "Trigger": "Safety&AI: Role --[Responsible for]--> Process",
    "Template": "When <condition>, Engineering team shall <action (\"be responsible for\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Role-Process-COND-CONST",
    "Trigger": "Safety&AI: Role --[Responsible for]--> Process",
    "Template": "When <condition>, Engineering team shall <action (\"be responsible for\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Role-Process-CONST",
    "Trigger": "Safety&AI: Role --[Responsible for]--> Process",
    "Template": "Engineering team shall <action (\"be responsible for\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Role-Process-ROLE",
    "Trigger": "Safety&AI: Role --[Responsible for]--> Process",
    "Template": "<object0_id> (<object0_class>) shall <action (\"be responsible for\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Role-Process-ROLE-COND",
    "Trigger": "Safety&AI: Role --[Responsible for]--> Process",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"be responsible for\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Role-Process-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Role --[Responsible for]--> Process",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"be responsible for\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Role-Process-ROLE-CONST",
    "Trigger": "Safety&AI: Role --[Responsible for]--> Process",
    "Template": "<object0_id> (<object0_class>) shall <action (\"be responsible for\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Role-Task",
    "Trigger": "Safety&AI: Role --[Responsible for]--> Task",
    "Template": "Engineering team shall <action (\"be responsible for\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Role-Task-COND",
    "Trigger": "Safety&AI: Role --[Responsible for]--> Task",
    "Template": "When <condition>, Engineering team shall <action (\"be responsible for\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Role-Task-COND-CONST",
    "Trigger": "Safety&AI: Role --[Responsible for]--> Task",
    "Template": "When <condition>, Engineering team shall <action (\"be responsible for\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Role-Task-CONST",
    "Trigger": "Safety&AI: Role --[Responsible for]--> Task",
    "Template": "Engineering team shall <action (\"be responsible for\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Role-Task-ROLE",
    "Trigger": "Safety&AI: Role --[Responsible for]--> Task",
    "Template": "<object0_id> (<object0_class>) shall <action (\"be responsible for\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Role-Task-ROLE-COND",
    "Trigger": "Safety&AI: Role --[Responsible for]--> Task",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"be responsible for\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Role-Task-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Role --[Responsible for]--> Task",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"be responsible for\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-responsible_for-Role-Task-ROLE-CONST",
    "Trigger": "Safety&AI: Role --[Responsible for]--> Task",
    "Template": "<object0_id> (<object0_class>) shall <action (\"be responsible for\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-reviews-Audit_Report-Safety_Security_Case",
    "Trigger": "Safety&AI: Audit Report --[Reviews]--> Safety & Security Case",
    "Template": "Engineering team shall <action (\"reviews\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-reviews-Audit_Report-Safety_Security_Case-COND",
    "Trigger": "Safety&AI: Audit Report --[Reviews]--> Safety & Security Case",
    "Template": "When <condition>, Engineering team shall <action (\"reviews\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-reviews-Audit_Report-Safety_Security_Case-COND-CONST",
    "Trigger": "Safety&AI: Audit Report --[Reviews]--> Safety & Security Case",
    "Template": "When <condition>, Engineering team shall <action (\"reviews\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-reviews-Audit_Report-Safety_Security_Case-CONST",
    "Trigger": "Safety&AI: Audit Report --[Reviews]--> Safety & Security Case",
    "Template": "Engineering team shall <action (\"reviews\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-reviews-Audit_Report-Safety_Security_Case-ROLE",
    "Trigger": "Safety&AI: Audit Report --[Reviews]--> Safety & Security Case",
    "Template": "<object0_id> (<object0_class>) shall <action (\"reviews\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-reviews-Audit_Report-Safety_Security_Case-ROLE-COND",
    "Trigger": "Safety&AI: Audit Report --[Reviews]--> Safety & Security Case",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"reviews\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-reviews-Audit_Report-Safety_Security_Case-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Audit Report --[Reviews]--> Safety & Security Case",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"reviews\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-reviews-Audit_Report-Safety_Security_Case-ROLE-CONST",
    "Trigger": "Safety&AI: Audit Report --[Reviews]--> Safety & Security Case",
    "Template": "<object0_id> (<object0_class>) shall <action (\"reviews\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-synthesis-ANN-AI_Database",
    "Trigger": "Safety&AI: ANN --[Synthesis]--> AI Database",
    "Template": "Engineering team shall <action (\"synthesize\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-synthesis-ANN-AI_Database-COND",
    "Trigger": "Safety&AI: ANN --[Synthesis]--> AI Database",
    "Template": "When <condition>, Engineering team shall <action (\"synthesize\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-synthesis-ANN-AI_Database-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Synthesis]--> AI Database",
    "Template": "When <condition>, Engineering team shall <action (\"synthesize\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-synthesis-ANN-AI_Database-CONST",
    "Trigger": "Safety&AI: ANN --[Synthesis]--> AI Database",
    "Template": "Engineering team shall <action (\"synthesize\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-synthesis-ANN-AI_Database-ROLE",
    "Trigger": "Safety&AI: ANN --[Synthesis]--> AI Database",
    "Template": "<object0_id> (<object0_class>) shall <action (\"synthesize\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-synthesis-ANN-AI_Database-ROLE-COND",
    "Trigger": "Safety&AI: ANN --[Synthesis]--> AI Database",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"synthesize\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-synthesis-ANN-AI_Database-ROLE-COND-CONST",
    "Trigger": "Safety&AI: ANN --[Synthesis]--> AI Database",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"synthesize\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-synthesis-ANN-AI_Database-ROLE-CONST",
    "Trigger": "Safety&AI: ANN --[Synthesis]--> AI Database",
    "Template": "<object0_id> (<object0_class>) shall <action (\"synthesize\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-triage-Safety_Issue-Field_Data",
    "Trigger": "Safety&AI: Safety Issue --[Triage]--> Field Data",
    "Template": "Support team shall <action (\"triage\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-triage-Safety_Issue-Field_Data-COND",
    "Trigger": "Safety&AI: Safety Issue --[Triage]--> Field Data",
    "Template": "When <condition>, Support team shall <action (\"triage\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-triage-Safety_Issue-Field_Data-COND-CONST",
    "Trigger": "Safety&AI: Safety Issue --[Triage]--> Field Data",
    "Template": "When <condition>, Support team shall <action (\"triage\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-triage-Safety_Issue-Field_Data-CONST",
    "Trigger": "Safety&AI: Safety Issue --[Triage]--> Field Data",
    "Template": "Support team shall <action (\"triage\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-triage-Safety_Issue-Field_Data-ROLE",
    "Trigger": "Safety&AI: Safety Issue --[Triage]--> Field Data",
    "Template": "<object0_id> (<object0_class>) shall <action (\"triage\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-triage-Safety_Issue-Field_Data-ROLE-COND",
    "Trigger": "Safety&AI: Safety Issue --[Triage]--> Field Data",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"triage\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-triage-Safety_Issue-Field_Data-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Safety Issue --[Triage]--> Field Data",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"triage\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-triage-Safety_Issue-Field_Data-ROLE-CONST",
    "Trigger": "Safety&AI: Safety Issue --[Triage]--> Field Data",
    "Template": "<object0_id> (<object0_class>) shall <action (\"triage\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-validate-Model-Test_Suite",
    "Trigger": "Safety&AI: Model --[Validate]--> Test Suite",
    "Template": "Validation team shall <action (\"validate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-validate-Model-Test_Suite-COND",
    "Trigger": "Safety&AI: Model --[Validate]--> Test Suite",
    "Template": "When <condition>, Validation team shall <action (\"validate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-validate-Model-Test_Suite-COND-CONST",
    "Trigger": "Safety&AI: Model --[Validate]--> Test Suite",
    "Template": "When <condition>, Validation team shall <action (\"validate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-validate-Model-Test_Suite-CONST",
    "Trigger": "Safety&AI: Model --[Validate]--> Test Suite",
    "Template": "Validation team shall <action (\"validate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-validate-Model-Test_Suite-ROLE",
    "Trigger": "Safety&AI: Model --[Validate]--> Test Suite",
    "Template": "<object0_id> (<object0_class>) shall <action (\"validate\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-validate-Model-Test_Suite-ROLE-COND",
    "Trigger": "Safety&AI: Model --[Validate]--> Test Suite",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"validate\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-validate-Model-Test_Suite-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Model --[Validate]--> Test Suite",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"validate\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-validate-Model-Test_Suite-ROLE-CONST",
    "Trigger": "Safety&AI: Model --[Validate]--> Test Suite",
    "Template": "<object0_id> (<object0_class>) shall <action (\"validate\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-validate-Plan-Report",
    "Trigger": "Safety&AI: Plan --[Validate]--> Report",
    "Template": "Validation team shall <action (\"validate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-validate-Plan-Report-COND",
    "Trigger": "Safety&AI: Plan --[Validate]--> Report",
    "Template": "When <condition>, Validation team shall <action (\"validate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-validate-Plan-Report-COND-CONST",
    "Trigger": "Safety&AI: Plan --[Validate]--> Report",
    "Template": "When <condition>, Validation team shall <action (\"validate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-validate-Plan-Report-CONST",
    "Trigger": "Safety&AI: Plan --[Validate]--> Report",
    "Template": "Validation team shall <action (\"validate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-validate-Plan-Report-ROLE",
    "Trigger": "Safety&AI: Plan --[Validate]--> Report",
    "Template": "<object0_id> (<object0_class>) shall <action (\"validate\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-validate-Plan-Report-ROLE-COND",
    "Trigger": "Safety&AI: Plan --[Validate]--> Report",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"validate\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-validate-Plan-Report-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Plan --[Validate]--> Report",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"validate\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-validate-Plan-Report-ROLE-CONST",
    "Trigger": "Safety&AI: Plan --[Validate]--> Report",
    "Template": "<object0_id> (<object0_class>) shall <action (\"validate\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-validate-Test_Suite-Report",
    "Trigger": "Safety&AI: Test Suite --[Validate]--> Report",
    "Template": "Validation team shall <action (\"validate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-validate-Test_Suite-Report-COND",
    "Trigger": "Safety&AI: Test Suite --[Validate]--> Report",
    "Template": "When <condition>, Validation team shall <action (\"validate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-validate-Test_Suite-Report-COND-CONST",
    "Trigger": "Safety&AI: Test Suite --[Validate]--> Report",
    "Template": "When <condition>, Validation team shall <action (\"validate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-validate-Test_Suite-Report-CONST",
    "Trigger": "Safety&AI: Test Suite --[Validate]--> Report",
    "Template": "Validation team shall <action (\"validate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-validate-Test_Suite-Report-ROLE",
    "Trigger": "Safety&AI: Test Suite --[Validate]--> Report",
    "Template": "<object0_id> (<object0_class>) shall <action (\"validate\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-validate-Test_Suite-Report-ROLE-COND",
    "Trigger": "Safety&AI: Test Suite --[Validate]--> Report",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"validate\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-validate-Test_Suite-Report-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Test Suite --[Validate]--> Report",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"validate\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-validate-Test_Suite-Report-ROLE-CONST",
    "Trigger": "Safety&AI: Test Suite --[Validate]--> Report",
    "Template": "<object0_id> (<object0_class>) shall <action (\"validate\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-verify-Test_Suite-Plan",
    "Trigger": "Safety&AI: Test Suite --[Verify]--> Plan",
    "Template": "Verification team shall <action (\"verify\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-verify-Test_Suite-Plan-COND",
    "Trigger": "Safety&AI: Test Suite --[Verify]--> Plan",
    "Template": "When <condition>, Verification team shall <action (\"verify\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-verify-Test_Suite-Plan-COND-CONST",
    "Trigger": "Safety&AI: Test Suite --[Verify]--> Plan",
    "Template": "When <condition>, Verification team shall <action (\"verify\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-verify-Test_Suite-Plan-CONST",
    "Trigger": "Safety&AI: Test Suite --[Verify]--> Plan",
    "Template": "Verification team shall <action (\"verify\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-verify-Test_Suite-Plan-ROLE",
    "Trigger": "Safety&AI: Test Suite --[Verify]--> Plan",
    "Template": "<object0_id> (<object0_class>) shall <action (\"verify\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-verify-Test_Suite-Plan-ROLE-COND",
    "Trigger": "Safety&AI: Test Suite --[Verify]--> Plan",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"verify\")> the <object1_id> (<object1_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-verify-Test_Suite-Plan-ROLE-COND-CONST",
    "Trigger": "Safety&AI: Test Suite --[Verify]--> Plan",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"verify\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SA-verify-Test_Suite-Plan-ROLE-CONST",
    "Trigger": "Safety&AI: Test Suite --[Verify]--> Plan",
    "Template": "<object0_id> (<object0_class>) shall <action (\"verify\")> the <object1_id> (<object1_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from diagram rules (Safety&AI)."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_release-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Security manager shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_release-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Security manager shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_release-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Security manager shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_release-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Security manager shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_release_role_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_release_role_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_release_role_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_release_role_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"plans\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"plans\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"plans\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"plans\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"plans\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"plans\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"plans\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"plans\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"plans\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"plans\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"plans\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"plans\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"plans\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"plans\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"plans\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"plans\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"plans\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"plans\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"plans\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"plans\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"plans\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"plans\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"plans\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_mitigation_role_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Plans]--> Process --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"plans\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-cybersecurity_threat_verification_role_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-decommissioning_validation-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "Safety manager shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-decommissioning_validation-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Safety manager shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-decommissioning_validation-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Safety manager shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-decommissioning_validation-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "Safety manager shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-decommissioning_validation_role_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-decommissioning_validation_role_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-decommissioning_validation_role_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-decommissioning_validation_role_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-deployment_readiness-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Deployment manager shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-deployment_readiness-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Deployment manager shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-deployment_readiness-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Deployment manager shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-deployment_readiness-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Deployment manager shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-deployment_readiness_role_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-deployment_readiness_role_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-deployment_readiness_role_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-deployment_readiness_role_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-functional_safety_release-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Release manager shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-functional_safety_release-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Release manager shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-functional_safety_release-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Release manager shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-functional_safety_release-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Release manager shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-functional_safety_release_role_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-functional_safety_release_role_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-functional_safety_release_role_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-functional_safety_release_role_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-governance_oversight-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "Governance board shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"audits\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-governance_oversight-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Governance board shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"audits\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-governance_oversight-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Governance board shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"audits\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-governance_oversight-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "Governance board shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"audits\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-governance_oversight_role_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"audits\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-governance_oversight_role_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"audits\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-governance_oversight_role_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"audits\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-governance_oversight_role_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"audits\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Safety engineer shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Safety engineer shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Safety engineer shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Safety engineer shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Safety engineer shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Safety engineer shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_mitigation_role_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-hazard_verification_role_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"develops\")> the <object3_id> (<object3_class>), <action (\"verify\")> the <object4_id> (<object4_class>), and <action (\"produces\")> the <object5_id> (<object5_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<object5_id>",
      "<object5_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_triage-Safety_Issue-Test_Suite",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite",
    "Template": "Safety manager shall <action (\"triage\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and <action (\"develops\")> the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_triage-Safety_Issue-Test_Suite-COND",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite",
    "Template": "When <condition>, Safety manager shall <action (\"triage\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and <action (\"develops\")> the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_triage-Safety_Issue-Test_Suite-COND-CONST",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite",
    "Template": "When <condition>, Safety manager shall <action (\"triage\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and <action (\"develops\")> the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_triage-Safety_Issue-Test_Suite-CONST",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite",
    "Template": "Safety manager shall <action (\"triage\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and <action (\"develops\")> the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_triage_role_subject-Safety_Issue-Test_Suite",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite",
    "Template": "<object0_id> (<object0_class>) shall <action (\"triage\")> the <object1_id> (<object1_class>), and <action (\"develops\")> the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_triage_role_subject-Safety_Issue-Test_Suite-COND",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"triage\")> the <object1_id> (<object1_class>), and <action (\"develops\")> the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_triage_role_subject-Safety_Issue-Test_Suite-COND-CONST",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"triage\")> the <object1_id> (<object1_class>), and <action (\"develops\")> the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_triage_role_subject-Safety_Issue-Test_Suite-CONST",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite",
    "Template": "<object0_id> (<object0_class>) shall <action (\"triage\")> the <object1_id> (<object1_class>), and <action (\"develops\")> the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_validation-Safety_Issue-Document",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "Safety manager shall <action (\"triage\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_validation-Safety_Issue-Document-COND",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Safety manager shall <action (\"triage\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_validation-Safety_Issue-Document-COND-CONST",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Safety manager shall <action (\"triage\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_validation-Safety_Issue-Document-CONST",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "Safety manager shall <action (\"triage\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_validation_role_subject-Safety_Issue-Document",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"triage\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_validation_role_subject-Safety_Issue-Document-COND",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"triage\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_validation_role_subject-Safety_Issue-Document-COND-CONST",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"triage\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-incident_validation_role_subject-Safety_Issue-Document-CONST",
    "Trigger": "Sequence: Safety Issue --[Triage]--> Field Data --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"triage\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-lifecycle_governance_review-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "Lifecycle manager shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-lifecycle_governance_review-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Lifecycle manager shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-lifecycle_governance_review-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Lifecycle manager shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-lifecycle_governance_review-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "Lifecycle manager shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-lifecycle_governance_review_role_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-lifecycle_governance_review_role_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-lifecycle_governance_review_role_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-lifecycle_governance_review_role_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-maintenance_validation-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "Operations team shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-maintenance_validation-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Operations team shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-maintenance_validation-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Operations team shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-maintenance_validation-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "Operations team shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-maintenance_validation_role_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-maintenance_validation_role_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-maintenance_validation_role_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-maintenance_validation_role_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation-Model-Document",
    "Trigger": "Sequence: Model --[Validate]--> Test Suite --[Produces]--> Document",
    "Template": "Validation team shall <action (\"validate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and <action (\"produces\")> the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation-Model-Document-COND",
    "Trigger": "Sequence: Model --[Validate]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall <action (\"validate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and <action (\"produces\")> the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation-Model-Document-COND-CONST",
    "Trigger": "Sequence: Model --[Validate]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall <action (\"validate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and <action (\"produces\")> the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation-Model-Document-CONST",
    "Trigger": "Sequence: Model --[Validate]--> Test Suite --[Produces]--> Document",
    "Template": "Validation team shall <action (\"validate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and <action (\"produces\")> the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation-Plan-Document",
    "Trigger": "Sequence: Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "Validation team shall <action (\"validate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and <action (\"produces\")> the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall <action (\"validate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and <action (\"produces\")> the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall <action (\"validate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and <action (\"produces\")> the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "Validation team shall <action (\"validate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and <action (\"produces\")> the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation-Test_Suite-Document",
    "Trigger": "Sequence: Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "Validation team shall <action (\"validate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and <action (\"produces\")> the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation-Test_Suite-Document-COND",
    "Trigger": "Sequence: Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall <action (\"validate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and <action (\"produces\")> the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation-Test_Suite-Document-COND-CONST",
    "Trigger": "Sequence: Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall <action (\"validate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and <action (\"produces\")> the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation-Test_Suite-Document-CONST",
    "Trigger": "Sequence: Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "Validation team shall <action (\"validate\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and <action (\"produces\")> the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_role_subject-Model-Document",
    "Trigger": "Sequence: Model --[Validate]--> Test Suite --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"validate\")> the <object1_id> (<object1_class>), and <action (\"produces\")> the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_role_subject-Model-Document-COND",
    "Trigger": "Sequence: Model --[Validate]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"validate\")> the <object1_id> (<object1_class>), and <action (\"produces\")> the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_role_subject-Model-Document-COND-CONST",
    "Trigger": "Sequence: Model --[Validate]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"validate\")> the <object1_id> (<object1_class>), and <action (\"produces\")> the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_role_subject-Model-Document-CONST",
    "Trigger": "Sequence: Model --[Validate]--> Test Suite --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"validate\")> the <object1_id> (<object1_class>), and <action (\"produces\")> the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_role_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"validate\")> the <object1_id> (<object1_class>), and <action (\"produces\")> the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_role_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"validate\")> the <object1_id> (<object1_class>), and <action (\"produces\")> the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_role_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"validate\")> the <object1_id> (<object1_class>), and <action (\"produces\")> the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_role_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"validate\")> the <object1_id> (<object1_class>), and <action (\"produces\")> the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_role_subject-Test_Suite-Document",
    "Trigger": "Sequence: Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"validate\")> the <object1_id> (<object1_class>), and <action (\"produces\")> the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_role_subject-Test_Suite-Document-COND",
    "Trigger": "Sequence: Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"validate\")> the <object1_id> (<object1_class>), and <action (\"produces\")> the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_role_subject-Test_Suite-Document-COND-CONST",
    "Trigger": "Sequence: Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"validate\")> the <object1_id> (<object1_class>), and <action (\"produces\")> the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-model_validation_role_subject-Test_Suite-Document-CONST",
    "Trigger": "Sequence: Test Suite --[Validate]--> Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"validate\")> the <object1_id> (<object1_class>), and <action (\"produces\")> the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Role-Document",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "Governance board shall <action (\"responsible for\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and <action (\"produces\")> the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Role-Document-COND",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Governance board shall <action (\"responsible for\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and <action (\"produces\")> the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Governance board shall <action (\"responsible for\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and <action (\"produces\")> the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "Governance board shall <action (\"responsible for\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and <action (\"produces\")> the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Role-Document",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"responsible for\")> the <object1_id> (<object1_class>), and <action (\"produces\")> the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Role-Document-COND",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"responsible for\")> the <object1_id> (<object1_class>), and <action (\"produces\")> the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Role-Document-COND-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"responsible for\")> the <object1_id> (<object1_class>), and <action (\"produces\")> the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-organizational_accountability_role_subject-Role-Document-CONST",
    "Trigger": "Sequence: Role --[Responsible for]--> Process --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"responsible for\")> the <object1_id> (<object1_class>), and <action (\"produces\")> the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance-Policy-Document",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Document",
    "Template": "Governance team shall <action (\"constrains\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and <action (\"produces\")> the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance-Policy-Document-COND",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Governance team shall <action (\"constrains\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and <action (\"produces\")> the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance-Policy-Document-COND-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Document",
    "Template": "When <condition>, Governance team shall <action (\"constrains\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and <action (\"produces\")> the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance-Policy-Document-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Document",
    "Template": "Governance team shall <action (\"constrains\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), and <action (\"produces\")> the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_role_subject-Policy-Document",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"constrains\")> the <object1_id> (<object1_class>), and <action (\"produces\")> the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_role_subject-Policy-Document-COND",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"constrains\")> the <object1_id> (<object1_class>), and <action (\"produces\")> the <object2_id> (<object2_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_role_subject-Policy-Document-COND-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"constrains\")> the <object1_id> (<object1_class>), and <action (\"produces\")> the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-policy_compliance_role_subject-Policy-Document-CONST",
    "Trigger": "Sequence: Policy --[Constrains]--> Process --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"constrains\")> the <object1_id> (<object1_class>), and <action (\"produces\")> the <object2_id> (<object2_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-post_deployment_monitoring-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Operations team shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-post_deployment_monitoring-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Operations team shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-post_deployment_monitoring-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Operations team shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-post_deployment_monitoring-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Operations team shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-post_deployment_monitoring_role_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-post_deployment_monitoring_role_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-post_deployment_monitoring_role_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-post_deployment_monitoring_role_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-product_lifecycle_safety-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Safety manager shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-product_lifecycle_safety-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Safety manager shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-product_lifecycle_safety-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Safety manager shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-product_lifecycle_safety-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Safety manager shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-product_lifecycle_safety_role_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-product_lifecycle_safety_role_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-product_lifecycle_safety_role_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-product_lifecycle_safety_role_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Test team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Test team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Test team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Test team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Test team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Test team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Test team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Test team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Test team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Test team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Test team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Test team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-risk_based_testing_role_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_audit-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "Auditor shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"audits\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_audit-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Auditor shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"audits\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_audit-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Auditor shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"audits\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_audit-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "Auditor shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"audits\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_audit_role_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"audits\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_audit_role_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"audits\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_audit_role_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"audits\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_audit_role_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"audits\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification-Risk_Assessment-Document",
    "Trigger": "Sequence: Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall <action (\"mitigates\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification-Risk_Assessment-Document-COND",
    "Trigger": "Sequence: Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall <action (\"mitigates\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification-Risk_Assessment-Document-COND-CONST",
    "Trigger": "Sequence: Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Safety engineer shall <action (\"mitigates\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification-Risk_Assessment-Document-CONST",
    "Trigger": "Sequence: Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Safety engineer shall <action (\"mitigates\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_role_subject-Risk_Assessment-Document",
    "Trigger": "Sequence: Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"mitigates\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_role_subject-Risk_Assessment-Document-COND",
    "Trigger": "Sequence: Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"mitigates\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_role_subject-Risk_Assessment-Document-COND-CONST",
    "Trigger": "Sequence: Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"mitigates\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-safety_goal_verification_role_subject-Risk_Assessment-Document-CONST",
    "Trigger": "Sequence: Risk Assessment --[Mitigates]--> Plan --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"mitigates\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-security_audit-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "Security auditor shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"audits\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-security_audit-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Security auditor shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"audits\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-security_audit-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Security auditor shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"audits\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-security_audit-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "Security auditor shall <action (\"plans\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"audits\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-security_audit_role_subject-Plan-Document",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"audits\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-security_audit_role_subject-Plan-Document-COND",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"audits\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-security_audit_role_subject-Plan-Document-COND-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"audits\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-security_audit_role_subject-Plan-Document-CONST",
    "Trigger": "Sequence: Plan --[Plans]--> Process --[Audits]--> Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"plans\")> the <object1_id> (<object1_class>), <action (\"audits\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Validation team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Validation team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Validation team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Validation team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Validation team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "Validation team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_validation_role_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), and <action (\"produces\")> the <object3_id> (<object3_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Validation team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Validation team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Validation team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Validation team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Validation team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, Validation team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "Validation team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-sotif_scenario_verification_role_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Develops]--> Test Suite --[Verify]--> Plan --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"develops\")> the <object2_id> (<object2_class>), <action (\"verify\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "Cybersecurity team shall <action (\"assesses\")> the <object1_id> (<object1_class>) using the <object0_id> (<object0_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Field_Data-Document",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Field_Data-Document-COND",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Field_Data-Document-COND-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Field_Data-Document-CONST",
    "Trigger": "Sequence: Field Data --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Hazard-Document",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Hazard-Document-COND",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Hazard-Document-COND-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Hazard-Document-CONST",
    "Trigger": "Sequence: Hazard --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Security_Threat-Document",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Security_Threat-Document-COND",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>).",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Security_Threat-Document-COND-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "When <condition>, <object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<condition>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  },
  {
    "Pattern ID": "SEQ-threat_analysis_validation_role_subject-Security_Threat-Document-CONST",
    "Trigger": "Sequence: Security Threat --[Assesses]--> Risk Assessment --[Mitigates]--> Plan --[Validate]--> Report --[Produces]--> Document",
    "Template": "<object0_id> (<object0_class>) shall <action (\"assesses\")> the <object1_id> (<object1_class>), <action (\"mitigates\")> the <object2_id> (<object2_class>), <action (\"validate\")> the <object3_id> (<object3_class>), and <action (\"produces\")> the <object4_id> (<object4_class>) constrained by <constraint>.",
    "Variables": [
      "<object0_id>",
      "<object0_class>",
      "<object1_id>",
      "<object1_class>",
      "<object2_id>",
      "<object2_class>",
      "<object3_id>",
      "<object3_class>",
      "<object4_id>",
      "<object4_class>",
      "<acceptance_criteria>",
      "<constraint>"
    ],
    "Notes": "Auto-generated from sequence rules."
  }
]